{"version":3,"sources":["../../src/pages/application/application.module.ts","../../node_modules/text-mask-core/dist/textMaskCore.js","../../node_modules/google-libphonenumber/dist/libphonenumber.js","../../node_modules/angular2-text-mask/dist/angular2TextMask.js","../../src/pages/application/application.ts","../../src/validators/phone.validator.ts","../../src/pages/application/application.model.ts","../../node_modules/text-mask-addons/dist/emailMask.js"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B,iBAAiB;AAChD;AACA,yDAAyD,cAAc;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,UAAU,eAAe,iBAAiB,GAAG,gBAAgB;AAC/F,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa,IAAI;AACvC;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,+BAA+B;AAC/B,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,+CAA+C;AAC/C,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,MAAM,IAAI;AACnC;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,sBAAsB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,sBAAsB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA,6BAA6B,GAAG;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sDAAsD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA,GAAG;AACH;AACA;AACA,kDAAkD,aAAa,QAAQ,cAAc,8BAA8B,WAAW,qCAAqC,2CAA2C,qBAAqB,iBAAiB,cAAc,EAAE,EAAE,QAAQ,YAAY,aAAa,WAAW,eAAe;AACjU,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,gBAAgB,QAAQ,KAAK;AAC7B,GAAG;AACH;AACA,gBAAgB,QAAQ,KAAK;AAC7B,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD,4HAA4H;AAC5H;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,uBAAuB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD,sCAAsC,+BAA+B;AACrE;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA,OAAO;AACP,mCAAmC;AACnC,OAAO;AACP,kCAAkC;AAClC,OAAO;AACP,kCAAkC;AAClC,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD,iBAAiB,8BAA8B;AAC/C;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,4BAA4B;AACtC;AACA;AACA;AACA;AACA,CAAC;AACD,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,gEAAgE,sBAAsB;AACtF;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wDAAwD;AACxD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL,+GAA+G;AAC/G,GAAG;AACH;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;AACD,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA,CAAC;AACD;AACA,4LAA4L,wCAAwC,aAAa,YAAY,eAAe,uBAAuB;AACnS,CAAC;AACD;AACA;AACA;AACA,2CAA2C,4BAA4B,KAAK;AAC5E;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,OAAO;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,QAAQ,cAAc;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,QAAQ,QAAQ;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,uEAAuE,OAAO;AAC9E;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,sFAAsF,OAAO;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,qFAAqF,OAAO;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,uEAAuE,OAAO;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,uEAAuE,OAAO;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,OAAO;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,OAAO;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,cAAc;AACpD,YAAY;AACZ;AACA;AACA;AACA;AACA,GAAG;AACH,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA,GAAG;AACH,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA,yBAAyB,sBAAsB;AAC/C;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,sBAAsB;AACxE;AACA;AACA,aAAa,OAAO;AACpB,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnuBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA,mBAAmB,0CAA0C;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,QAAQ,OAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,uEAAuE;AACzF,sDAAsD,cAAc;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,0BAA0B;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+GAA+G,OAAO;AACtH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oCAAoC,oCAAoC,wCAAwC,+CAA+C,sCAAsC,mFAAmF;AACrU,GAAG;AACH;AACA;AACA;AACA,sEAAsE;AACtE,oEAAoE;AACpE,oEAAoE;AACpE,wEAAwE;AACxE,+EAA+E;AAC/E,yEAAyE;AACzE,2GAA2G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM,YAAY,YAAY,cAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yBAAyB,IAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,yCAAyC,QAAQ;AACjD;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,8BAA8B;AAC9B;AACA;AACA,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kJAAkJ,iBAAiB;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,cAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,yBAAyB,cAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA,aAAa,cAAc;AAC3B;AACA,mBAAmB,cAAc;AACjC;AACA;AACA,eAAe,cAAc;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,4DAA4D;AAC7F;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,cAAc;AACrC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,cAAc;AACrE;AACA;AACA;AACA;AACA,6CAA6C,cAAc;AAC3D;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,cAAc;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjyFAAyF,KAAK,wFAAwF,KAAK,wGAAwG,KAAK;AAC9e,8DAA8D,KAAK,6HAA6H,KAAK,2GAA2G;AAChT;AACA;AACA;AACA;AACA;AACA,qIAAqI,GAAG,qEAAqE,KAAK,4FAA4F,KAAK,gGAAgG,MAAM;AACzZ,cAAc,KAAK,oFAAoF;AACvG;AACA;AACA;AACA;AACA;AACA,iIAAiI,GAAG,iEAAiE,KAAK,6GAA6G,KAAK,2GAA2G,KAAK,uGAAuG;AACnhB,KAAK,0GAA0G,KAAK,6GAA6G,KAAK,4GAA4G,KAAK,gHAAgH,KAAK;AAC5c,yCAAyC,MAAM,sGAAsG,MAAM,oGAAoG,MAAM,0GAA0G,MAAM,0GAA0G,MAAM;AACre,0FAA0F,MAAM,8GAA8G,MAAM,iHAAiH,MAAM,6GAA6G,MAAM;AAC9b,yCAAyC,KAAK,oFAAoF,MAAM,gFAAgF,MAAM,yFAAyF,MAAM,mGAAmG,MAAM,oFAAoF;AAC1f,MAAM,0FAA0F,MAAM,gGAAgG,MAAM,mGAAmG,MAAM,uHAAuH,MAAM;AAClb,sCAAsC,MAAM,6HAA6H,MAAM,0GAA0G,MAAM,mFAA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OAAO,EAAE,YAAY,EAAE;AAClhB,2DAA2D,EAAE,MAAM,EAAE,MAAM,EAAE,mCAAmC,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,sCAAsC,EAAE,MAAM,EAAE,MAAM,EAAE,kKAAkK,GAAG;AACvW,oGAAoG,EAAE,MAAM,EAAE,MAAM,EAAE,sFAAsF,GAAG,yEAAyE,EAAE,6GAA6G,EAAE;AACzY,qCAAqC,EAAE,MAAM,EAAE;AAC/C;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA,2DAA2D;AAC3D;AACA,6DAA6D;AAC7D,+DAA+D;AAC/D,oDAAoD;AACpD;AACA,8DAA8D;AAC9D,qDAAqD;AACrD,iEAAiE;AACjE;AACA,uEAAuE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,EAAE;AAClF,gIAAgI,8DAA8D;AAC9L,4RAA4R,GAAG;AAC/R;AACA,uHAAuH,IAAI;AAC3H,sQAAsQ,oNAAoN,IAAI;AAC9d;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,qCAAqC;AACrC,+CAA+C;AAC/C,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,OAAO;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,OAAO;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,OAAO;AACnkCAAkC,2EAA2E;AAC7G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,OAAO;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAwC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,KAAK;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4MAA4M,OAAO;AACnN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2IAA2I,OAAO;AAClwFAAwF,OAAO;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH,8CAA8C;AAC9J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE,2DAA2D,iBAAiB,EAAE,mRAAmR,EAAE;AACnW,+IAA+I,IAAI,wUAAwU,IAAI;AAC/d,wTAAwT,EAAE;AAC1T,6GAA6G,EAAE,sRAAsR,IAAI;AACzY,yHAAyH,EAAE,kFAAkF,EAAE,kDAAkD,IAAI,qLAAqL,EAAE,iBAAiB,EAAE;AAC/c,kGAAkG,EAAE,iSAAiS,IAAI,gDAAgD,EAAE;AAC3b,uUAAuU,IAAI;AAC3U,6HAA6H,IAAI,yXAAyX,EAAE,MAAM,IAAI;AACtgB,yHAAyH,EAAE,oLAAoL,IAAI,MAAM,IAAI,mCAAmC,EAAE,gDAAgD,EAAE;AACpZ,cAAc,IAAI,wDAAwD,EAAE,kSAAkS,EAAE,WAAW,EAAE;AAC7X,+DAA+D,EAAE,uHAAuH,IAAI;AAC5L,sCAAsC,IAAI,+CAA+C,EAAE,2LAA2L,IAAI,mCA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,8GAA8G,EAAE,ySAAyS,EAAE;AAC3Z,+eAA+e,EAAE;AACjf,sRAAsR,EAAE;AACxR,mFAAmF,IAAI,iXAAiX,EAAE,mKAAmK,EAAE;AAC/mB,iNAAiN,EAAE,mKAAmK,EAAE;AACxX,iBAAiB,EAAE,4RAA4R,EAAE,kKAAkK,EAAE;AACrd,uFAAuF,EAAE,+RAA+R,IAAI;AAC5X,mNAAmN,EAAE;AACrN,QAAQ,EAAE,uRAAuR,IAAI;AACrS,4KAA4K,IAAI,sNAAsN,EAAE,kEAAkE,IAAI;AAC9c,WAAW,IAAI,mVAAmV,IAAI;AACtW,uMAAuM,EAAE,6RAA6R,EAAE;AACxe,uRAAuR,EAAE;AACzR,wEAAwE,EAAE,iSAAiS,EAAE;AAC7W,0IAA0I,EAAE,2RAA2R,EAAE;AACza,4dAA4d,EAAE;AAC9d,oQAAoQ,EAAE;AACtQ,yDAAyD,EAAE,6RAA6R,IAAI;AAC5V,wIAAwI,IAAI,oSAAoS,EAAE;AAClb,mFAAmF,EAAE,iDAAiD,EAAE,+SAA+S,IAAI;AAC3b,qBAAqB,EAAE;AACvB;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,cAAc;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,cAAcvD;AACA;;;AAGA,CAAC,GAAG,EAAE,GAAG;AACT,CAAC,E;;;;;;;;ACznLD;AACA;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,oCAAoC;AACvE;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,gDAAgD,6BAA6B,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,qBAAqB;AAC1F,sEAAsE,sBAAsB;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG,kCAAkC;AACnI;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;;;;;;;;;;;;;;ACnH0C;AACkD;AACnC;AAIW;AACtB;AAEU;AAOxD;IAqBE,yBACS,OAAsB,EACtB,SAAoB,EACpB,WAAwB;QAFxB,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACpB,gBAAW,GAAX,WAAW,CAAa;QAnBjC,cAAS,GAAG,uEAAS,CAAC;QActB,kBAAa,GAAY,KAAK,CAAC;QA0G/B,wBAAmB,GAAG;YACpB,WAAW,EAAE,CAAC,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,yBAAyB,EAAC,CAAC;YACrE,UAAU,EAAE,CAAC,EAAC,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,wBAAwB,EA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","file":"0.js","sourcesContent":["import { TextMaskModule } from 'angular2-text-mask';\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { ApplicationPage } from './application';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ApplicationPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(ApplicationPage),\r\n    TextMaskModule\r\n  ],\r\n})\r\nexport class ApplicationPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/application/application.module.ts","!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r():\"function\"==typeof define&&define.amd?define([],r):\"object\"==typeof exports?exports.textMaskCore=r():e.textMaskCore=r()}(this,function(){return function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var t={};return r.m=e,r.c=t,r.p=\"\",r(0)}([function(e,r,t){\"use strict\";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(r,\"__esModule\",{value:!0});var o=t(3);Object.defineProperty(r,\"conformToMask\",{enumerable:!0,get:function(){return n(o).default}});var i=t(2);Object.defineProperty(r,\"adjustCaretPosition\",{enumerable:!0,get:function(){return n(i).default}});var a=t(5);Object.defineProperty(r,\"createTextMaskInputElement\",{enumerable:!0,get:function(){return n(a).default}})},function(e,r){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),r.placeholderChar=\"_\"},function(e,r){\"use strict\";function t(e){var r=e.previousConformedValue,t=void 0===r?o:r,i=e.previousPlaceholder,a=void 0===i?o:i,u=e.currentCaretPosition,l=void 0===u?0:u,s=e.conformedValue,f=e.rawValue,d=e.placeholderChar,c=e.placeholder,v=e.indexesOfPipedChars,p=void 0===v?n:v,h=e.caretTrapIndexes,g=void 0===h?n:h;if(0===l||!f.length)return 0;var m=f.length,y=t.length,b=c.length,C=s.length,P=m-y,x=P>0,O=0===y,k=P>1&&!x&&!O;if(k)return l;var j=x&&(t===s||s===c),M=0,T=void 0,w=void 0;if(j)M=l-P;else{var _=s.toLowerCase(),V=f.toLowerCase(),S=V.substr(0,l).split(o),N=S.filter(function(e){return _.indexOf(e)!==-1});w=N[N.length-1];var E=a.substr(0,N.length).split(o).filter(function(e){return e!==d}).length,A=c.substr(0,N.length).split(o).filter(function(e){return e!==d}).length,R=A!==E,I=void 0!==a[N.length-1]&&void 0!==c[N.length-2]&&a[N.length-1]!==d&&a[N.length-1]!==c[N.length-1]&&a[N.length-1]===c[N.length-2];!x&&(R||I)&&E>0&&c.indexOf(w)>-1&&void 0!==f[l]&&(T=!0,w=f[l]);for(var J=p.map(function(e){return _[e]}),q=J.filter(function(e){return e===w}).length,F=N.filter(function(e){return e===w}).length,L=c.substr(0,c.indexOf(d)).split(o).filter(function(e,r){return e===w&&f[r]!==e}).length,W=L+F+q+(T?1:0),z=0,B=0;B<C;B++){var D=_[B];if(M=B+1,D===w&&z++,z>=W)break}}if(x){for(var G=M,H=M;H<=b;H++)if(c[H]===d&&(G=H),c[H]===d||g.indexOf(H)!==-1||H===b)return G}else if(T){for(var K=M-1;K>=0;K--)if(s[K]===w||g.indexOf(K)!==-1||0===K)return K}else for(var Q=M;Q>=0;Q--)if(c[Q-1]===d||g.indexOf(Q)!==-1||0===Q)return Q}Object.defineProperty(r,\"__esModule\",{value:!0}),r.default=t;var n=[],o=\"\"},function(e,r,t){\"use strict\";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:a,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:a,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},n=t.guide,u=void 0===n||n,l=t.previousConformedValue,s=void 0===l?a:l,f=t.placeholderChar,d=void 0===f?i.placeholderChar:f,c=t.placeholder,v=void 0===c?(0,o.convertMaskToPlaceholder)(r,d):c,p=t.currentCaretPosition,h=t.keepCharPositions,g=u===!1&&void 0!==s,m=e.length,y=s.length,b=v.length,C=r.length,P=m-y,x=P>0,O=p+(x?-P:0),k=O+Math.abs(P);if(h===!0&&!x){for(var j=a,M=O;M<k;M++)v[M]===d&&(j+=d);e=e.slice(0,O)+j+e.slice(O,m)}for(var T=e.split(a).map(function(e,r){return{char:e,isNew:r>=O&&r<k}}),w=m-1;w>=0;w--){var _=T[w].char;if(_!==d){var V=w>=O&&y===C;_===v[V?w-P:w]&&T.splice(w,1)}}var S=a,N=!1;e:for(var E=0;E<b;E++){var A=v[E];if(A===d){if(T.length>0)for(;T.length>0;){var R=T.shift(),I=R.char,J=R.isNew;if(I===d&&g!==!0){S+=d;continue e}if(r[E].test(I)){if(h===!0&&J!==!1&&s!==a&&u!==!1&&x){for(var q=T.length,F=null,L=0;L<q;L++){var W=T[L];if(W.char!==d&&W.isNew===!1)break;if(W.char===d){F=L;break}}null!==F?(S+=I,T.splice(F,1)):E--}else S+=I;continue e}N=!0}g===!1&&(S+=v.substr(E,b));break}S+=A}if(g&&x===!1){for(var z=null,B=0;B<S.length;B++)v[B]===d&&(z=B);S=null!==z?S.substr(0,z+1):a}return{conformedValue:S,meta:{someCharsRejected:N}}}Object.defineProperty(r,\"__esModule\",{value:!0}),r.default=n;var o=t(4),i=t(1),a=\"\"},function(e,r,t){\"use strict\";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u.placeholderChar;if(e.indexOf(r)!==-1)throw new Error(\"Placeholder character must not be used as part of the mask. Please specify a character that is not present in your mask as your placeholder character.\\n\\n\"+(\"The placeholder character that was received is: \"+JSON.stringify(r)+\"\\n\\n\")+(\"The mask that was received is: \"+JSON.stringify(e)));return e.map(function(e){return e instanceof RegExp?r:e}).join(\"\")}function o(e){return\"string\"==typeof e||e instanceof String}function i(e){return\"number\"==typeof e&&void 0===e.length&&!isNaN(e)}function a(e){for(var r=[],t=void 0;t=e.indexOf(s),t!==-1;)r.push(t),e.splice(t,1);return{maskWithoutCaretTraps:e,indexes:r}}Object.defineProperty(r,\"__esModule\",{value:!0}),r.convertMaskToPlaceholder=n,r.isString=o,r.isNumber=i,r.processCaretTraps=a;var u=t(1),l=[],s=\"[]\"},function(e,r,t){\"use strict\";function n(e){return e&&e.__esModule?e:{default:e}}function o(e){var r={previousConformedValue:void 0,previousPlaceholder:void 0};return{state:r,update:function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e,o=n.inputElement,s=n.mask,d=n.guide,m=n.pipe,b=n.placeholderChar,C=void 0===b?p.placeholderChar:b,P=n.keepCharPositions,x=void 0!==P&&P,O=n.showMask,k=void 0!==O&&O;if(\"undefined\"==typeof t&&(t=o.value),t!==r.previousConformedValue){(\"undefined\"==typeof s?\"undefined\":l(s))===y&&void 0!==s.pipe&&void 0!==s.mask&&(m=s.pipe,s=s.mask);var j=void 0,M=void 0;if(s instanceof Array&&(j=(0,v.convertMaskToPlaceholder)(s,C)),s!==!1){var T=a(t),w=o.selectionEnd,_=r.previousConformedValue,V=r.previousPlaceholder,S=void 0;if((\"undefined\"==typeof s?\"undefined\":l(s))===h){if(M=s(T,{currentCaretPosition:w,previousConformedValue:_,placeholderChar:C}),M===!1)return;var N=(0,v.processCaretTraps)(M),E=N.maskWithoutCaretTraps,A=N.indexes;M=E,S=A,j=(0,v.convertMaskToPlaceholder)(M,C)}else M=s;var R={previousConformedValue:_,guide:d,placeholderChar:C,pipe:m,placeholder:j,currentCaretPosition:w,keepCharPositions:x},I=(0,c.default)(T,M,R),J=I.conformedValue,q=(\"undefined\"==typeof m?\"undefined\":l(m))===h,F={};q&&(F=m(J,u({rawValue:T},R)),F===!1?F={value:_,rejected:!0}:(0,v.isString)(F)&&(F={value:F}));var L=q?F.value:J,W=(0,f.default)({previousConformedValue:_,previousPlaceholder:V,conformedValue:L,placeholder:j,rawValue:T,currentCaretPosition:w,placeholderChar:C,indexesOfPipedChars:F.indexesOfPipedChars,caretTrapIndexes:S}),z=L===j&&0===W,B=k?j:g,D=z?B:L;r.previousConformedValue=D,r.previousPlaceholder=j,o.value!==D&&(o.value=D,i(o,W))}}}}}function i(e,r){document.activeElement===e&&(b?C(function(){return e.setSelectionRange(r,r,m)},0):e.setSelectionRange(r,r,m))}function a(e){if((0,v.isString)(e))return e;if((0,v.isNumber)(e))return String(e);if(void 0===e||null===e)return g;throw new Error(\"The 'value' provided to Text Mask needs to be a string or a number. The value received was:\\n\\n \"+JSON.stringify(e))}Object.defineProperty(r,\"__esModule\",{value:!0});var u=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};r.default=o;var s=t(2),f=n(s),d=t(3),c=n(d),v=t(4),p=t(1),h=\"function\",g=\"\",m=\"none\",y=\"object\",b=\"undefined\"!=typeof navigator&&/Android/i.test(navigator.userAgent),C=\"undefined\"!=typeof requestAnimationFrame?requestAnimationFrame:setTimeout}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/text-mask-core/dist/textMaskCore.js\n// module id = 720\n// module chunks = 0","(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.libphonenumber = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\r\nvar COMPILED = !0, goog = goog || {};\r\ngoog.global = this;\r\ngoog.isDef = function(a) {\r\n  return void 0 !== a;\r\n};\r\ngoog.isString = function(a) {\r\n  return \"string\" == typeof a;\r\n};\r\ngoog.isBoolean = function(a) {\r\n  return \"boolean\" == typeof a;\r\n};\r\ngoog.isNumber = function(a) {\r\n  return \"number\" == typeof a;\r\n};\r\ngoog.exportPath_ = function(a, b, c) {\r\n  a = a.split(\".\");\r\n  c = c || goog.global;\r\n  a[0] in c || \"undefined\" == typeof c.execScript || c.execScript(\"var \" + a[0]);\r\n  for (var d; a.length && (d = a.shift());) {\r\n    !a.length && goog.isDef(b) ? c[d] = b : c = c[d] && c[d] !== Object.prototype[d] ? c[d] : c[d] = {};\r\n  }\r\n};\r\ngoog.define = function(a, b) {\r\n  var c = b;\r\n  if (!COMPILED) {\r\n    var d = goog.global.CLOSURE_UNCOMPILED_DEFINES, e = goog.global.CLOSURE_DEFINES;\r\n    d && void 0 === d.nodeType && Object.prototype.hasOwnProperty.call(d, a) ? c = d[a] : e && void 0 === e.nodeType && Object.prototype.hasOwnProperty.call(e, a) && (c = e[a]);\r\n  }\r\n  goog.exportPath_(a, c);\r\n};\r\ngoog.DEBUG = !0;\r\ngoog.LOCALE = \"en\";\r\ngoog.TRUSTED_SITE = !0;\r\ngoog.STRICT_MODE_COMPATIBLE = !1;\r\ngoog.DISALLOW_TEST_ONLY_CODE = COMPILED && !goog.DEBUG;\r\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = !1;\r\ngoog.provide = function(a) {\r\n  if (goog.isInModuleLoader_()) {\r\n    throw Error(\"goog.provide can not be used within a module.\");\r\n  }\r\n  if (!COMPILED && goog.isProvided_(a)) {\r\n    throw Error('Namespace \"' + a + '\" already declared.');\r\n  }\r\n  goog.constructNamespace_(a);\r\n};\r\ngoog.constructNamespace_ = function(a, b) {\r\n  if (!COMPILED) {\r\n    delete goog.implicitNamespaces_[a];\r\n    for (var c = a; (c = c.substring(0, c.lastIndexOf(\".\"))) && !goog.getObjectByName(c);) {\r\n      goog.implicitNamespaces_[c] = !0;\r\n    }\r\n  }\r\n  goog.exportPath_(a, b);\r\n};\r\ngoog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\r\ngoog.module = function(a) {\r\n  if (!goog.isString(a) || !a || -1 == a.search(goog.VALID_MODULE_RE_)) {\r\n    throw Error(\"Invalid module identifier\");\r\n  }\r\n  if (!goog.isInGoogModuleLoader_()) {\r\n    throw Error(\"Module \" + a + \" has been loaded incorrectly. Note, modules cannot be loaded as normal scripts. They require some kind of pre-processing step. You're likely trying to load a module via a script tag or as a part of a concatenated bundle without rewriting the module. For more info see: https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.\");\r\n  }\r\n  if (goog.moduleLoaderState_.moduleName) {\r\n    throw Error(\"goog.module may only be called once per module.\");\r\n  }\r\n  goog.moduleLoaderState_.moduleName = a;\r\n  if (!COMPILED) {\r\n    if (goog.isProvided_(a)) {\r\n      throw Error('Namespace \"' + a + '\" already declared.');\r\n    }\r\n    delete goog.implicitNamespaces_[a];\r\n  }\r\n};\r\ngoog.module.get = function(a) {\r\n  if (!COMPILED && a in goog.loadedModules_) {\r\n    if (goog.loadedModules_[a].type != goog.ModuleType.GOOG) {\r\n      throw Error(\"Can only goog.module.get for goog.modules.\");\r\n    }\r\n    if (goog.loadedModules_[a].moduleId != a) {\r\n      throw Error(\"Cannot goog.module.get by path.\");\r\n    }\r\n  }\r\n  return goog.module.getInternal_(a);\r\n};\r\ngoog.module.getInternal_ = function(a) {\r\n  if (!COMPILED) {\r\n    if (a in goog.loadedModules_) {\r\n      return goog.loadedModules_[a].exports;\r\n    }\r\n    if (!goog.implicitNamespaces_[a]) {\r\n      return a = goog.getObjectByName(a), null != a ? a : null;\r\n    }\r\n  }\r\n  return null;\r\n};\r\ngoog.ModuleType = {ES6:\"es6\", GOOG:\"goog\"};\r\ngoog.moduleLoaderState_ = null;\r\ngoog.isInModuleLoader_ = function() {\r\n  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();\r\n};\r\ngoog.isInGoogModuleLoader_ = function() {\r\n  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;\r\n};\r\ngoog.isInEs6ModuleLoader_ = function() {\r\n  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6;\r\n};\r\ngoog.getModulePath_ = function() {\r\n  return goog.moduleLoaderState_ && goog.moduleLoaderState_.path;\r\n};\r\ngoog.module.declareLegacyNamespace = function() {\r\n  if (!COMPILED && !goog.isInGoogModuleLoader_()) {\r\n    throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");\r\n  }\r\n  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {\r\n    throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");\r\n  }\r\n  goog.moduleLoaderState_.declareLegacyNamespace = !0;\r\n};\r\ngoog.setTestOnly = function(a) {\r\n  if (goog.DISALLOW_TEST_ONLY_CODE) {\r\n    throw a = a || \"\", Error(\"Importing test-only code into non-debug environment\" + (a ? \": \" + a : \".\"));\r\n  }\r\n};\r\ngoog.forwardDeclare = function(a) {\r\n};\r\nCOMPILED || (goog.isProvided_ = function(a) {\r\n  return a in goog.loadedModules_ || !goog.implicitNamespaces_[a] && goog.isDefAndNotNull(goog.getObjectByName(a));\r\n}, goog.implicitNamespaces_ = {\"goog.module\":!0});\r\ngoog.getObjectByName = function(a, b) {\r\n  for (var c = a.split(\".\"), d = b || goog.global, e = 0; e < c.length; e++) {\r\n    if (d = d[c[e]], !goog.isDefAndNotNull(d)) {\r\n      return null;\r\n    }\r\n  }\r\n  return d;\r\n};\r\ngoog.globalize = function(a, b) {\r\n  var c = b || goog.global, d;\r\n  for (d in a) {\r\n    c[d] = a[d];\r\n  }\r\n};\r\ngoog.addDependency = function(a, b, c, d) {\r\n  !COMPILED && goog.DEPENDENCIES_ENABLED && goog.debugLoader_.addDependency(a, b, c, d);\r\n};\r\ngoog.ENABLE_DEBUG_LOADER = !0;\r\ngoog.logToConsole_ = function(a) {\r\n  goog.global.console && goog.global.console.error(a);\r\n};\r\ngoog.isPath_ = function(a) {\r\n  return 0 == a.indexOf(\"./\") || 0 == a.indexOf(\"../\");\r\n};\r\ngoog.require = function(a) {\r\n  if (goog.isPath_(a)) {\r\n    if (goog.isInGoogModuleLoader_()) {\r\n      if (!goog.getModulePath_()) {\r\n        throw Error(\"Current module has no path information. Was it loaded via goog.loadModule without a path argument?\");\r\n      }\r\n      a = goog.normalizePath_(goog.getModulePath_() + \"/../\" + a);\r\n    } else {\r\n      throw Error(\"Cannot require by path outside of goog.modules.\");\r\n    }\r\n  }\r\n  if (!COMPILED) {\r\n    goog.ENABLE_DEBUG_LOADER && goog.debugLoader_.requested(a);\r\n    if (goog.isProvided_(a)) {\r\n      if (goog.isInModuleLoader_()) {\r\n        return goog.module.getInternal_(a);\r\n      }\r\n    } else {\r\n      if (goog.ENABLE_DEBUG_LOADER) {\r\n        var b = goog.moduleLoaderState_;\r\n        goog.moduleLoaderState_ = null;\r\n        try {\r\n          goog.debugLoader_.load_(a);\r\n        } finally {\r\n          goog.moduleLoaderState_ = b;\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n};\r\ngoog.basePath = \"\";\r\ngoog.nullFunction = function() {\r\n};\r\ngoog.abstractMethod = function() {\r\n  throw Error(\"unimplemented abstract method\");\r\n};\r\ngoog.addSingletonGetter = function(a) {\r\n  a.instance_ = void 0;\r\n  a.getInstance = function() {\r\n    if (a.instance_) {\r\n      return a.instance_;\r\n    }\r\n    goog.DEBUG && (goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = a);\r\n    return a.instance_ = new a;\r\n  };\r\n};\r\ngoog.instantiatedSingletons_ = [];\r\ngoog.LOAD_MODULE_USING_EVAL = !0;\r\ngoog.SEAL_MODULE_EXPORTS = goog.DEBUG;\r\ngoog.loadedModules_ = {};\r\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\r\ngoog.TRANSPILE = \"detect\";\r\ngoog.TRANSPILER = \"transpile.js\";\r\ngoog.hasBadLetScoping = null;\r\ngoog.useSafari10Workaround = function() {\r\n  if (null == goog.hasBadLetScoping) {\r\n    try {\r\n      var a = !eval('\"use strict\";let x = 1; function f() { return typeof x; };f() == \"number\";');\r\n    } catch (b) {\r\n      a = !1;\r\n    }\r\n    goog.hasBadLetScoping = a;\r\n  }\r\n  return goog.hasBadLetScoping;\r\n};\r\ngoog.workaroundSafari10EvalBug = function(a) {\r\n  return \"(function(){\" + a + \"\\n;})();\\n\";\r\n};\r\ngoog.loadModule = function(a, b) {\r\n  var c = goog.moduleLoaderState_;\r\n  try {\r\n    goog.moduleLoaderState_ = {moduleName:\"\", declareLegacyNamespace:!1, type:goog.ModuleType.GOOG, path:b};\r\n    if (goog.isFunction(a)) {\r\n      var d = a.call(void 0, {});\r\n    } else {\r\n      if (goog.isString(a)) {\r\n        goog.useSafari10Workaround() && (a = goog.workaroundSafari10EvalBug(a)), d = goog.loadModuleFromSource_.call(void 0, a);\r\n      } else {\r\n        throw Error(\"Invalid module definition\");\r\n      }\r\n    }\r\n    var e = goog.moduleLoaderState_.moduleName;\r\n    if (goog.isString(e) && e) {\r\n      goog.moduleLoaderState_.declareLegacyNamespace ? goog.constructNamespace_(e, d) : goog.SEAL_MODULE_EXPORTS && Object.seal && \"object\" == typeof d && null != d && Object.seal(d);\r\n      var f = {exports:d, type:goog.ModuleType.GOOG, moduleId:goog.moduleLoaderState_.moduleName};\r\n      goog.loadedModules_[e] = f;\r\n      b && (goog.loadedModules_[b] = f);\r\n    } else {\r\n      throw Error('Invalid module name \"' + e + '\"');\r\n    }\r\n  } finally {\r\n    goog.moduleLoaderState_ = c;\r\n  }\r\n};\r\ngoog.loadModuleFromSource_ = function(a) {\r\n  eval(a);\r\n  return {};\r\n};\r\ngoog.normalizePath_ = function(a) {\r\n  a = a.split(\"/\");\r\n  for (var b = 0; b < a.length;) {\r\n    \".\" == a[b] ? a.splice(b, 1) : b && \"..\" == a[b] && a[b - 1] && \"..\" != a[b - 1] ? a.splice(--b, 2) : b++;\r\n  }\r\n  return a.join(\"/\");\r\n};\r\ngoog.loadFileSync_ = function(a) {\r\n  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {\r\n    return goog.global.CLOSURE_LOAD_FILE_SYNC(a);\r\n  }\r\n  try {\r\n    var b = new goog.global.XMLHttpRequest;\r\n    b.open(\"get\", a, !1);\r\n    b.send();\r\n    return 0 == b.status || 200 == b.status ? b.responseText : null;\r\n  } catch (c) {\r\n    return null;\r\n  }\r\n};\r\ngoog.transpile_ = function(a, b) {\r\n  var c = goog.global.$jscomp;\r\n  c || (goog.global.$jscomp = c = {});\r\n  var d = c.transpile;\r\n  if (!d) {\r\n    var e = goog.basePath + goog.TRANSPILER, f = goog.loadFileSync_(e);\r\n    if (f) {\r\n      (function() {\r\n        eval(f + \"\\n//# sourceURL=\" + e);\r\n      }).call(goog.global);\r\n      if (goog.global.$gwtExport && goog.global.$gwtExport.$jscomp && !goog.global.$gwtExport.$jscomp.transpile) {\r\n        throw Error('The transpiler did not properly export the \"transpile\" method. $gwtExport: ' + JSON.stringify(goog.global.$gwtExport));\r\n      }\r\n      goog.global.$jscomp.transpile = goog.global.$gwtExport.$jscomp.transpile;\r\n      c = goog.global.$jscomp;\r\n      d = c.transpile;\r\n    }\r\n  }\r\n  d || (d = c.transpile = function(a, b) {\r\n    goog.logToConsole_(b + \" requires transpilation but no transpiler was found.\");\r\n    return a;\r\n  });\r\n  return d(a, b);\r\n};\r\ngoog.typeOf = function(a) {\r\n  var b = typeof a;\r\n  if (\"object\" == b) {\r\n    if (a) {\r\n      if (a instanceof Array) {\r\n        return \"array\";\r\n      }\r\n      if (a instanceof Object) {\r\n        return b;\r\n      }\r\n      var c = Object.prototype.toString.call(a);\r\n      if (\"[object Window]\" == c) {\r\n        return \"object\";\r\n      }\r\n      if (\"[object Array]\" == c || \"number\" == typeof a.length && \"undefined\" != typeof a.splice && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"splice\")) {\r\n        return \"array\";\r\n      }\r\n      if (\"[object Function]\" == c || \"undefined\" != typeof a.call && \"undefined\" != typeof a.propertyIsEnumerable && !a.propertyIsEnumerable(\"call\")) {\r\n        return \"function\";\r\n      }\r\n    } else {\r\n      return \"null\";\r\n    }\r\n  } else {\r\n    if (\"function\" == b && \"undefined\" == typeof a.call) {\r\n      return \"object\";\r\n    }\r\n  }\r\n  return b;\r\n};\r\ngoog.isNull = function(a) {\r\n  return null === a;\r\n};\r\ngoog.isDefAndNotNull = function(a) {\r\n  return null != a;\r\n};\r\ngoog.isArray = function(a) {\r\n  return \"array\" == goog.typeOf(a);\r\n};\r\ngoog.isArrayLike = function(a) {\r\n  var b = goog.typeOf(a);\r\n  return \"array\" == b || \"object\" == b && \"number\" == typeof a.length;\r\n};\r\ngoog.isDateLike = function(a) {\r\n  return goog.isObject(a) && \"function\" == typeof a.getFullYear;\r\n};\r\ngoog.isFunction = function(a) {\r\n  return \"function\" == goog.typeOf(a);\r\n};\r\ngoog.isObject = function(a) {\r\n  var b = typeof a;\r\n  return \"object\" == b && null != a || \"function\" == b;\r\n};\r\ngoog.getUid = function(a) {\r\n  return a[goog.UID_PROPERTY_] || (a[goog.UID_PROPERTY_] = ++goog.uidCounter_);\r\n};\r\ngoog.hasUid = function(a) {\r\n  return !!a[goog.UID_PROPERTY_];\r\n};\r\ngoog.removeUid = function(a) {\r\n  null !== a && \"removeAttribute\" in a && a.removeAttribute(goog.UID_PROPERTY_);\r\n  try {\r\n    delete a[goog.UID_PROPERTY_];\r\n  } catch (b) {\r\n  }\r\n};\r\ngoog.UID_PROPERTY_ = \"closure_uid_\" + (1e9 * Math.random() >>> 0);\r\ngoog.uidCounter_ = 0;\r\ngoog.getHashCode = goog.getUid;\r\ngoog.removeHashCode = goog.removeUid;\r\ngoog.cloneObject = function(a) {\r\n  var b = goog.typeOf(a);\r\n  if (\"object\" == b || \"array\" == b) {\r\n    if (\"function\" === typeof a.clone) {\r\n      return a.clone();\r\n    }\r\n    b = \"array\" == b ? [] : {};\r\n    for (var c in a) {\r\n      b[c] = goog.cloneObject(a[c]);\r\n    }\r\n    return b;\r\n  }\r\n  return a;\r\n};\r\ngoog.bindNative_ = function(a, b, c) {\r\n  return a.call.apply(a.bind, arguments);\r\n};\r\ngoog.bindJs_ = function(a, b, c) {\r\n  if (!a) {\r\n    throw Error();\r\n  }\r\n  if (2 < arguments.length) {\r\n    var d = Array.prototype.slice.call(arguments, 2);\r\n    return function() {\r\n      var c = Array.prototype.slice.call(arguments);\r\n      Array.prototype.unshift.apply(c, d);\r\n      return a.apply(b, c);\r\n    };\r\n  }\r\n  return function() {\r\n    return a.apply(b, arguments);\r\n  };\r\n};\r\ngoog.bind = function(a, b, c) {\r\n  Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf(\"native code\") ? goog.bind = goog.bindNative_ : goog.bind = goog.bindJs_;\r\n  return goog.bind.apply(null, arguments);\r\n};\r\ngoog.partial = function(a, b) {\r\n  var c = Array.prototype.slice.call(arguments, 1);\r\n  return function() {\r\n    var b = c.slice();\r\n    b.push.apply(b, arguments);\r\n    return a.apply(this, b);\r\n  };\r\n};\r\ngoog.mixin = function(a, b) {\r\n  for (var c in b) {\r\n    a[c] = b[c];\r\n  }\r\n};\r\ngoog.now = goog.TRUSTED_SITE && Date.now || function() {\r\n  return +new Date;\r\n};\r\ngoog.globalEval = function(a) {\r\n  if (goog.global.execScript) {\r\n    goog.global.execScript(a, \"JavaScript\");\r\n  } else {\r\n    if (goog.global.eval) {\r\n      if (null == goog.evalWorksForGlobals_) {\r\n        try {\r\n          goog.global.eval(\"var _evalTest_ = 1;\");\r\n        } catch (d) {\r\n        }\r\n        if (\"undefined\" != typeof goog.global._evalTest_) {\r\n          try {\r\n            delete goog.global._evalTest_;\r\n          } catch (d) {\r\n          }\r\n          goog.evalWorksForGlobals_ = !0;\r\n        } else {\r\n          goog.evalWorksForGlobals_ = !1;\r\n        }\r\n      }\r\n      if (goog.evalWorksForGlobals_) {\r\n        goog.global.eval(a);\r\n      } else {\r\n        var b = goog.global.document, c = b.createElement(\"SCRIPT\");\r\n        c.type = \"text/javascript\";\r\n        c.defer = !1;\r\n        c.appendChild(b.createTextNode(a));\r\n        b.head.appendChild(c);\r\n        b.head.removeChild(c);\r\n      }\r\n    } else {\r\n      throw Error(\"goog.globalEval not available\");\r\n    }\r\n  }\r\n};\r\ngoog.evalWorksForGlobals_ = null;\r\ngoog.getCssName = function(a, b) {\r\n  if (\".\" == String(a).charAt(0)) {\r\n    throw Error('className passed in goog.getCssName must not start with \".\". You passed: ' + a);\r\n  }\r\n  var c = function(a) {\r\n    return goog.cssNameMapping_[a] || a;\r\n  }, d = function(a) {\r\n    a = a.split(\"-\");\r\n    for (var b = [], d = 0; d < a.length; d++) {\r\n      b.push(c(a[d]));\r\n    }\r\n    return b.join(\"-\");\r\n  };\r\n  d = goog.cssNameMapping_ ? \"BY_WHOLE\" == goog.cssNameMappingStyle_ ? c : d : function(a) {\r\n    return a;\r\n  };\r\n  d = b ? a + \"-\" + d(b) : d(a);\r\n  return goog.global.CLOSURE_CSS_NAME_MAP_FN ? goog.global.CLOSURE_CSS_NAME_MAP_FN(d) : d;\r\n};\r\ngoog.setCssNameMapping = function(a, b) {\r\n  goog.cssNameMapping_ = a;\r\n  goog.cssNameMappingStyle_ = b;\r\n};\r\n!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING && (goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING);\r\ngoog.getMsg = function(a, b) {\r\n  b && (a = a.replace(/\\{\\$([^}]+)}/g, function(a, d) {\r\n    return null != b && d in b ? b[d] : a;\r\n  }));\r\n  return a;\r\n};\r\ngoog.getMsgWithFallback = function(a, b) {\r\n  return a;\r\n};\r\ngoog.exportSymbol = function(a, b, c) {\r\n  goog.exportPath_(a, b, c);\r\n};\r\ngoog.exportProperty = function(a, b, c) {\r\n  a[b] = c;\r\n};\r\ngoog.inherits = function(a, b) {\r\n  function c() {\r\n  }\r\n  c.prototype = b.prototype;\r\n  a.superClass_ = b.prototype;\r\n  a.prototype = new c;\r\n  a.prototype.constructor = a;\r\n  a.base = function(a, c, f) {\r\n    for (var d = Array(arguments.length - 2), e = 2; e < arguments.length; e++) {\r\n      d[e - 2] = arguments[e];\r\n    }\r\n    return b.prototype[c].apply(a, d);\r\n  };\r\n};\r\ngoog.base = function(a, b, c) {\r\n  var d = arguments.callee.caller;\r\n  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !d) {\r\n    throw Error(\"arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C\");\r\n  }\r\n  if (\"undefined\" !== typeof d.superClass_) {\r\n    for (var e = Array(arguments.length - 1), f = 1; f < arguments.length; f++) {\r\n      e[f - 1] = arguments[f];\r\n    }\r\n    return d.superClass_.constructor.apply(a, e);\r\n  }\r\n  if (\"string\" != typeof b && \"symbol\" != typeof b) {\r\n    throw Error(\"method names provided to goog.base must be a string or a symbol\");\r\n  }\r\n  e = Array(arguments.length - 2);\r\n  for (f = 2; f < arguments.length; f++) {\r\n    e[f - 2] = arguments[f];\r\n  }\r\n  f = !1;\r\n  for (var g = a.constructor; g; g = g.superClass_ && g.superClass_.constructor) {\r\n    if (g.prototype[b] === d) {\r\n      f = !0;\r\n    } else {\r\n      if (f) {\r\n        return g.prototype[b].apply(a, e);\r\n      }\r\n    }\r\n  }\r\n  if (a[b] === d) {\r\n    return a.constructor.prototype[b].apply(a, e);\r\n  }\r\n  throw Error(\"goog.base called from a method of one name to a method of a different name\");\r\n};\r\ngoog.scope = function(a) {\r\n  if (goog.isInModuleLoader_()) {\r\n    throw Error(\"goog.scope is not supported within a module.\");\r\n  }\r\n  a.call(goog.global);\r\n};\r\nCOMPILED || (goog.global.COMPILED = COMPILED);\r\ngoog.defineClass = function(a, b) {\r\n  var c = b.constructor, d = b.statics;\r\n  c && c != Object.prototype.constructor || (c = function() {\r\n    throw Error(\"cannot instantiate an interface (no constructor defined).\");\r\n  });\r\n  c = goog.defineClass.createSealingConstructor_(c, a);\r\n  a && goog.inherits(c, a);\r\n  delete b.constructor;\r\n  delete b.statics;\r\n  goog.defineClass.applyProperties_(c.prototype, b);\r\n  null != d && (d instanceof Function ? d(c) : goog.defineClass.applyProperties_(c, d));\r\n  return c;\r\n};\r\ngoog.defineClass.SEAL_CLASS_INSTANCES = goog.DEBUG;\r\ngoog.defineClass.createSealingConstructor_ = function(a, b) {\r\n  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {\r\n    return a;\r\n  }\r\n  var c = !goog.defineClass.isUnsealable_(b), d = function() {\r\n    var b = a.apply(this, arguments) || this;\r\n    b[goog.UID_PROPERTY_] = b[goog.UID_PROPERTY_];\r\n    this.constructor === d && c && Object.seal instanceof Function && Object.seal(b);\r\n    return b;\r\n  };\r\n  return d;\r\n};\r\ngoog.defineClass.isUnsealable_ = function(a) {\r\n  return a && a.prototype && a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];\r\n};\r\ngoog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\r\ngoog.defineClass.applyProperties_ = function(a, b) {\r\n  for (var c in b) {\r\n    Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);\r\n  }\r\n  for (var d = 0; d < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; d++) {\r\n    c = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d], Object.prototype.hasOwnProperty.call(b, c) && (a[c] = b[c]);\r\n  }\r\n};\r\ngoog.tagUnsealableClass = function(a) {\r\n  !COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES && (a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = !0);\r\n};\r\ngoog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = \"goog_defineClass_legacy_unsealable\";\r\n!COMPILED && goog.DEPENDENCIES_ENABLED && (goog.inHtmlDocument_ = function() {\r\n  var a = goog.global.document;\r\n  return null != a && \"write\" in a;\r\n}, goog.isDocumentLoading_ = function() {\r\n  var a = goog.global.document;\r\n  return a.attachEvent ? \"complete\" != a.readyState : \"loading\" == a.readyState;\r\n}, goog.findBasePath_ = function() {\r\n  if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) {\r\n    goog.basePath = goog.global.CLOSURE_BASE_PATH;\r\n  } else {\r\n    if (goog.inHtmlDocument_()) {\r\n      var a = goog.global.document, b = a.currentScript;\r\n      a = b ? [b] : a.getElementsByTagName(\"SCRIPT\");\r\n      for (b = a.length - 1; 0 <= b; --b) {\r\n        var c = a[b].src, d = c.lastIndexOf(\"?\");\r\n        d = -1 == d ? c.length : d;\r\n        if (\"base.js\" == c.substr(d - 7, 7)) {\r\n          goog.basePath = c.substr(0, d - 7);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}, goog.findBasePath_(), goog.Transpiler = function() {\r\n  this.requiresTranspilation_ = null;\r\n}, goog.Transpiler.prototype.createRequiresTranspilation_ = function() {\r\n  function a(a, b) {\r\n    d ? c[a] = !0 : b() ? c[a] = !1 : d = c[a] = !0;\r\n  }\r\n  function b(a) {\r\n    try {\r\n      return !!eval(a);\r\n    } catch (g) {\r\n      return !1;\r\n    }\r\n  }\r\n  var c = {es3:!1}, d = !1, e = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : \"\";\r\n  a(\"es5\", function() {\r\n    return b(\"[1,].length==1\");\r\n  });\r\n  a(\"es6\", function() {\r\n    var a = e.match(/Edge\\/(\\d+)(\\.\\d)*/i);\r\n    return a && 15 > Number(a[1]) ? !1 : b('(()=>{\"use strict\";class X{constructor(){if(new.target!=String)throw 1;this.x=42}}let q=Reflect.construct(X,[],String);if(q.x!=42||!(q instanceof String))throw 1;for(const a of[2,3]){if(a==2)continue;function f(z={a}){let a=0;return z.a}{function f(){return 0;}}return f()==3}})()');\r\n  });\r\n  a(\"es6-impl\", function() {\r\n    return !0;\r\n  });\r\n  a(\"es7\", function() {\r\n    return b(\"2 ** 2 == 4\");\r\n  });\r\n  a(\"es8\", function() {\r\n    return b(\"async () => 1, true\");\r\n  });\r\n  a(\"es9\", function() {\r\n    return b(\"({...rest} = {}), true\");\r\n  });\r\n  a(\"es_next\", function() {\r\n    return b(\"({...rest} = {}), true\");\r\n  });\r\n  return c;\r\n}, goog.Transpiler.prototype.needsTranspile = function(a, b) {\r\n  if (\"always\" == goog.TRANSPILE) {\r\n    return !0;\r\n  }\r\n  if (\"never\" == goog.TRANSPILE) {\r\n    return !1;\r\n  }\r\n  this.requiresTranspilation_ || (this.requiresTranspilation_ = this.createRequiresTranspilation_());\r\n  if (a in this.requiresTranspilation_) {\r\n    return this.requiresTranspilation_[a];\r\n  }\r\n  throw Error(\"Unknown language mode: \" + a);\r\n}, goog.Transpiler.prototype.transpile = function(a, b) {\r\n  return goog.transpile_(a, b);\r\n}, goog.transpiler_ = new goog.Transpiler, goog.protectScriptTag_ = function(a) {\r\n  return a.replace(/<\\/(SCRIPT)/ig, \"\\\\x3c/$1\");\r\n}, goog.DebugLoader_ = function() {\r\n  this.dependencies_ = {};\r\n  this.idToPath_ = {};\r\n  this.written_ = {};\r\n  this.loadingDeps_ = [];\r\n  this.depsToLoad_ = [];\r\n  this.paused_ = !1;\r\n  this.factory_ = new goog.DependencyFactory(goog.transpiler_);\r\n  this.deferredCallbacks_ = {};\r\n  this.deferredQueue_ = [];\r\n}, goog.DebugLoader_.prototype.bootstrap = function(a, b) {\r\n  function c() {\r\n    d && (goog.global.setTimeout(d, 0), d = null);\r\n  }\r\n  var d = b;\r\n  if (a.length) {\r\n    for (var e = [], f = 0; f < a.length; f++) {\r\n      var g = this.getPathFromDeps_(a[f]);\r\n      if (!g) {\r\n        throw Error(\"Unregonized namespace: \" + a[f]);\r\n      }\r\n      e.push(this.dependencies_[g]);\r\n    }\r\n    g = goog.require;\r\n    var h = 0;\r\n    for (f = 0; f < a.length; f++) {\r\n      g(a[f]), e[f].onLoad(function() {\r\n        ++h == a.length && c();\r\n      });\r\n    }\r\n  } else {\r\n    c();\r\n  }\r\n}, goog.DebugLoader_.prototype.loadClosureDeps = function() {\r\n  this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + \"deps.js\"), \"deps.js\", [], [], {}, !1));\r\n  this.loadDeps_();\r\n}, goog.DebugLoader_.prototype.requested = function(a, b) {\r\n  var c = this.getPathFromDeps_(a);\r\n  if (c && (b || this.areDepsLoaded_(this.dependencies_[c].requires))) {\r\n    var d = this.deferredCallbacks_[c];\r\n    d && (delete this.deferredCallbacks_[c], d());\r\n  }\r\n}, goog.DebugLoader_.prototype.setDependencyFactory = function(a) {\r\n  this.factory_ = a;\r\n}, goog.DebugLoader_.prototype.load_ = function(a) {\r\n  if (this.getPathFromDeps_(a)) {\r\n    var b = this, c = [], d = function(a) {\r\n      var e = b.getPathFromDeps_(a);\r\n      if (!e) {\r\n        throw Error(\"Bad dependency path or symbol: \" + a);\r\n      }\r\n      if (!b.written_[e]) {\r\n        b.written_[e] = !0;\r\n        a = b.dependencies_[e];\r\n        for (e = 0; e < a.requires.length; e++) {\r\n          goog.isProvided_(a.requires[e]) || d(a.requires[e]);\r\n        }\r\n        c.push(a);\r\n      }\r\n    };\r\n    d(a);\r\n    a = !!this.depsToLoad_.length;\r\n    this.depsToLoad_ = this.depsToLoad_.concat(c);\r\n    this.paused_ || a || this.loadDeps_();\r\n  } else {\r\n    throw a = \"goog.require could not find: \" + a, goog.logToConsole_(a), Error(a);\r\n  }\r\n}, goog.DebugLoader_.prototype.loadDeps_ = function() {\r\n  for (var a = this, b = this.paused_; this.depsToLoad_.length && !b;) {\r\n    (function() {\r\n      var c = !1, d = a.depsToLoad_.shift(), e = !1;\r\n      a.loading_(d);\r\n      var f = {pause:function() {\r\n        if (c) {\r\n          throw Error(\"Cannot call pause after the call to load.\");\r\n        }\r\n        b = !0;\r\n      }, resume:function() {\r\n        c ? a.resume_() : b = !1;\r\n      }, loaded:function() {\r\n        if (e) {\r\n          throw Error(\"Double call to loaded.\");\r\n        }\r\n        e = !0;\r\n        a.loaded_(d);\r\n      }, pending:function() {\r\n        for (var b = [], c = 0; c < a.loadingDeps_.length; c++) {\r\n          b.push(a.loadingDeps_[c]);\r\n        }\r\n        return b;\r\n      }, setModuleState:function(a, b) {\r\n        goog.moduleLoaderState_ = {path:a, type:b, moduleName:\"\", declareLegacyNamespace:!1};\r\n      }, registerEs6ModuleExports:function(a, b) {\r\n        goog.loadedModules_[a] = {exports:b, type:goog.ModuleType.ES6, moduleId:\"\"};\r\n      }, registerGoogModuleExports:function(a, b) {\r\n        goog.loadedModules_[a] = {exports:b, type:goog.ModuleType.GOOG, moduleId:a};\r\n      }, clearModuleState:function() {\r\n        goog.moduleLoaderState_ = null;\r\n      }, defer:function(b) {\r\n        if (c) {\r\n          throw Error(\"Cannot register with defer after the call to load.\");\r\n        }\r\n        a.defer_(d, b);\r\n      }, areDepsLoaded:function() {\r\n        return a.areDepsLoaded_(d.requires);\r\n      }};\r\n      try {\r\n        d.load(f);\r\n      } finally {\r\n        c = !0;\r\n      }\r\n    })();\r\n  }\r\n  b && this.pause_();\r\n}, goog.DebugLoader_.prototype.pause_ = function() {\r\n  this.paused_ = !0;\r\n}, goog.DebugLoader_.prototype.resume_ = function() {\r\n  this.paused_ && (this.paused_ = !1, this.loadDeps_());\r\n}, goog.DebugLoader_.prototype.loading_ = function(a) {\r\n  this.loadingDeps_.push(a);\r\n}, goog.DebugLoader_.prototype.loaded_ = function(a) {\r\n  for (var b = 0; b < this.loadingDeps_.length; b++) {\r\n    if (this.loadingDeps_[b] == a) {\r\n      this.loadingDeps_.splice(b, 1);\r\n      break;\r\n    }\r\n  }\r\n  for (b = 0; b < this.deferredQueue_.length; b++) {\r\n    if (this.deferredQueue_[b] == a.path) {\r\n      this.deferredQueue_.splice(b, 1);\r\n      break;\r\n    }\r\n  }\r\n  if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length) {\r\n    for (; this.deferredQueue_.length;) {\r\n      this.requested(this.deferredQueue_.shift(), !0);\r\n    }\r\n  }\r\n  a.loaded();\r\n}, goog.DebugLoader_.prototype.areDepsLoaded_ = function(a) {\r\n  for (var b = 0; b < a.length; b++) {\r\n    var c = this.getPathFromDeps_(a[b]);\r\n    if (!c || !(c in this.deferredCallbacks_ || goog.isProvided_(a[b]))) {\r\n      return !1;\r\n    }\r\n  }\r\n  return !0;\r\n}, goog.DebugLoader_.prototype.getPathFromDeps_ = function(a) {\r\n  return a in this.idToPath_ ? this.idToPath_[a] : a in this.dependencies_ ? a : null;\r\n}, goog.DebugLoader_.prototype.defer_ = function(a, b) {\r\n  this.deferredCallbacks_[a.path] = b;\r\n  this.deferredQueue_.push(a.path);\r\n}, goog.LoadController = function() {\r\n}, goog.LoadController.prototype.pause = function() {\r\n}, goog.LoadController.prototype.resume = function() {\r\n}, goog.LoadController.prototype.loaded = function() {\r\n}, goog.LoadController.prototype.pending = function() {\r\n}, goog.LoadController.prototype.registerEs6ModuleExports = function(a, b) {\r\n}, goog.LoadController.prototype.setModuleState = function(a, b) {\r\n}, goog.LoadController.prototype.clearModuleState = function() {\r\n}, goog.LoadController.prototype.defer = function(a) {\r\n}, goog.LoadController.prototype.areDepsLoaded = function() {\r\n}, goog.Dependency = function(a, b, c, d, e) {\r\n  this.path = a;\r\n  this.relativePath = b;\r\n  this.provides = c;\r\n  this.requires = d;\r\n  this.loadFlags = e;\r\n  this.loaded_ = !1;\r\n  this.loadCallbacks_ = [];\r\n}, goog.Dependency.prototype.onLoad = function(a) {\r\n  this.loaded_ ? a() : this.loadCallbacks_.push(a);\r\n}, goog.Dependency.prototype.loaded = function() {\r\n  this.loaded_ = !0;\r\n  var a = this.loadCallbacks_;\r\n  this.loadCallbacks_ = [];\r\n  for (var b = 0; b < a.length; b++) {\r\n    a[b]();\r\n  }\r\n}, goog.Dependency.defer_ = !1, goog.Dependency.callbackMap_ = {}, goog.Dependency.registerCallback_ = function(a) {\r\n  var b = Math.random().toString(32);\r\n  goog.Dependency.callbackMap_[b] = a;\r\n  return b;\r\n}, goog.Dependency.unregisterCallback_ = function(a) {\r\n  delete goog.Dependency.callbackMap_[a];\r\n}, goog.Dependency.callback_ = function(a, b) {\r\n  if (a in goog.Dependency.callbackMap_) {\r\n    for (var c = goog.Dependency.callbackMap_[a], d = [], e = 1; e < arguments.length; e++) {\r\n      d.push(arguments[e]);\r\n    }\r\n    c.apply(void 0, d);\r\n  } else {\r\n    throw Error(\"Callback key \" + a + \" does not exist (was base.js loaded more than once?).\");\r\n  }\r\n}, goog.Dependency.prototype.load = function(a) {\r\n  if (goog.global.CLOSURE_IMPORT_SCRIPT) {\r\n    goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a.loaded() : a.pause();\r\n  } else {\r\n    if (goog.inHtmlDocument_()) {\r\n      var b = goog.global.document;\r\n      if (\"complete\" == b.readyState && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {\r\n        if (/\\bdeps.js$/.test(this.path)) {\r\n          a.loaded();\r\n          return;\r\n        }\r\n        throw Error('Cannot write \"' + this.path + '\" after document load');\r\n      }\r\n      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {\r\n        var c = goog.Dependency.registerCallback_(function(b) {\r\n          goog.DebugLoader_.IS_OLD_IE_ && \"complete\" != b.readyState || (goog.Dependency.unregisterCallback_(c), a.loaded());\r\n        });\r\n        b.write('<script src=\"' + this.path + '\" ' + (goog.DebugLoader_.IS_OLD_IE_ ? \"onreadystatechange\" : \"onload\") + \"=\\\"goog.Dependency.callback_('\" + c + '\\', this)\" type=\"text/javascript\" ' + (goog.Dependency.defer_ ? \"defer\" : \"\") + \">\\x3c/script>\");\r\n      } else {\r\n        var d = b.createElement(\"script\");\r\n        d.defer = goog.Dependency.defer_;\r\n        d.async = !1;\r\n        d.type = \"text/javascript\";\r\n        goog.DebugLoader_.IS_OLD_IE_ ? (a.pause(), d.onreadystatechange = function() {\r\n          if (\"loaded\" == d.readyState || \"complete\" == d.readyState) {\r\n            a.loaded(), a.resume();\r\n          }\r\n        }) : d.onload = function() {\r\n          d.onload = null;\r\n          a.loaded();\r\n        };\r\n        d.src = this.path;\r\n        b.head.appendChild(d);\r\n      }\r\n    } else {\r\n      goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"), \"deps.js\" == this.relativePath ? (goog.logToConsole_(\"Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, or seting CLOSURE_NO_DEPS to true.\"), a.loaded()) : a.pause();\r\n    }\r\n  }\r\n}, goog.Es6ModuleDependency = function(a, b, c, d) {\r\n  goog.Dependency.call(this, a, b, [], c, d);\r\n}, goog.inherits(goog.Es6ModuleDependency, goog.Dependency), goog.Es6ModuleDependency.prototype.load = function(a) {\r\n  function b(a, b) {\r\n    b ? d.write('<script type=\"module\" crossorigin>' + b + \"\\x3c/script>\") : d.write('<script type=\"module\" crossorigin src=\"' + a + '\">\\x3c/script>');\r\n  }\r\n  function c(a, b) {\r\n    var c = d.createElement(\"script\");\r\n    c.defer = !0;\r\n    c.async = !1;\r\n    c.type = \"module\";\r\n    c.setAttribute(\"crossorigin\", !0);\r\n    b ? c.textContent = b : c.src = a;\r\n    d.head.appendChild(c);\r\n  }\r\n  if (goog.global.CLOSURE_IMPORT_SCRIPT) {\r\n    goog.global.CLOSURE_IMPORT_SCRIPT(this.path) ? a.loaded() : a.pause();\r\n  } else {\r\n    if (goog.inHtmlDocument_()) {\r\n      var d = goog.global.document, e = this;\r\n      if (goog.isDocumentLoading_()) {\r\n        var f = b;\r\n        goog.Dependency.defer_ = !0;\r\n      } else {\r\n        f = c;\r\n      }\r\n      var g = goog.Dependency.registerCallback_(function() {\r\n        goog.Dependency.unregisterCallback_(g);\r\n        a.setModuleState(e.path, goog.ModuleType.ES6);\r\n      });\r\n      f(void 0, 'goog.Dependency.callback_(\"' + g + '\")');\r\n      f(this.path, void 0);\r\n      var h = goog.Dependency.registerCallback_(function(b) {\r\n        goog.Dependency.unregisterCallback_(h);\r\n        a.registerEs6ModuleExports(e.path, b);\r\n      });\r\n      f(void 0, 'import * as m from \"' + this.path + '\"; goog.Dependency.callback_(\"' + h + '\", m)');\r\n      var k = goog.Dependency.registerCallback_(function() {\r\n        goog.Dependency.unregisterCallback_(k);\r\n        a.clearModuleState();\r\n        a.loaded();\r\n      });\r\n      f(void 0, 'goog.Dependency.callback_(\"' + k + '\")');\r\n    } else {\r\n      goog.logToConsole_(\"Cannot use default debug loader outside of HTML documents.\"), a.pause();\r\n    }\r\n  }\r\n}, goog.TransformedDependency = function(a, b, c, d, e) {\r\n  goog.Dependency.call(this, a, b, c, d, e);\r\n  this.contents_ = null;\r\n}, goog.inherits(goog.TransformedDependency, goog.Dependency), goog.TransformedDependency.prototype.load = function(a) {\r\n  if (!goog.global.CLOSURE_IMPORT_SCRIPT && goog.inHtmlDocument_() && goog.isDocumentLoading_()) {\r\n    var b = goog.global.document, c = this, d = goog.Dependency.registerCallback_(function() {\r\n      goog.Dependency.unregisterCallback_(d);\r\n      c.loadImpl_(a);\r\n    });\r\n    b.write('<script type=\"text/javascript\">' + goog.protectScriptTag_('goog.Dependency.callback_(\"' + d + '\");') + \"\\x3c/script>\");\r\n  } else {\r\n    this.loadImpl_(a);\r\n  }\r\n}, goog.TransformedDependency.prototype.loadImpl_ = function(a) {\r\n  function b(b) {\r\n    if (c.contents_) {\r\n      d && a.setModuleState(c.path, goog.ModuleType.ES6);\r\n      try {\r\n        var e = c.contents_;\r\n        c.contents_ = null;\r\n        b ? goog.globalEval(e) : goog.global.document.write('<script type=\"text/javascript\">' + goog.protectScriptTag_(e) + \"\\x3c/script>\");\r\n      } finally {\r\n        d && a.clearModuleState();\r\n      }\r\n      d && goog.global.$jscomp.require.ensure([c.path], function() {\r\n        a.registerEs6ModuleExports(c.path, goog.global.$jscomp.require(c.path));\r\n      });\r\n      a.loaded();\r\n    }\r\n  }\r\n  if (this.contents_ = goog.loadFileSync_(this.path)) {\r\n    if (this.contents_ = this.transform(this.contents_)) {\r\n      this.contents_ += \"\\n//# sourceURL=\" + this.path;\r\n    }\r\n  }\r\n  if (this.contents_) {\r\n    if (goog.global.CLOSURE_IMPORT_SCRIPT) {\r\n      goog.global.CLOSURE_IMPORT_SCRIPT(\"\", this.contents_) ? (this.contents_ = null, a.loaded()) : a.pause();\r\n    } else {\r\n      var c = this, d = this.loadFlags.module == goog.ModuleType.ES6;\r\n      if (1 < a.pending().length && goog.DebugLoader_.IS_OLD_IE_) {\r\n        a.defer(function() {\r\n          b(!0);\r\n        });\r\n      } else {\r\n        if (d && goog.inHtmlDocument_() && goog.isDocumentLoading_()) {\r\n          var e = goog.global.document;\r\n          a.pause();\r\n          var f = e.onreadystatechange;\r\n          e.onreadystatechange = function() {\r\n            if (e.attachEvent ? \"complete\" == e.readyState : \"interactive\" == e.readyState) {\r\n              e.onreadystatechange = f, b(!0), a.resume();\r\n            }\r\n            goog.isFunction(f) && f.apply(void 0, arguments);\r\n          };\r\n        } else {\r\n          b(goog.DebugLoader_.IS_OLD_IE_ || !goog.inHtmlDocument_() || !goog.isDocumentLoading_());\r\n        }\r\n      }\r\n    }\r\n  } else {\r\n    a.pause();\r\n  }\r\n}, goog.TransformedDependency.prototype.transform = function(a) {\r\n}, goog.TranspiledDependency = function(a, b, c, d, e, f) {\r\n  goog.TransformedDependency.call(this, a, b, c, d, e);\r\n  this.transpiler = f;\r\n}, goog.inherits(goog.TranspiledDependency, goog.TransformedDependency), goog.TranspiledDependency.prototype.transform = function(a) {\r\n  return this.transpiler.transpile(a, this.path);\r\n}, goog.GoogModuleDependency = function(a, b, c, d, e, f, g) {\r\n  goog.TransformedDependency.call(this, a, b, c, d, e);\r\n  this.needsTranspile_ = f;\r\n  this.transpiler_ = g;\r\n}, goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency), goog.GoogModuleDependency.prototype.transform = function(a) {\r\n  this.needsTranspile_ && (a = this.transpiler_.transpile(a, this.path));\r\n  return goog.LOAD_MODULE_USING_EVAL && goog.isDef(goog.global.JSON) ? \"goog.loadModule(\" + goog.global.JSON.stringify(a + \"\\n//# sourceURL=\" + this.path + \"\\n\") + ', \"' + this.path + '\");' : 'goog.loadModule(function(exports) {\"use strict\";' + a + '\\n;return exports}, \"' + this.path + '\");\\n//# sourceURL=' + this.path + \"\\n\";\r\n}, goog.DebugLoader_.IS_OLD_IE_ = !(goog.global.atob || !goog.global.document || !goog.global.document.all), goog.DebugLoader_.prototype.addDependency = function(a, b, c, d) {\r\n  b = b || [];\r\n  a = a.replace(/\\\\/g, \"/\");\r\n  var e = goog.normalizePath_(goog.basePath + a);\r\n  d && \"boolean\" !== typeof d || (d = d ? {module:goog.ModuleType.GOOG} : {});\r\n  c = this.factory_.createDependency(e, a, b, c, d, goog.transpiler_.needsTranspile(d.lang || \"es3\", d.module));\r\n  this.dependencies_[e] = c;\r\n  for (c = 0; c < b.length; c++) {\r\n    this.idToPath_[b[c]] = e;\r\n  }\r\n  this.idToPath_[a] = e;\r\n}, goog.DependencyFactory = function(a) {\r\n  this.transpiler = a;\r\n}, goog.DependencyFactory.prototype.createDependency = function(a, b, c, d, e, f) {\r\n  if (e.module == goog.ModuleType.ES6) {\r\n    throw Error(\"ES6 modules are not currently supported by the debug loader.\");\r\n  }\r\n  return e.module == goog.ModuleType.GOOG ? new goog.GoogModuleDependency(a, b, c, d, e, f, this.transpiler) : f ? new goog.TranspiledDependency(a, b, c, d, e, this.transpiler) : e.module == goog.ModuleType.ES6 ? new goog.Es6ModuleDependency(a, b, d, e) : new goog.Dependency(a, b, c, d, e);\r\n}, goog.debugLoader_ = new goog.DebugLoader_, goog.loadClosureDeps = function() {\r\n  goog.debugLoader_.loadClosureDeps();\r\n}, goog.setDependencyFactory = function(a) {\r\n  goog.debugLoader_.setDependencyFactory(a);\r\n}, goog.global.CLOSURE_NO_DEPS || goog.debugLoader_.loadClosureDeps(), goog.bootstrap = function(a, b) {\r\n  goog.debugLoader_.bootstrap(a, b);\r\n});\r\ngoog.string = {};\r\ngoog.string.StringBuffer = function(a, b) {\r\n  null != a && this.append.apply(this, arguments);\r\n};\r\ngoog.string.StringBuffer.prototype.buffer_ = \"\";\r\ngoog.string.StringBuffer.prototype.set = function(a) {\r\n  this.buffer_ = \"\" + a;\r\n};\r\ngoog.string.StringBuffer.prototype.append = function(a, b, c) {\r\n  this.buffer_ += String(a);\r\n  if (null != b) {\r\n    for (var d = 1; d < arguments.length; d++) {\r\n      this.buffer_ += arguments[d];\r\n    }\r\n  }\r\n  return this;\r\n};\r\ngoog.string.StringBuffer.prototype.clear = function() {\r\n  this.buffer_ = \"\";\r\n};\r\ngoog.string.StringBuffer.prototype.getLength = function() {\r\n  return this.buffer_.length;\r\n};\r\ngoog.string.StringBuffer.prototype.toString = function() {\r\n  return this.buffer_;\r\n};\r\ngoog.debug = {};\r\ngoog.debug.Error = function(a) {\r\n  if (Error.captureStackTrace) {\r\n    Error.captureStackTrace(this, goog.debug.Error);\r\n  } else {\r\n    var b = Error().stack;\r\n    b && (this.stack = b);\r\n  }\r\n  a && (this.message = String(a));\r\n  this.reportErrorToServer = !0;\r\n};\r\ngoog.inherits(goog.debug.Error, Error);\r\ngoog.debug.Error.prototype.name = \"CustomError\";\r\ngoog.dom = {};\r\ngoog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};\r\ngoog.asserts = {};\r\ngoog.asserts.ENABLE_ASSERTS = goog.DEBUG;\r\ngoog.asserts.AssertionError = function(a, b) {\r\n  goog.debug.Error.call(this, goog.asserts.subs_(a, b));\r\n  this.messagePattern = a;\r\n};\r\ngoog.inherits(goog.asserts.AssertionError, goog.debug.Error);\r\ngoog.asserts.AssertionError.prototype.name = \"AssertionError\";\r\ngoog.asserts.DEFAULT_ERROR_HANDLER = function(a) {\r\n  throw a;\r\n};\r\ngoog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;\r\ngoog.asserts.subs_ = function(a, b) {\r\n  for (var c = a.split(\"%s\"), d = \"\", e = c.length - 1, f = 0; f < e; f++) {\r\n    d += c[f] + (f < b.length ? b[f] : \"%s\");\r\n  }\r\n  return d + c[e];\r\n};\r\ngoog.asserts.doAssertFailure_ = function(a, b, c, d) {\r\n  var e = \"Assertion failed\";\r\n  if (c) {\r\n    e += \": \" + c;\r\n    var f = d;\r\n  } else {\r\n    a && (e += \": \" + a, f = b);\r\n  }\r\n  a = new goog.asserts.AssertionError(\"\" + e, f || []);\r\n  goog.asserts.errorHandler_(a);\r\n};\r\ngoog.asserts.setErrorHandler = function(a) {\r\n  goog.asserts.ENABLE_ASSERTS && (goog.asserts.errorHandler_ = a);\r\n};\r\ngoog.asserts.assert = function(a, b, c) {\r\n  goog.asserts.ENABLE_ASSERTS && !a && goog.asserts.doAssertFailure_(\"\", null, b, Array.prototype.slice.call(arguments, 2));\r\n  return a;\r\n};\r\ngoog.asserts.fail = function(a, b) {\r\n  goog.asserts.ENABLE_ASSERTS && goog.asserts.errorHandler_(new goog.asserts.AssertionError(\"Failure\" + (a ? \": \" + a : \"\"), Array.prototype.slice.call(arguments, 1)));\r\n};\r\ngoog.asserts.assertNumber = function(a, b, c) {\r\n  goog.asserts.ENABLE_ASSERTS && !goog.isNumber(a) && goog.asserts.doAssertFailure_(\"Expected number but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n  return a;\r\n};\r\ngoog.asserts.assertString = function(a, b, c) {\r\n  goog.asserts.ENABLE_ASSERTS && !goog.isString(a) && goog.asserts.doAssertFailure_(\"Expected string but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n  return a;\r\n};\r\ngoog.asserts.assertFunction = function(a, b, c) {\r\n  goog.asserts.ENABLE_ASSERTS && !goog.isFunction(a) && goog.asserts.doAssertFailure_(\"Expected function but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n  return a;\r\n};\r\ngoog.asserts.assertObject = function(a, b, c) {\r\n  goog.asserts.ENABLE_ASSERTS && !goog.isObject(a) && goog.asserts.doAssertFailure_(\"Expected object but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n  return a;\r\n};\r\ngoog.asserts.assertArray = function(a, b, c) {\r\n  goog.asserts.ENABLE_ASSERTS && !goog.isArray(a) && goog.asserts.doAssertFailure_(\"Expected array but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n  return a;\r\n};\r\ngoog.asserts.assertBoolean = function(a, b, c) {\r\n  goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(a) && goog.asserts.doAssertFailure_(\"Expected boolean but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n  return a;\r\n};\r\ngoog.asserts.assertElement = function(a, b, c) {\r\n  !goog.asserts.ENABLE_ASSERTS || goog.isObject(a) && a.nodeType == goog.dom.NodeType.ELEMENT || goog.asserts.doAssertFailure_(\"Expected Element but got %s: %s.\", [goog.typeOf(a), a], b, Array.prototype.slice.call(arguments, 2));\r\n  return a;\r\n};\r\ngoog.asserts.assertInstanceof = function(a, b, c, d) {\r\n  !goog.asserts.ENABLE_ASSERTS || a instanceof b || goog.asserts.doAssertFailure_(\"Expected instanceof %s but got %s.\", [goog.asserts.getType_(b), goog.asserts.getType_(a)], c, Array.prototype.slice.call(arguments, 3));\r\n  return a;\r\n};\r\ngoog.asserts.assertFinite = function(a, b, c) {\r\n  !goog.asserts.ENABLE_ASSERTS || \"number\" == typeof a && isFinite(a) || goog.asserts.doAssertFailure_(\"Expected %s to be a finite number but it is not.\", [a], b, Array.prototype.slice.call(arguments, 2));\r\n  return a;\r\n};\r\ngoog.asserts.assertObjectPrototypeIsIntact = function() {\r\n  for (var a in Object.prototype) {\r\n    goog.asserts.fail(a + \" should not be enumerable in Object.prototype.\");\r\n  }\r\n};\r\ngoog.asserts.getType_ = function(a) {\r\n  return a instanceof Function ? a.displayName || a.name || \"unknown type name\" : a instanceof Object ? a.constructor.displayName || a.constructor.name || Object.prototype.toString.call(a) : null === a ? \"null\" : typeof a;\r\n};\r\ngoog.array = {};\r\ngoog.NATIVE_ARRAY_PROTOTYPES = goog.TRUSTED_SITE;\r\ngoog.array.ASSUME_NATIVE_FUNCTIONS = !1;\r\ngoog.array.peek = function(a) {\r\n  return a[a.length - 1];\r\n};\r\ngoog.array.last = goog.array.peek;\r\ngoog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(a, b, c) {\r\n  goog.asserts.assert(null != a.length);\r\n  return Array.prototype.indexOf.call(a, b, c);\r\n} : function(a, b, c) {\r\n  c = null == c ? 0 : 0 > c ? Math.max(0, a.length + c) : c;\r\n  if (goog.isString(a)) {\r\n    return goog.isString(b) && 1 == b.length ? a.indexOf(b, c) : -1;\r\n  }\r\n  for (; c < a.length; c++) {\r\n    if (c in a && a[c] === b) {\r\n      return c;\r\n    }\r\n  }\r\n  return -1;\r\n};\r\ngoog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(a, b, c) {\r\n  goog.asserts.assert(null != a.length);\r\n  return Array.prototype.lastIndexOf.call(a, b, null == c ? a.length - 1 : c);\r\n} : function(a, b, c) {\r\n  c = null == c ? a.length - 1 : c;\r\n  0 > c && (c = Math.max(0, a.length + c));\r\n  if (goog.isString(a)) {\r\n    return goog.isString(b) && 1 == b.length ? a.lastIndexOf(b, c) : -1;\r\n  }\r\n  for (; 0 <= c; c--) {\r\n    if (c in a && a[c] === b) {\r\n      return c;\r\n    }\r\n  }\r\n  return -1;\r\n};\r\ngoog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(a, b, c) {\r\n  goog.asserts.assert(null != a.length);\r\n  Array.prototype.forEach.call(a, b, c);\r\n} : function(a, b, c) {\r\n  for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) {\r\n    f in e && b.call(c, e[f], f, a);\r\n  }\r\n};\r\ngoog.array.forEachRight = function(a, b, c) {\r\n  var d = a.length, e = goog.isString(a) ? a.split(\"\") : a;\r\n  for (--d; 0 <= d; --d) {\r\n    d in e && b.call(c, e[d], d, a);\r\n  }\r\n};\r\ngoog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(a, b, c) {\r\n  goog.asserts.assert(null != a.length);\r\n  return Array.prototype.filter.call(a, b, c);\r\n} : function(a, b, c) {\r\n  for (var d = a.length, e = [], f = 0, g = goog.isString(a) ? a.split(\"\") : a, h = 0; h < d; h++) {\r\n    if (h in g) {\r\n      var k = g[h];\r\n      b.call(c, k, h, a) && (e[f++] = k);\r\n    }\r\n  }\r\n  return e;\r\n};\r\ngoog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(a, b, c) {\r\n  goog.asserts.assert(null != a.length);\r\n  return Array.prototype.map.call(a, b, c);\r\n} : function(a, b, c) {\r\n  for (var d = a.length, e = Array(d), f = goog.isString(a) ? a.split(\"\") : a, g = 0; g < d; g++) {\r\n    g in f && (e[g] = b.call(c, f[g], g, a));\r\n  }\r\n  return e;\r\n};\r\ngoog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(a, b, c, d) {\r\n  goog.asserts.assert(null != a.length);\r\n  d && (b = goog.bind(b, d));\r\n  return Array.prototype.reduce.call(a, b, c);\r\n} : function(a, b, c, d) {\r\n  var e = c;\r\n  goog.array.forEach(a, function(c, g) {\r\n    e = b.call(d, e, c, g, a);\r\n  });\r\n  return e;\r\n};\r\ngoog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(a, b, c, d) {\r\n  goog.asserts.assert(null != a.length);\r\n  goog.asserts.assert(null != b);\r\n  d && (b = goog.bind(b, d));\r\n  return Array.prototype.reduceRight.call(a, b, c);\r\n} : function(a, b, c, d) {\r\n  var e = c;\r\n  goog.array.forEachRight(a, function(c, g) {\r\n    e = b.call(d, e, c, g, a);\r\n  });\r\n  return e;\r\n};\r\ngoog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(a, b, c) {\r\n  goog.asserts.assert(null != a.length);\r\n  return Array.prototype.some.call(a, b, c);\r\n} : function(a, b, c) {\r\n  for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) {\r\n    if (f in e && b.call(c, e[f], f, a)) {\r\n      return !0;\r\n    }\r\n  }\r\n  return !1;\r\n};\r\ngoog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(a, b, c) {\r\n  goog.asserts.assert(null != a.length);\r\n  return Array.prototype.every.call(a, b, c);\r\n} : function(a, b, c) {\r\n  for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) {\r\n    if (f in e && !b.call(c, e[f], f, a)) {\r\n      return !1;\r\n    }\r\n  }\r\n  return !0;\r\n};\r\ngoog.array.count = function(a, b, c) {\r\n  var d = 0;\r\n  goog.array.forEach(a, function(a, f, g) {\r\n    b.call(c, a, f, g) && ++d;\r\n  }, c);\r\n  return d;\r\n};\r\ngoog.array.find = function(a, b, c) {\r\n  b = goog.array.findIndex(a, b, c);\r\n  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];\r\n};\r\ngoog.array.findIndex = function(a, b, c) {\r\n  for (var d = a.length, e = goog.isString(a) ? a.split(\"\") : a, f = 0; f < d; f++) {\r\n    if (f in e && b.call(c, e[f], f, a)) {\r\n      return f;\r\n    }\r\n  }\r\n  return -1;\r\n};\r\ngoog.array.findRight = function(a, b, c) {\r\n  b = goog.array.findIndexRight(a, b, c);\r\n  return 0 > b ? null : goog.isString(a) ? a.charAt(b) : a[b];\r\n};\r\ngoog.array.findIndexRight = function(a, b, c) {\r\n  var d = a.length, e = goog.isString(a) ? a.split(\"\") : a;\r\n  for (--d; 0 <= d; d--) {\r\n    if (d in e && b.call(c, e[d], d, a)) {\r\n      return d;\r\n    }\r\n  }\r\n  return -1;\r\n};\r\ngoog.array.contains = function(a, b) {\r\n  return 0 <= goog.array.indexOf(a, b);\r\n};\r\ngoog.array.isEmpty = function(a) {\r\n  return 0 == a.length;\r\n};\r\ngoog.array.clear = function(a) {\r\n  if (!goog.isArray(a)) {\r\n    for (var b = a.length - 1; 0 <= b; b--) {\r\n      delete a[b];\r\n    }\r\n  }\r\n  a.length = 0;\r\n};\r\ngoog.array.insert = function(a, b) {\r\n  goog.array.contains(a, b) || a.push(b);\r\n};\r\ngoog.array.insertAt = function(a, b, c) {\r\n  goog.array.splice(a, c, 0, b);\r\n};\r\ngoog.array.insertArrayAt = function(a, b, c) {\r\n  goog.partial(goog.array.splice, a, c, 0).apply(null, b);\r\n};\r\ngoog.array.insertBefore = function(a, b, c) {\r\n  var d;\r\n  2 == arguments.length || 0 > (d = goog.array.indexOf(a, c)) ? a.push(b) : goog.array.insertAt(a, b, d);\r\n};\r\ngoog.array.remove = function(a, b) {\r\n  var c = goog.array.indexOf(a, b), d;\r\n  (d = 0 <= c) && goog.array.removeAt(a, c);\r\n  return d;\r\n};\r\ngoog.array.removeLast = function(a, b) {\r\n  var c = goog.array.lastIndexOf(a, b);\r\n  return 0 <= c ? (goog.array.removeAt(a, c), !0) : !1;\r\n};\r\ngoog.array.removeAt = function(a, b) {\r\n  goog.asserts.assert(null != a.length);\r\n  return 1 == Array.prototype.splice.call(a, b, 1).length;\r\n};\r\ngoog.array.removeIf = function(a, b, c) {\r\n  b = goog.array.findIndex(a, b, c);\r\n  return 0 <= b ? (goog.array.removeAt(a, b), !0) : !1;\r\n};\r\ngoog.array.removeAllIf = function(a, b, c) {\r\n  var d = 0;\r\n  goog.array.forEachRight(a, function(e, f) {\r\n    b.call(c, e, f, a) && goog.array.removeAt(a, f) && d++;\r\n  });\r\n  return d;\r\n};\r\ngoog.array.concat = function(a) {\r\n  return Array.prototype.concat.apply([], arguments);\r\n};\r\ngoog.array.join = function(a) {\r\n  return Array.prototype.concat.apply([], arguments);\r\n};\r\ngoog.array.toArray = function(a) {\r\n  var b = a.length;\r\n  if (0 < b) {\r\n    for (var c = Array(b), d = 0; d < b; d++) {\r\n      c[d] = a[d];\r\n    }\r\n    return c;\r\n  }\r\n  return [];\r\n};\r\ngoog.array.clone = goog.array.toArray;\r\ngoog.array.extend = function(a, b) {\r\n  for (var c = 1; c < arguments.length; c++) {\r\n    var d = arguments[c];\r\n    if (goog.isArrayLike(d)) {\r\n      var e = a.length || 0, f = d.length || 0;\r\n      a.length = e + f;\r\n      for (var g = 0; g < f; g++) {\r\n        a[e + g] = d[g];\r\n      }\r\n    } else {\r\n      a.push(d);\r\n    }\r\n  }\r\n};\r\ngoog.array.splice = function(a, b, c, d) {\r\n  goog.asserts.assert(null != a.length);\r\n  return Array.prototype.splice.apply(a, goog.array.slice(arguments, 1));\r\n};\r\ngoog.array.slice = function(a, b, c) {\r\n  goog.asserts.assert(null != a.length);\r\n  return 2 >= arguments.length ? Array.prototype.slice.call(a, b) : Array.prototype.slice.call(a, b, c);\r\n};\r\ngoog.array.removeDuplicates = function(a, b, c) {\r\n  b = b || a;\r\n  var d = function(a) {\r\n    return goog.isObject(a) ? \"o\" + goog.getUid(a) : (typeof a).charAt(0) + a;\r\n  };\r\n  c = c || d;\r\n  d = {};\r\n  for (var e = 0, f = 0; f < a.length;) {\r\n    var g = a[f++], h = c(g);\r\n    Object.prototype.hasOwnProperty.call(d, h) || (d[h] = !0, b[e++] = g);\r\n  }\r\n  b.length = e;\r\n};\r\ngoog.array.binarySearch = function(a, b, c) {\r\n  return goog.array.binarySearch_(a, c || goog.array.defaultCompare, !1, b);\r\n};\r\ngoog.array.binarySelect = function(a, b, c) {\r\n  return goog.array.binarySearch_(a, b, !0, void 0, c);\r\n};\r\ngoog.array.binarySearch_ = function(a, b, c, d, e) {\r\n  for (var f = 0, g = a.length, h; f < g;) {\r\n    var k = f + g >> 1;\r\n    var l = c ? b.call(e, a[k], k, a) : b(d, a[k]);\r\n    0 < l ? f = k + 1 : (g = k, h = !l);\r\n  }\r\n  return h ? f : ~f;\r\n};\r\ngoog.array.sort = function(a, b) {\r\n  a.sort(b || goog.array.defaultCompare);\r\n};\r\ngoog.array.stableSort = function(a, b) {\r\n  for (var c = Array(a.length), d = 0; d < a.length; d++) {\r\n    c[d] = {index:d, value:a[d]};\r\n  }\r\n  var e = b || goog.array.defaultCompare;\r\n  goog.array.sort(c, function(a, b) {\r\n    return e(a.value, b.value) || a.index - b.index;\r\n  });\r\n  for (d = 0; d < a.length; d++) {\r\n    a[d] = c[d].value;\r\n  }\r\n};\r\ngoog.array.sortByKey = function(a, b, c) {\r\n  var d = c || goog.array.defaultCompare;\r\n  goog.array.sort(a, function(a, c) {\r\n    return d(b(a), b(c));\r\n  });\r\n};\r\ngoog.array.sortObjectsByKey = function(a, b, c) {\r\n  goog.array.sortByKey(a, function(a) {\r\n    return a[b];\r\n  }, c);\r\n};\r\ngoog.array.isSorted = function(a, b, c) {\r\n  b = b || goog.array.defaultCompare;\r\n  for (var d = 1; d < a.length; d++) {\r\n    var e = b(a[d - 1], a[d]);\r\n    if (0 < e || 0 == e && c) {\r\n      return !1;\r\n    }\r\n  }\r\n  return !0;\r\n};\r\ngoog.array.equals = function(a, b, c) {\r\n  if (!goog.isArrayLike(a) || !goog.isArrayLike(b) || a.length != b.length) {\r\n    return !1;\r\n  }\r\n  var d = a.length;\r\n  c = c || goog.array.defaultCompareEquality;\r\n  for (var e = 0; e < d; e++) {\r\n    if (!c(a[e], b[e])) {\r\n      return !1;\r\n    }\r\n  }\r\n  return !0;\r\n};\r\ngoog.array.compare3 = function(a, b, c) {\r\n  c = c || goog.array.defaultCompare;\r\n  for (var d = Math.min(a.length, b.length), e = 0; e < d; e++) {\r\n    var f = c(a[e], b[e]);\r\n    if (0 != f) {\r\n      return f;\r\n    }\r\n  }\r\n  return goog.array.defaultCompare(a.length, b.length);\r\n};\r\ngoog.array.defaultCompare = function(a, b) {\r\n  return a > b ? 1 : a < b ? -1 : 0;\r\n};\r\ngoog.array.inverseDefaultCompare = function(a, b) {\r\n  return -goog.array.defaultCompare(a, b);\r\n};\r\ngoog.array.defaultCompareEquality = function(a, b) {\r\n  return a === b;\r\n};\r\ngoog.array.binaryInsert = function(a, b, c) {\r\n  c = goog.array.binarySearch(a, b, c);\r\n  return 0 > c ? (goog.array.insertAt(a, b, -(c + 1)), !0) : !1;\r\n};\r\ngoog.array.binaryRemove = function(a, b, c) {\r\n  b = goog.array.binarySearch(a, b, c);\r\n  return 0 <= b ? goog.array.removeAt(a, b) : !1;\r\n};\r\ngoog.array.bucket = function(a, b, c) {\r\n  for (var d = {}, e = 0; e < a.length; e++) {\r\n    var f = a[e], g = b.call(c, f, e, a);\r\n    goog.isDef(g) && (d[g] || (d[g] = [])).push(f);\r\n  }\r\n  return d;\r\n};\r\ngoog.array.toObject = function(a, b, c) {\r\n  var d = {};\r\n  goog.array.forEach(a, function(e, f) {\r\n    d[b.call(c, e, f, a)] = e;\r\n  });\r\n  return d;\r\n};\r\ngoog.array.range = function(a, b, c) {\r\n  var d = [], e = 0, f = a;\r\n  c = c || 1;\r\n  void 0 !== b && (e = a, f = b);\r\n  if (0 > c * (f - e)) {\r\n    return [];\r\n  }\r\n  if (0 < c) {\r\n    for (a = e; a < f; a += c) {\r\n      d.push(a);\r\n    }\r\n  } else {\r\n    for (a = e; a > f; a += c) {\r\n      d.push(a);\r\n    }\r\n  }\r\n  return d;\r\n};\r\ngoog.array.repeat = function(a, b) {\r\n  for (var c = [], d = 0; d < b; d++) {\r\n    c[d] = a;\r\n  }\r\n  return c;\r\n};\r\ngoog.array.flatten = function(a) {\r\n  for (var b = [], c = 0; c < arguments.length; c++) {\r\n    var d = arguments[c];\r\n    if (goog.isArray(d)) {\r\n      for (var e = 0; e < d.length; e += 8192) {\r\n        var f = goog.array.slice(d, e, e + 8192);\r\n        f = goog.array.flatten.apply(null, f);\r\n        for (var g = 0; g < f.length; g++) {\r\n          b.push(f[g]);\r\n        }\r\n      }\r\n    } else {\r\n      b.push(d);\r\n    }\r\n  }\r\n  return b;\r\n};\r\ngoog.array.rotate = function(a, b) {\r\n  goog.asserts.assert(null != a.length);\r\n  a.length && (b %= a.length, 0 < b ? Array.prototype.unshift.apply(a, a.splice(-b, b)) : 0 > b && Array.prototype.push.apply(a, a.splice(0, -b)));\r\n  return a;\r\n};\r\ngoog.array.moveItem = function(a, b, c) {\r\n  goog.asserts.assert(0 <= b && b < a.length);\r\n  goog.asserts.assert(0 <= c && c < a.length);\r\n  b = Array.prototype.splice.call(a, b, 1);\r\n  Array.prototype.splice.call(a, c, 0, b[0]);\r\n};\r\ngoog.array.zip = function(a) {\r\n  if (!arguments.length) {\r\n    return [];\r\n  }\r\n  for (var b = [], c = arguments[0].length, d = 1; d < arguments.length; d++) {\r\n    arguments[d].length < c && (c = arguments[d].length);\r\n  }\r\n  for (d = 0; d < c; d++) {\r\n    for (var e = [], f = 0; f < arguments.length; f++) {\r\n      e.push(arguments[f][d]);\r\n    }\r\n    b.push(e);\r\n  }\r\n  return b;\r\n};\r\ngoog.array.shuffle = function(a, b) {\r\n  for (var c = b || Math.random, d = a.length - 1; 0 < d; d--) {\r\n    var e = Math.floor(c() * (d + 1)), f = a[d];\r\n    a[d] = a[e];\r\n    a[e] = f;\r\n  }\r\n};\r\ngoog.array.copyByIndex = function(a, b) {\r\n  var c = [];\r\n  goog.array.forEach(b, function(b) {\r\n    c.push(a[b]);\r\n  });\r\n  return c;\r\n};\r\ngoog.array.concatMap = function(a, b, c) {\r\n  return goog.array.concat.apply([], goog.array.map(a, b, c));\r\n};\r\ngoog.object = {};\r\ngoog.object.is = function(a, b) {\r\n  return a === b ? 0 !== a || 1 / a === 1 / b : a !== a && b !== b;\r\n};\r\ngoog.object.forEach = function(a, b, c) {\r\n  for (var d in a) {\r\n    b.call(c, a[d], d, a);\r\n  }\r\n};\r\ngoog.object.filter = function(a, b, c) {\r\n  var d = {}, e;\r\n  for (e in a) {\r\n    b.call(c, a[e], e, a) && (d[e] = a[e]);\r\n  }\r\n  return d;\r\n};\r\ngoog.object.map = function(a, b, c) {\r\n  var d = {}, e;\r\n  for (e in a) {\r\n    d[e] = b.call(c, a[e], e, a);\r\n  }\r\n  return d;\r\n};\r\ngoog.object.some = function(a, b, c) {\r\n  for (var d in a) {\r\n    if (b.call(c, a[d], d, a)) {\r\n      return !0;\r\n    }\r\n  }\r\n  return !1;\r\n};\r\ngoog.object.every = function(a, b, c) {\r\n  for (var d in a) {\r\n    if (!b.call(c, a[d], d, a)) {\r\n      return !1;\r\n    }\r\n  }\r\n  return !0;\r\n};\r\ngoog.object.getCount = function(a) {\r\n  var b = 0, c;\r\n  for (c in a) {\r\n    b++;\r\n  }\r\n  return b;\r\n};\r\ngoog.object.getAnyKey = function(a) {\r\n  for (var b in a) {\r\n    return b;\r\n  }\r\n};\r\ngoog.object.getAnyValue = function(a) {\r\n  for (var b in a) {\r\n    return a[b];\r\n  }\r\n};\r\ngoog.object.contains = function(a, b) {\r\n  return goog.object.containsValue(a, b);\r\n};\r\ngoog.object.getValues = function(a) {\r\n  var b = [], c = 0, d;\r\n  for (d in a) {\r\n    b[c++] = a[d];\r\n  }\r\n  return b;\r\n};\r\ngoog.object.getKeys = function(a) {\r\n  var b = [], c = 0, d;\r\n  for (d in a) {\r\n    b[c++] = d;\r\n  }\r\n  return b;\r\n};\r\ngoog.object.getValueByKeys = function(a, b) {\r\n  var c = goog.isArrayLike(b), d = c ? b : arguments;\r\n  for (c = c ? 0 : 1; c < d.length; c++) {\r\n    if (null == a) {\r\n      return;\r\n    }\r\n    a = a[d[c]];\r\n  }\r\n  return a;\r\n};\r\ngoog.object.containsKey = function(a, b) {\r\n  return null !== a && b in a;\r\n};\r\ngoog.object.containsValue = function(a, b) {\r\n  for (var c in a) {\r\n    if (a[c] == b) {\r\n      return !0;\r\n    }\r\n  }\r\n  return !1;\r\n};\r\ngoog.object.findKey = function(a, b, c) {\r\n  for (var d in a) {\r\n    if (b.call(c, a[d], d, a)) {\r\n      return d;\r\n    }\r\n  }\r\n};\r\ngoog.object.findValue = function(a, b, c) {\r\n  return (b = goog.object.findKey(a, b, c)) && a[b];\r\n};\r\ngoog.object.isEmpty = function(a) {\r\n  for (var b in a) {\r\n    return !1;\r\n  }\r\n  return !0;\r\n};\r\ngoog.object.clear = function(a) {\r\n  for (var b in a) {\r\n    delete a[b];\r\n  }\r\n};\r\ngoog.object.remove = function(a, b) {\r\n  var c;\r\n  (c = b in a) && delete a[b];\r\n  return c;\r\n};\r\ngoog.object.add = function(a, b, c) {\r\n  if (null !== a && b in a) {\r\n    throw Error('The object already contains the key \"' + b + '\"');\r\n  }\r\n  goog.object.set(a, b, c);\r\n};\r\ngoog.object.get = function(a, b, c) {\r\n  return null !== a && b in a ? a[b] : c;\r\n};\r\ngoog.object.set = function(a, b, c) {\r\n  a[b] = c;\r\n};\r\ngoog.object.setIfUndefined = function(a, b, c) {\r\n  return b in a ? a[b] : a[b] = c;\r\n};\r\ngoog.object.setWithReturnValueIfNotSet = function(a, b, c) {\r\n  if (b in a) {\r\n    return a[b];\r\n  }\r\n  c = c();\r\n  return a[b] = c;\r\n};\r\ngoog.object.equals = function(a, b) {\r\n  for (var c in a) {\r\n    if (!(c in b) || a[c] !== b[c]) {\r\n      return !1;\r\n    }\r\n  }\r\n  for (c in b) {\r\n    if (!(c in a)) {\r\n      return !1;\r\n    }\r\n  }\r\n  return !0;\r\n};\r\ngoog.object.clone = function(a) {\r\n  var b = {}, c;\r\n  for (c in a) {\r\n    b[c] = a[c];\r\n  }\r\n  return b;\r\n};\r\ngoog.object.unsafeClone = function(a) {\r\n  var b = goog.typeOf(a);\r\n  if (\"object\" == b || \"array\" == b) {\r\n    if (goog.isFunction(a.clone)) {\r\n      return a.clone();\r\n    }\r\n    b = \"array\" == b ? [] : {};\r\n    for (var c in a) {\r\n      b[c] = goog.object.unsafeClone(a[c]);\r\n    }\r\n    return b;\r\n  }\r\n  return a;\r\n};\r\ngoog.object.transpose = function(a) {\r\n  var b = {}, c;\r\n  for (c in a) {\r\n    b[a[c]] = c;\r\n  }\r\n  return b;\r\n};\r\ngoog.object.PROTOTYPE_FIELDS_ = \"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\r\ngoog.object.extend = function(a, b) {\r\n  for (var c, d, e = 1; e < arguments.length; e++) {\r\n    d = arguments[e];\r\n    for (c in d) {\r\n      a[c] = d[c];\r\n    }\r\n    for (var f = 0; f < goog.object.PROTOTYPE_FIELDS_.length; f++) {\r\n      c = goog.object.PROTOTYPE_FIELDS_[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);\r\n    }\r\n  }\r\n};\r\ngoog.object.create = function(a) {\r\n  var b = arguments.length;\r\n  if (1 == b && goog.isArray(arguments[0])) {\r\n    return goog.object.create.apply(null, arguments[0]);\r\n  }\r\n  if (b % 2) {\r\n    throw Error(\"Uneven number of arguments\");\r\n  }\r\n  for (var c = {}, d = 0; d < b; d += 2) {\r\n    c[arguments[d]] = arguments[d + 1];\r\n  }\r\n  return c;\r\n};\r\ngoog.object.createSet = function(a) {\r\n  var b = arguments.length;\r\n  if (1 == b && goog.isArray(arguments[0])) {\r\n    return goog.object.createSet.apply(null, arguments[0]);\r\n  }\r\n  for (var c = {}, d = 0; d < b; d++) {\r\n    c[arguments[d]] = !0;\r\n  }\r\n  return c;\r\n};\r\ngoog.object.createImmutableView = function(a) {\r\n  var b = a;\r\n  Object.isFrozen && !Object.isFrozen(a) && (b = Object.create(a), Object.freeze(b));\r\n  return b;\r\n};\r\ngoog.object.isImmutableView = function(a) {\r\n  return !!Object.isFrozen && Object.isFrozen(a);\r\n};\r\ngoog.object.getAllPropertyNames = function(a, b, c) {\r\n  if (!a) {\r\n    return [];\r\n  }\r\n  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\r\n    return goog.object.getKeys(a);\r\n  }\r\n  for (var d = {}; a && (a !== Object.prototype || b) && (a !== Function.prototype || c);) {\r\n    for (var e = Object.getOwnPropertyNames(a), f = 0; f < e.length; f++) {\r\n      d[e[f]] = !0;\r\n    }\r\n    a = Object.getPrototypeOf(a);\r\n  }\r\n  return goog.object.getKeys(d);\r\n};\r\ngoog.string.DETECT_DOUBLE_ESCAPING = !1;\r\ngoog.string.FORCE_NON_DOM_HTML_UNESCAPING = !1;\r\ngoog.string.Unicode = {NBSP:\"\\u00a0\"};\r\ngoog.string.startsWith = function(a, b) {\r\n  return 0 == a.lastIndexOf(b, 0);\r\n};\r\ngoog.string.endsWith = function(a, b) {\r\n  var c = a.length - b.length;\r\n  return 0 <= c && a.indexOf(b, c) == c;\r\n};\r\ngoog.string.caseInsensitiveStartsWith = function(a, b) {\r\n  return 0 == goog.string.caseInsensitiveCompare(b, a.substr(0, b.length));\r\n};\r\ngoog.string.caseInsensitiveEndsWith = function(a, b) {\r\n  return 0 == goog.string.caseInsensitiveCompare(b, a.substr(a.length - b.length, b.length));\r\n};\r\ngoog.string.caseInsensitiveEquals = function(a, b) {\r\n  return a.toLowerCase() == b.toLowerCase();\r\n};\r\ngoog.string.subs = function(a, b) {\r\n  for (var c = a.split(\"%s\"), d = \"\", e = Array.prototype.slice.call(arguments, 1); e.length && 1 < c.length;) {\r\n    d += c.shift() + e.shift();\r\n  }\r\n  return d + c.join(\"%s\");\r\n};\r\ngoog.string.collapseWhitespace = function(a) {\r\n  return a.replace(/[\\s\\xa0]+/g, \" \").replace(/^\\s+|\\s+$/g, \"\");\r\n};\r\ngoog.string.isEmptyOrWhitespace = function(a) {\r\n  return /^[\\s\\xa0]*$/.test(a);\r\n};\r\ngoog.string.isEmptyString = function(a) {\r\n  return 0 == a.length;\r\n};\r\ngoog.string.isEmpty = goog.string.isEmptyOrWhitespace;\r\ngoog.string.isEmptyOrWhitespaceSafe = function(a) {\r\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a));\r\n};\r\ngoog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;\r\ngoog.string.isBreakingWhitespace = function(a) {\r\n  return !/[^\\t\\n\\r ]/.test(a);\r\n};\r\ngoog.string.isAlpha = function(a) {\r\n  return !/[^a-zA-Z]/.test(a);\r\n};\r\ngoog.string.isNumeric = function(a) {\r\n  return !/[^0-9]/.test(a);\r\n};\r\ngoog.string.isAlphaNumeric = function(a) {\r\n  return !/[^a-zA-Z0-9]/.test(a);\r\n};\r\ngoog.string.isSpace = function(a) {\r\n  return \" \" == a;\r\n};\r\ngoog.string.isUnicodeChar = function(a) {\r\n  return 1 == a.length && \" \" <= a && \"~\" >= a || \"\\u0080\" <= a && \"\\ufffd\" >= a;\r\n};\r\ngoog.string.stripNewlines = function(a) {\r\n  return a.replace(/(\\r\\n|\\r|\\n)+/g, \" \");\r\n};\r\ngoog.string.canonicalizeNewlines = function(a) {\r\n  return a.replace(/(\\r\\n|\\r|\\n)/g, \"\\n\");\r\n};\r\ngoog.string.normalizeWhitespace = function(a) {\r\n  return a.replace(/\\xa0|\\s/g, \" \");\r\n};\r\ngoog.string.normalizeSpaces = function(a) {\r\n  return a.replace(/\\xa0|[ \\t]+/g, \" \");\r\n};\r\ngoog.string.collapseBreakingSpaces = function(a) {\r\n  return a.replace(/[\\t\\r\\n ]+/g, \" \").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, \"\");\r\n};\r\ngoog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(a) {\r\n  return a.trim();\r\n} : function(a) {\r\n  return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(a)[1];\r\n};\r\ngoog.string.trimLeft = function(a) {\r\n  return a.replace(/^[\\s\\xa0]+/, \"\");\r\n};\r\ngoog.string.trimRight = function(a) {\r\n  return a.replace(/[\\s\\xa0]+$/, \"\");\r\n};\r\ngoog.string.caseInsensitiveCompare = function(a, b) {\r\n  var c = String(a).toLowerCase(), d = String(b).toLowerCase();\r\n  return c < d ? -1 : c == d ? 0 : 1;\r\n};\r\ngoog.string.numberAwareCompare_ = function(a, b, c) {\r\n  if (a == b) {\r\n    return 0;\r\n  }\r\n  if (!a) {\r\n    return -1;\r\n  }\r\n  if (!b) {\r\n    return 1;\r\n  }\r\n  for (var d = a.toLowerCase().match(c), e = b.toLowerCase().match(c), f = Math.min(d.length, e.length), g = 0; g < f; g++) {\r\n    c = d[g];\r\n    var h = e[g];\r\n    if (c != h) {\r\n      return a = parseInt(c, 10), !isNaN(a) && (b = parseInt(h, 10), !isNaN(b) && a - b) ? a - b : c < h ? -1 : 1;\r\n    }\r\n  }\r\n  return d.length != e.length ? d.length - e.length : a < b ? -1 : 1;\r\n};\r\ngoog.string.intAwareCompare = function(a, b) {\r\n  return goog.string.numberAwareCompare_(a, b, /\\d+|\\D+/g);\r\n};\r\ngoog.string.floatAwareCompare = function(a, b) {\r\n  return goog.string.numberAwareCompare_(a, b, /\\d+|\\.\\d+|\\D+/g);\r\n};\r\ngoog.string.numerateCompare = goog.string.floatAwareCompare;\r\ngoog.string.urlEncode = function(a) {\r\n  return encodeURIComponent(String(a));\r\n};\r\ngoog.string.urlDecode = function(a) {\r\n  return decodeURIComponent(a.replace(/\\+/g, \" \"));\r\n};\r\ngoog.string.newLineToBr = function(a, b) {\r\n  return a.replace(/(\\r\\n|\\r|\\n)/g, b ? \"<br />\" : \"<br>\");\r\n};\r\ngoog.string.htmlEscape = function(a, b) {\r\n  if (b) {\r\n    a = a.replace(goog.string.AMP_RE_, \"&amp;\").replace(goog.string.LT_RE_, \"&lt;\").replace(goog.string.GT_RE_, \"&gt;\").replace(goog.string.QUOT_RE_, \"&quot;\").replace(goog.string.SINGLE_QUOTE_RE_, \"&#39;\").replace(goog.string.NULL_RE_, \"&#0;\"), goog.string.DETECT_DOUBLE_ESCAPING && (a = a.replace(goog.string.E_RE_, \"&#101;\"));\r\n  } else {\r\n    if (!goog.string.ALL_RE_.test(a)) {\r\n      return a;\r\n    }\r\n    -1 != a.indexOf(\"&\") && (a = a.replace(goog.string.AMP_RE_, \"&amp;\"));\r\n    -1 != a.indexOf(\"<\") && (a = a.replace(goog.string.LT_RE_, \"&lt;\"));\r\n    -1 != a.indexOf(\">\") && (a = a.replace(goog.string.GT_RE_, \"&gt;\"));\r\n    -1 != a.indexOf('\"') && (a = a.replace(goog.string.QUOT_RE_, \"&quot;\"));\r\n    -1 != a.indexOf(\"'\") && (a = a.replace(goog.string.SINGLE_QUOTE_RE_, \"&#39;\"));\r\n    -1 != a.indexOf(\"\\x00\") && (a = a.replace(goog.string.NULL_RE_, \"&#0;\"));\r\n    goog.string.DETECT_DOUBLE_ESCAPING && -1 != a.indexOf(\"e\") && (a = a.replace(goog.string.E_RE_, \"&#101;\"));\r\n  }\r\n  return a;\r\n};\r\ngoog.string.AMP_RE_ = /&/g;\r\ngoog.string.LT_RE_ = /</g;\r\ngoog.string.GT_RE_ = />/g;\r\ngoog.string.QUOT_RE_ = /\"/g;\r\ngoog.string.SINGLE_QUOTE_RE_ = /'/g;\r\ngoog.string.NULL_RE_ = /\\x00/g;\r\ngoog.string.E_RE_ = /e/g;\r\ngoog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\\x00&<>\"'e]/ : /[\\x00&<>\"']/;\r\ngoog.string.unescapeEntities = function(a) {\r\n  return goog.string.contains(a, \"&\") ? !goog.string.FORCE_NON_DOM_HTML_UNESCAPING && \"document\" in goog.global ? goog.string.unescapeEntitiesUsingDom_(a) : goog.string.unescapePureXmlEntities_(a) : a;\r\n};\r\ngoog.string.unescapeEntitiesWithDocument = function(a, b) {\r\n  return goog.string.contains(a, \"&\") ? goog.string.unescapeEntitiesUsingDom_(a, b) : a;\r\n};\r\ngoog.string.unescapeEntitiesUsingDom_ = function(a, b) {\r\n  var c = {\"&amp;\":\"&\", \"&lt;\":\"<\", \"&gt;\":\">\", \"&quot;\":'\"'};\r\n  var d = b ? b.createElement(\"div\") : goog.global.document.createElement(\"div\");\r\n  return a.replace(goog.string.HTML_ENTITY_PATTERN_, function(a, b) {\r\n    var e = c[a];\r\n    if (e) {\r\n      return e;\r\n    }\r\n    if (\"#\" == b.charAt(0)) {\r\n      var f = Number(\"0\" + b.substr(1));\r\n      isNaN(f) || (e = String.fromCharCode(f));\r\n    }\r\n    e || (d.innerHTML = a + \" \", e = d.firstChild.nodeValue.slice(0, -1));\r\n    return c[a] = e;\r\n  });\r\n};\r\ngoog.string.unescapePureXmlEntities_ = function(a) {\r\n  return a.replace(/&([^;]+);/g, function(a, c) {\r\n    switch(c) {\r\n      case \"amp\":\r\n        return \"&\";\r\n      case \"lt\":\r\n        return \"<\";\r\n      case \"gt\":\r\n        return \">\";\r\n      case \"quot\":\r\n        return '\"';\r\n      default:\r\n        if (\"#\" == c.charAt(0)) {\r\n          var b = Number(\"0\" + c.substr(1));\r\n          if (!isNaN(b)) {\r\n            return String.fromCharCode(b);\r\n          }\r\n        }\r\n        return a;\r\n    }\r\n  });\r\n};\r\ngoog.string.HTML_ENTITY_PATTERN_ = /&([^;\\s<&]+);?/g;\r\ngoog.string.whitespaceEscape = function(a, b) {\r\n  return goog.string.newLineToBr(a.replace(/  /g, \" &#160;\"), b);\r\n};\r\ngoog.string.preserveSpaces = function(a) {\r\n  return a.replace(/(^|[\\n ]) /g, \"$1\" + goog.string.Unicode.NBSP);\r\n};\r\ngoog.string.stripQuotes = function(a, b) {\r\n  for (var c = b.length, d = 0; d < c; d++) {\r\n    var e = 1 == c ? b : b.charAt(d);\r\n    if (a.charAt(0) == e && a.charAt(a.length - 1) == e) {\r\n      return a.substring(1, a.length - 1);\r\n    }\r\n  }\r\n  return a;\r\n};\r\ngoog.string.truncate = function(a, b, c) {\r\n  c && (a = goog.string.unescapeEntities(a));\r\n  a.length > b && (a = a.substring(0, b - 3) + \"...\");\r\n  c && (a = goog.string.htmlEscape(a));\r\n  return a;\r\n};\r\ngoog.string.truncateMiddle = function(a, b, c, d) {\r\n  c && (a = goog.string.unescapeEntities(a));\r\n  if (d && a.length > b) {\r\n    d > b && (d = b);\r\n    var e = a.length - d;\r\n    a = a.substring(0, b - d) + \"...\" + a.substring(e);\r\n  } else {\r\n    a.length > b && (d = Math.floor(b / 2), e = a.length - d, a = a.substring(0, d + b % 2) + \"...\" + a.substring(e));\r\n  }\r\n  c && (a = goog.string.htmlEscape(a));\r\n  return a;\r\n};\r\ngoog.string.specialEscapeChars_ = {\"\\x00\":\"\\\\0\", \"\\b\":\"\\\\b\", \"\\f\":\"\\\\f\", \"\\n\":\"\\\\n\", \"\\r\":\"\\\\r\", \"\\t\":\"\\\\t\", \"\\x0B\":\"\\\\x0B\", '\"':'\\\\\"', \"\\\\\":\"\\\\\\\\\", \"<\":\"<\"};\r\ngoog.string.jsEscapeCache_ = {\"'\":\"\\\\'\"};\r\ngoog.string.quote = function(a) {\r\n  a = String(a);\r\n  for (var b = ['\"'], c = 0; c < a.length; c++) {\r\n    var d = a.charAt(c), e = d.charCodeAt(0);\r\n    b[c + 1] = goog.string.specialEscapeChars_[d] || (31 < e && 127 > e ? d : goog.string.escapeChar(d));\r\n  }\r\n  b.push('\"');\r\n  return b.join(\"\");\r\n};\r\ngoog.string.escapeString = function(a) {\r\n  for (var b = [], c = 0; c < a.length; c++) {\r\n    b[c] = goog.string.escapeChar(a.charAt(c));\r\n  }\r\n  return b.join(\"\");\r\n};\r\ngoog.string.escapeChar = function(a) {\r\n  if (a in goog.string.jsEscapeCache_) {\r\n    return goog.string.jsEscapeCache_[a];\r\n  }\r\n  if (a in goog.string.specialEscapeChars_) {\r\n    return goog.string.jsEscapeCache_[a] = goog.string.specialEscapeChars_[a];\r\n  }\r\n  var b = a.charCodeAt(0);\r\n  if (31 < b && 127 > b) {\r\n    var c = a;\r\n  } else {\r\n    if (256 > b) {\r\n      if (c = \"\\\\x\", 16 > b || 256 < b) {\r\n        c += \"0\";\r\n      }\r\n    } else {\r\n      c = \"\\\\u\", 4096 > b && (c += \"0\");\r\n    }\r\n    c += b.toString(16).toUpperCase();\r\n  }\r\n  return goog.string.jsEscapeCache_[a] = c;\r\n};\r\ngoog.string.contains = function(a, b) {\r\n  return -1 != a.indexOf(b);\r\n};\r\ngoog.string.caseInsensitiveContains = function(a, b) {\r\n  return goog.string.contains(a.toLowerCase(), b.toLowerCase());\r\n};\r\ngoog.string.countOf = function(a, b) {\r\n  return a && b ? a.split(b).length - 1 : 0;\r\n};\r\ngoog.string.removeAt = function(a, b, c) {\r\n  var d = a;\r\n  0 <= b && b < a.length && 0 < c && (d = a.substr(0, b) + a.substr(b + c, a.length - b - c));\r\n  return d;\r\n};\r\ngoog.string.remove = function(a, b) {\r\n  return a.replace(b, \"\");\r\n};\r\ngoog.string.removeAll = function(a, b) {\r\n  var c = new RegExp(goog.string.regExpEscape(b), \"g\");\r\n  return a.replace(c, \"\");\r\n};\r\ngoog.string.replaceAll = function(a, b, c) {\r\n  b = new RegExp(goog.string.regExpEscape(b), \"g\");\r\n  return a.replace(b, c.replace(/\\$/g, \"$$$$\"));\r\n};\r\ngoog.string.regExpEscape = function(a) {\r\n  return String(a).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g, \"\\\\$1\").replace(/\\x08/g, \"\\\\x08\");\r\n};\r\ngoog.string.repeat = String.prototype.repeat ? function(a, b) {\r\n  return a.repeat(b);\r\n} : function(a, b) {\r\n  return Array(b + 1).join(a);\r\n};\r\ngoog.string.padNumber = function(a, b, c) {\r\n  a = goog.isDef(c) ? a.toFixed(c) : String(a);\r\n  c = a.indexOf(\".\");\r\n  -1 == c && (c = a.length);\r\n  return goog.string.repeat(\"0\", Math.max(0, b - c)) + a;\r\n};\r\ngoog.string.makeSafe = function(a) {\r\n  return null == a ? \"\" : String(a);\r\n};\r\ngoog.string.buildString = function(a) {\r\n  return Array.prototype.join.call(arguments, \"\");\r\n};\r\ngoog.string.getRandomString = function() {\r\n  return Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ goog.now()).toString(36);\r\n};\r\ngoog.string.compareVersions = function(a, b) {\r\n  for (var c = 0, d = goog.string.trim(String(a)).split(\".\"), e = goog.string.trim(String(b)).split(\".\"), f = Math.max(d.length, e.length), g = 0; 0 == c && g < f; g++) {\r\n    var h = d[g] || \"\", k = e[g] || \"\";\r\n    do {\r\n      h = /(\\d*)(\\D*)(.*)/.exec(h) || [\"\", \"\", \"\", \"\"];\r\n      k = /(\\d*)(\\D*)(.*)/.exec(k) || [\"\", \"\", \"\", \"\"];\r\n      if (0 == h[0].length && 0 == k[0].length) {\r\n        break;\r\n      }\r\n      c = 0 == h[1].length ? 0 : parseInt(h[1], 10);\r\n      var l = 0 == k[1].length ? 0 : parseInt(k[1], 10);\r\n      c = goog.string.compareElements_(c, l) || goog.string.compareElements_(0 == h[2].length, 0 == k[2].length) || goog.string.compareElements_(h[2], k[2]);\r\n      h = h[3];\r\n      k = k[3];\r\n    } while (0 == c);\r\n  }\r\n  return c;\r\n};\r\ngoog.string.compareElements_ = function(a, b) {\r\n  return a < b ? -1 : a > b ? 1 : 0;\r\n};\r\ngoog.string.hashCode = function(a) {\r\n  for (var b = 0, c = 0; c < a.length; ++c) {\r\n    b = 31 * b + a.charCodeAt(c) >>> 0;\r\n  }\r\n  return b;\r\n};\r\ngoog.string.uniqueStringCounter_ = 2147483648 * Math.random() | 0;\r\ngoog.string.createUniqueString = function() {\r\n  return \"goog_\" + goog.string.uniqueStringCounter_++;\r\n};\r\ngoog.string.toNumber = function(a) {\r\n  var b = Number(a);\r\n  return 0 == b && goog.string.isEmptyOrWhitespace(a) ? NaN : b;\r\n};\r\ngoog.string.isLowerCamelCase = function(a) {\r\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(a);\r\n};\r\ngoog.string.isUpperCamelCase = function(a) {\r\n  return /^([A-Z][a-z]*)+$/.test(a);\r\n};\r\ngoog.string.toCamelCase = function(a) {\r\n  return String(a).replace(/\\-([a-z])/g, function(a, c) {\r\n    return c.toUpperCase();\r\n  });\r\n};\r\ngoog.string.toSelectorCase = function(a) {\r\n  return String(a).replace(/([A-Z])/g, \"-$1\").toLowerCase();\r\n};\r\ngoog.string.toTitleCase = function(a, b) {\r\n  var c = goog.isString(b) ? goog.string.regExpEscape(b) : \"\\\\s\";\r\n  return a.replace(new RegExp(\"(^\" + (c ? \"|[\" + c + \"]+\" : \"\") + \")([a-z])\", \"g\"), function(a, b, c) {\r\n    return b + c.toUpperCase();\r\n  });\r\n};\r\ngoog.string.capitalize = function(a) {\r\n  return String(a.charAt(0)).toUpperCase() + String(a.substr(1)).toLowerCase();\r\n};\r\ngoog.string.parseInt = function(a) {\r\n  isFinite(a) && (a = String(a));\r\n  return goog.isString(a) ? /^\\s*-?0x/i.test(a) ? parseInt(a, 16) : parseInt(a, 10) : NaN;\r\n};\r\ngoog.string.splitLimit = function(a, b, c) {\r\n  a = a.split(b);\r\n  for (var d = []; 0 < c && a.length;) {\r\n    d.push(a.shift()), c--;\r\n  }\r\n  a.length && d.push(a.join(b));\r\n  return d;\r\n};\r\ngoog.string.lastComponent = function(a, b) {\r\n  if (b) {\r\n    \"string\" == typeof b && (b = [b]);\r\n  } else {\r\n    return a;\r\n  }\r\n  for (var c = -1, d = 0; d < b.length; d++) {\r\n    if (\"\" != b[d]) {\r\n      var e = a.lastIndexOf(b[d]);\r\n      e > c && (c = e);\r\n    }\r\n  }\r\n  return -1 == c ? a : a.slice(c + 1);\r\n};\r\ngoog.string.editDistance = function(a, b) {\r\n  var c = [], d = [];\r\n  if (a == b) {\r\n    return 0;\r\n  }\r\n  if (!a.length || !b.length) {\r\n    return Math.max(a.length, b.length);\r\n  }\r\n  for (var e = 0; e < b.length + 1; e++) {\r\n    c[e] = e;\r\n  }\r\n  for (e = 0; e < a.length; e++) {\r\n    d[0] = e + 1;\r\n    for (var f = 0; f < b.length; f++) {\r\n      d[f + 1] = Math.min(d[f] + 1, c[f + 1] + 1, c[f] + Number(a[e] != b[f]));\r\n    }\r\n    for (f = 0; f < c.length; f++) {\r\n      c[f] = d[f];\r\n    }\r\n  }\r\n  return d[b.length];\r\n};\r\ngoog.proto2 = {};\r\ngoog.proto2.Descriptor = function(a, b, c) {\r\n  this.messageType_ = a;\r\n  this.name_ = b.name || null;\r\n  this.fullName_ = b.fullName || null;\r\n  this.containingType_ = b.containingType;\r\n  this.fields_ = {};\r\n  for (a = 0; a < c.length; a++) {\r\n    b = c[a], this.fields_[b.getTag()] = b;\r\n  }\r\n};\r\ngoog.proto2.Descriptor.prototype.getName = function() {\r\n  return this.name_;\r\n};\r\ngoog.proto2.Descriptor.prototype.getFullName = function() {\r\n  return this.fullName_;\r\n};\r\ngoog.proto2.Descriptor.prototype.getContainingType = function() {\r\n  return this.containingType_ ? this.containingType_.getDescriptor() : null;\r\n};\r\ngoog.proto2.Descriptor.prototype.getFields = function() {\r\n  var a = goog.object.getValues(this.fields_);\r\n  goog.array.sort(a, function(a, c) {\r\n    return a.getTag() - c.getTag();\r\n  });\r\n  return a;\r\n};\r\ngoog.proto2.Descriptor.prototype.getFieldsMap = function() {\r\n  return this.fields_;\r\n};\r\ngoog.proto2.Descriptor.prototype.findFieldByName = function(a) {\r\n  return goog.object.findValue(this.fields_, function(b, c, d) {\r\n    return b.getName() == a;\r\n  }) || null;\r\n};\r\ngoog.proto2.Descriptor.prototype.findFieldByTag = function(a) {\r\n  goog.asserts.assert(goog.string.isNumeric(a));\r\n  return this.fields_[parseInt(a, 10)] || null;\r\n};\r\ngoog.proto2.Descriptor.prototype.createMessageInstance = function() {\r\n  return new this.messageType_;\r\n};\r\ngoog.proto2.FieldDescriptor = function(a, b, c) {\r\n  this.parent_ = a;\r\n  goog.asserts.assert(goog.string.isNumeric(b));\r\n  this.tag_ = b;\r\n  this.name_ = c.name;\r\n  this.isPacked_ = !!c.packed;\r\n  this.isRepeated_ = !!c.repeated;\r\n  this.isRequired_ = !!c.required;\r\n  this.fieldType_ = c.fieldType;\r\n  this.nativeType_ = c.type;\r\n  this.deserializationConversionPermitted_ = !1;\r\n  switch(this.fieldType_) {\r\n    case goog.proto2.FieldDescriptor.FieldType.INT64:\r\n    case goog.proto2.FieldDescriptor.FieldType.UINT64:\r\n    case goog.proto2.FieldDescriptor.FieldType.FIXED64:\r\n    case goog.proto2.FieldDescriptor.FieldType.SFIXED64:\r\n    case goog.proto2.FieldDescriptor.FieldType.SINT64:\r\n    case goog.proto2.FieldDescriptor.FieldType.FLOAT:\r\n    case goog.proto2.FieldDescriptor.FieldType.DOUBLE:\r\n      this.deserializationConversionPermitted_ = !0;\r\n  }\r\n  this.defaultValue_ = c.defaultValue;\r\n};\r\ngoog.proto2.FieldDescriptor.FieldType = {DOUBLE:1, FLOAT:2, INT64:3, UINT64:4, INT32:5, FIXED64:6, FIXED32:7, BOOL:8, STRING:9, GROUP:10, MESSAGE:11, BYTES:12, UINT32:13, ENUM:14, SFIXED32:15, SFIXED64:16, SINT32:17, SINT64:18};\r\ngoog.proto2.FieldDescriptor.prototype.getTag = function() {\r\n  return this.tag_;\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.getContainingType = function() {\r\n  return this.parent_.prototype.getDescriptor();\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.getName = function() {\r\n  return this.name_;\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.getDefaultValue = function() {\r\n  if (void 0 === this.defaultValue_) {\r\n    var a = this.nativeType_;\r\n    if (a === Boolean) {\r\n      this.defaultValue_ = !1;\r\n    } else {\r\n      if (a === Number) {\r\n        this.defaultValue_ = 0;\r\n      } else {\r\n        if (a === String) {\r\n          this.defaultValue_ = this.deserializationConversionPermitted_ ? \"0\" : \"\";\r\n        } else {\r\n          return new a;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return this.defaultValue_;\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.getFieldType = function() {\r\n  return this.fieldType_;\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.getNativeType = function() {\r\n  return this.nativeType_;\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.deserializationConversionPermitted = function() {\r\n  return this.deserializationConversionPermitted_;\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.getFieldMessageType = function() {\r\n  return this.nativeType_.prototype.getDescriptor();\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.isCompositeType = function() {\r\n  return this.fieldType_ == goog.proto2.FieldDescriptor.FieldType.MESSAGE || this.fieldType_ == goog.proto2.FieldDescriptor.FieldType.GROUP;\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.isPacked = function() {\r\n  return this.isPacked_;\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.isRepeated = function() {\r\n  return this.isRepeated_;\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.isRequired = function() {\r\n  return this.isRequired_;\r\n};\r\ngoog.proto2.FieldDescriptor.prototype.isOptional = function() {\r\n  return !this.isRepeated_ && !this.isRequired_;\r\n};\r\ngoog.proto2.Message = function() {\r\n  this.values_ = {};\r\n  this.fields_ = this.getDescriptor().getFieldsMap();\r\n  this.deserializedFields_ = this.lazyDeserializer_ = null;\r\n};\r\ngoog.proto2.Message.FieldType = {DOUBLE:1, FLOAT:2, INT64:3, UINT64:4, INT32:5, FIXED64:6, FIXED32:7, BOOL:8, STRING:9, GROUP:10, MESSAGE:11, BYTES:12, UINT32:13, ENUM:14, SFIXED32:15, SFIXED64:16, SINT32:17, SINT64:18};\r\ngoog.proto2.Message.prototype.initializeForLazyDeserializer = function(a, b) {\r\n  this.lazyDeserializer_ = a;\r\n  this.values_ = b;\r\n  this.deserializedFields_ = {};\r\n};\r\ngoog.proto2.Message.prototype.setUnknown = function(a, b) {\r\n  goog.asserts.assert(!this.fields_[a], \"Field is not unknown in this message\");\r\n  goog.asserts.assert(1 <= a, \"Tag \" + a + ' has value \"' + b + '\" in descriptor ' + this.getDescriptor().getName());\r\n  goog.asserts.assert(null !== b, \"Value cannot be null\");\r\n  this.values_[a] = b;\r\n  this.deserializedFields_ && delete this.deserializedFields_[a];\r\n};\r\ngoog.proto2.Message.prototype.forEachUnknown = function(a, b) {\r\n  var c = b || this, d;\r\n  for (d in this.values_) {\r\n    var e = Number(d);\r\n    this.fields_[e] || a.call(c, e, this.values_[d]);\r\n  }\r\n};\r\ngoog.proto2.Message.prototype.getDescriptor = goog.abstractMethod;\r\ngoog.proto2.Message.prototype.has = function(a) {\r\n  goog.asserts.assert(a.getContainingType() == this.getDescriptor(), \"The current message does not contain the given field\");\r\n  return this.has$Value(a.getTag());\r\n};\r\ngoog.proto2.Message.prototype.arrayOf = function(a) {\r\n  goog.asserts.assert(a.getContainingType() == this.getDescriptor(), \"The current message does not contain the given field\");\r\n  return this.array$Values(a.getTag());\r\n};\r\ngoog.proto2.Message.prototype.countOf = function(a) {\r\n  goog.asserts.assert(a.getContainingType() == this.getDescriptor(), \"The current message does not contain the given field\");\r\n  return this.count$Values(a.getTag());\r\n};\r\ngoog.proto2.Message.prototype.get = function(a, b) {\r\n  goog.asserts.assert(a.getContainingType() == this.getDescriptor(), \"The current message does not contain the given field\");\r\n  return this.get$Value(a.getTag(), b);\r\n};\r\ngoog.proto2.Message.prototype.getOrDefault = function(a, b) {\r\n  goog.asserts.assert(a.getContainingType() == this.getDescriptor(), \"The current message does not contain the given field\");\r\n  return this.get$ValueOrDefault(a.getTag(), b);\r\n};\r\ngoog.proto2.Message.prototype.set = function(a, b) {\r\n  goog.asserts.assert(a.getContainingType() == this.getDescriptor(), \"The current message does not contain the given field\");\r\n  this.set$Value(a.getTag(), b);\r\n};\r\ngoog.proto2.Message.prototype.add = function(a, b) {\r\n  goog.asserts.assert(a.getContainingType() == this.getDescriptor(), \"The current message does not contain the given field\");\r\n  this.add$Value(a.getTag(), b);\r\n};\r\ngoog.proto2.Message.prototype.clear = function(a) {\r\n  goog.asserts.assert(a.getContainingType() == this.getDescriptor(), \"The current message does not contain the given field\");\r\n  this.clear$Field(a.getTag());\r\n};\r\ngoog.proto2.Message.prototype.equals = function(a) {\r\n  if (!a || this.constructor != a.constructor) {\r\n    return !1;\r\n  }\r\n  for (var b = this.getDescriptor().getFields(), c = 0; c < b.length; c++) {\r\n    var d = b[c], e = d.getTag();\r\n    if (this.has$Value(e) != a.has$Value(e)) {\r\n      return !1;\r\n    }\r\n    if (this.has$Value(e)) {\r\n      var f = d.isCompositeType(), g = this.getValueForTag_(e);\r\n      e = a.getValueForTag_(e);\r\n      if (d.isRepeated()) {\r\n        if (g.length != e.length) {\r\n          return !1;\r\n        }\r\n        for (d = 0; d < g.length; d++) {\r\n          var h = g[d], k = e[d];\r\n          if (f ? !h.equals(k) : h != k) {\r\n            return !1;\r\n          }\r\n        }\r\n      } else {\r\n        if (f ? !g.equals(e) : g != e) {\r\n          return !1;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return !0;\r\n};\r\ngoog.proto2.Message.prototype.copyFrom = function(a) {\r\n  goog.asserts.assert(this.constructor == a.constructor, \"The source message must have the same type.\");\r\n  this != a && (this.values_ = {}, this.deserializedFields_ && (this.deserializedFields_ = {}), this.mergeFrom(a));\r\n};\r\ngoog.proto2.Message.prototype.mergeFrom = function(a) {\r\n  goog.asserts.assert(this.constructor == a.constructor, \"The source message must have the same type.\");\r\n  for (var b = this.getDescriptor().getFields(), c = 0; c < b.length; c++) {\r\n    var d = b[c], e = d.getTag();\r\n    if (a.has$Value(e)) {\r\n      this.deserializedFields_ && delete this.deserializedFields_[d.getTag()];\r\n      var f = d.isCompositeType();\r\n      if (d.isRepeated()) {\r\n        d = a.array$Values(e);\r\n        for (var g = 0; g < d.length; g++) {\r\n          this.add$Value(e, f ? d[g].clone() : d[g]);\r\n        }\r\n      } else {\r\n        d = a.getValueForTag_(e), f ? (f = this.getValueForTag_(e)) ? f.mergeFrom(d) : this.set$Value(e, d.clone()) : this.set$Value(e, d);\r\n      }\r\n    }\r\n  }\r\n};\r\ngoog.proto2.Message.prototype.clone = function() {\r\n  var a = new this.constructor;\r\n  a.copyFrom(this);\r\n  return a;\r\n};\r\ngoog.proto2.Message.prototype.initDefaults = function(a) {\r\n  for (var b = this.getDescriptor().getFields(), c = 0; c < b.length; c++) {\r\n    var d = b[c], e = d.getTag(), f = d.isCompositeType();\r\n    this.has$Value(e) || d.isRepeated() || (f ? this.values_[e] = new (d.getNativeType()) : a && (this.values_[e] = d.getDefaultValue()));\r\n    if (f) {\r\n      if (d.isRepeated()) {\r\n        for (d = this.array$Values(e), e = 0; e < d.length; e++) {\r\n          d[e].initDefaults(a);\r\n        }\r\n      } else {\r\n        this.get$Value(e).initDefaults(a);\r\n      }\r\n    }\r\n  }\r\n};\r\ngoog.proto2.Message.prototype.has$Value = function(a) {\r\n  return null != this.values_[a];\r\n};\r\ngoog.proto2.Message.prototype.getValueForTag_ = function(a) {\r\n  var b = this.values_[a];\r\n  return goog.isDefAndNotNull(b) ? this.lazyDeserializer_ ? a in this.deserializedFields_ ? this.deserializedFields_[a] : (b = this.lazyDeserializer_.deserializeField(this, this.fields_[a], b), this.deserializedFields_[a] = b) : b : null;\r\n};\r\ngoog.proto2.Message.prototype.get$Value = function(a, b) {\r\n  var c = this.getValueForTag_(a);\r\n  if (this.fields_[a].isRepeated()) {\r\n    var d = b || 0;\r\n    goog.asserts.assert(0 <= d && d < c.length, \"Given index %s is out of bounds.  Repeated field length: %s\", d, c.length);\r\n    return c[d];\r\n  }\r\n  return c;\r\n};\r\ngoog.proto2.Message.prototype.get$ValueOrDefault = function(a, b) {\r\n  return this.has$Value(a) ? this.get$Value(a, b) : this.fields_[a].getDefaultValue();\r\n};\r\ngoog.proto2.Message.prototype.array$Values = function(a) {\r\n  return this.getValueForTag_(a) || [];\r\n};\r\ngoog.proto2.Message.prototype.count$Values = function(a) {\r\n  return this.fields_[a].isRepeated() ? this.has$Value(a) ? this.values_[a].length : 0 : this.has$Value(a) ? 1 : 0;\r\n};\r\ngoog.proto2.Message.prototype.set$Value = function(a, b) {\r\n  goog.asserts.ENABLE_ASSERTS && this.checkFieldType_(this.fields_[a], b);\r\n  this.values_[a] = b;\r\n  this.deserializedFields_ && (this.deserializedFields_[a] = b);\r\n};\r\ngoog.proto2.Message.prototype.add$Value = function(a, b) {\r\n  goog.asserts.ENABLE_ASSERTS && this.checkFieldType_(this.fields_[a], b);\r\n  this.values_[a] || (this.values_[a] = []);\r\n  this.values_[a].push(b);\r\n  this.deserializedFields_ && delete this.deserializedFields_[a];\r\n};\r\ngoog.proto2.Message.prototype.checkFieldType_ = function(a, b) {\r\n  a.getFieldType() == goog.proto2.FieldDescriptor.FieldType.ENUM ? goog.asserts.assertNumber(b) : goog.asserts.assert(Object(b).constructor == a.getNativeType());\r\n};\r\ngoog.proto2.Message.prototype.clear$Field = function(a) {\r\n  delete this.values_[a];\r\n  this.deserializedFields_ && delete this.deserializedFields_[a];\r\n};\r\ngoog.proto2.Message.createDescriptor = function(a, b) {\r\n  var c = [], d = b[0], e;\r\n  for (e in b) {\r\n    0 != e && c.push(new goog.proto2.FieldDescriptor(a, e, b[e]));\r\n  }\r\n  return new goog.proto2.Descriptor(a, d, c);\r\n};\r\ngoog.proto2.Serializer = function() {\r\n};\r\ngoog.proto2.Serializer.DECODE_SYMBOLIC_ENUMS = !1;\r\ngoog.proto2.Serializer.prototype.serialize = goog.abstractMethod;\r\ngoog.proto2.Serializer.prototype.getSerializedValue = function(a, b) {\r\n  return a.isCompositeType() ? this.serialize(b) : goog.isNumber(b) && !isFinite(b) ? b.toString() : b;\r\n};\r\ngoog.proto2.Serializer.prototype.deserialize = function(a, b) {\r\n  var c = a.createMessageInstance();\r\n  this.deserializeTo(c, b);\r\n  goog.asserts.assert(c instanceof goog.proto2.Message);\r\n  return c;\r\n};\r\ngoog.proto2.Serializer.prototype.deserializeTo = goog.abstractMethod;\r\ngoog.proto2.Serializer.prototype.getDeserializedValue = function(a, b) {\r\n  if (a.isCompositeType()) {\r\n    return b instanceof goog.proto2.Message ? b : this.deserialize(a.getFieldMessageType(), b);\r\n  }\r\n  if (a.getFieldType() == goog.proto2.FieldDescriptor.FieldType.ENUM) {\r\n    if (goog.proto2.Serializer.DECODE_SYMBOLIC_ENUMS && goog.isString(b)) {\r\n      var c = a.getNativeType();\r\n      if (c.hasOwnProperty(b)) {\r\n        return c[b];\r\n      }\r\n    }\r\n    return goog.isString(b) && goog.proto2.Serializer.INTEGER_REGEX.test(b) && (c = Number(b), 0 < c) ? c : b;\r\n  }\r\n  if (!a.deserializationConversionPermitted()) {\r\n    return b;\r\n  }\r\n  c = a.getNativeType();\r\n  if (c === String) {\r\n    if (goog.isNumber(b)) {\r\n      return String(b);\r\n    }\r\n  } else {\r\n    if (c === Number && goog.isString(b) && (\"Infinity\" === b || \"-Infinity\" === b || \"NaN\" === b || goog.proto2.Serializer.INTEGER_REGEX.test(b))) {\r\n      return Number(b);\r\n    }\r\n  }\r\n  return b;\r\n};\r\ngoog.proto2.Serializer.INTEGER_REGEX = /^-?[0-9]+$/;\r\ngoog.proto2.LazyDeserializer = function() {\r\n};\r\ngoog.inherits(goog.proto2.LazyDeserializer, goog.proto2.Serializer);\r\ngoog.proto2.LazyDeserializer.prototype.deserialize = function(a, b) {\r\n  var c = a.createMessageInstance();\r\n  c.initializeForLazyDeserializer(this, b);\r\n  goog.asserts.assert(c instanceof goog.proto2.Message);\r\n  return c;\r\n};\r\ngoog.proto2.LazyDeserializer.prototype.deserializeTo = function(a, b) {\r\n  throw Error(\"Unimplemented\");\r\n};\r\ngoog.proto2.LazyDeserializer.prototype.deserializeField = goog.abstractMethod;\r\ngoog.proto2.PbLiteSerializer = function() {\r\n};\r\ngoog.inherits(goog.proto2.PbLiteSerializer, goog.proto2.LazyDeserializer);\r\ngoog.proto2.PbLiteSerializer.prototype.zeroIndexing_ = !1;\r\ngoog.proto2.PbLiteSerializer.prototype.setZeroIndexed = function(a) {\r\n  this.zeroIndexing_ = a;\r\n};\r\ngoog.proto2.PbLiteSerializer.prototype.serialize = function(a) {\r\n  for (var b = a.getDescriptor().getFields(), c = [], d = this.zeroIndexing_, e = 0; e < b.length; e++) {\r\n    var f = b[e];\r\n    if (a.has(f)) {\r\n      var g = f.getTag();\r\n      g = d ? g - 1 : g;\r\n      if (f.isRepeated()) {\r\n        c[g] = [];\r\n        for (var h = 0; h < a.countOf(f); h++) {\r\n          c[g][h] = this.getSerializedValue(f, a.get(f, h));\r\n        }\r\n      } else {\r\n        c[g] = this.getSerializedValue(f, a.get(f));\r\n      }\r\n    }\r\n  }\r\n  a.forEachUnknown(function(a, b) {\r\n    c[d ? a - 1 : a] = b;\r\n  });\r\n  return c;\r\n};\r\ngoog.proto2.PbLiteSerializer.prototype.deserializeField = function(a, b, c) {\r\n  if (null == c) {\r\n    return c;\r\n  }\r\n  if (b.isRepeated()) {\r\n    a = [];\r\n    goog.asserts.assert(goog.isArray(c), \"Value must be array: %s\", c);\r\n    for (var d = 0; d < c.length; d++) {\r\n      a[d] = this.getDeserializedValue(b, c[d]);\r\n    }\r\n    return a;\r\n  }\r\n  return this.getDeserializedValue(b, c);\r\n};\r\ngoog.proto2.PbLiteSerializer.prototype.getSerializedValue = function(a, b) {\r\n  return a.getFieldType() == goog.proto2.FieldDescriptor.FieldType.BOOL ? b ? 1 : 0 : goog.proto2.Serializer.prototype.getSerializedValue.apply(this, arguments);\r\n};\r\ngoog.proto2.PbLiteSerializer.prototype.getDeserializedValue = function(a, b) {\r\n  return a.getFieldType() == goog.proto2.FieldDescriptor.FieldType.BOOL ? (goog.asserts.assert(goog.isNumber(b) || goog.isBoolean(b), \"Value is expected to be a number or boolean\"), !!b) : goog.proto2.Serializer.prototype.getDeserializedValue.apply(this, arguments);\r\n};\r\ngoog.proto2.PbLiteSerializer.prototype.deserialize = function(a, b) {\r\n  var c = b;\r\n  if (this.zeroIndexing_) {\r\n    c = [];\r\n    for (var d in b) {\r\n      c[parseInt(d, 10) + 1] = b[d];\r\n    }\r\n  }\r\n  return goog.proto2.PbLiteSerializer.superClass_.deserialize.call(this, a, c);\r\n};\r\n/*\r\n\r\n Protocol Buffer 2 Copyright 2008 Google Inc.\r\n All other code copyright its respective owners.\r\n Copyright (C) 2010 The Libphonenumber Authors\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n*/\r\nvar i18n = {phonenumbers:{}};\r\ni18n.phonenumbers.NumberFormat = function() {\r\n  goog.proto2.Message.call(this);\r\n};\r\ngoog.inherits(i18n.phonenumbers.NumberFormat, goog.proto2.Message);\r\ni18n.phonenumbers.NumberFormat.descriptor_ = null;\r\ni18n.phonenumbers.NumberFormat.prototype.getPattern = function() {\r\n  return this.get$Value(1);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getPatternOrDefault = function() {\r\n  return this.get$ValueOrDefault(1);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.setPattern = function(a) {\r\n  this.set$Value(1, a);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.hasPattern = function() {\r\n  return this.has$Value(1);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.patternCount = function() {\r\n  return this.count$Values(1);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.clearPattern = function() {\r\n  this.clear$Field(1);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getFormat = function() {\r\n  return this.get$Value(2);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getFormatOrDefault = function() {\r\n  return this.get$ValueOrDefault(2);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.setFormat = function(a) {\r\n  this.set$Value(2, a);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.hasFormat = function() {\r\n  return this.has$Value(2);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.formatCount = function() {\r\n  return this.count$Values(2);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.clearFormat = function() {\r\n  this.clear$Field(2);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getLeadingDigitsPattern = function(a) {\r\n  return this.get$Value(3, a);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getLeadingDigitsPatternOrDefault = function(a) {\r\n  return this.get$ValueOrDefault(3, a);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.addLeadingDigitsPattern = function(a) {\r\n  this.add$Value(3, a);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.leadingDigitsPatternArray = function() {\r\n  return this.array$Values(3);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.hasLeadingDigitsPattern = function() {\r\n  return this.has$Value(3);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.leadingDigitsPatternCount = function() {\r\n  return this.count$Values(3);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.clearLeadingDigitsPattern = function() {\r\n  this.clear$Field(3);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getNationalPrefixFormattingRule = function() {\r\n  return this.get$Value(4);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getNationalPrefixFormattingRuleOrDefault = function() {\r\n  return this.get$ValueOrDefault(4);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.setNationalPrefixFormattingRule = function(a) {\r\n  this.set$Value(4, a);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.hasNationalPrefixFormattingRule = function() {\r\n  return this.has$Value(4);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.nationalPrefixFormattingRuleCount = function() {\r\n  return this.count$Values(4);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.clearNationalPrefixFormattingRule = function() {\r\n  this.clear$Field(4);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getNationalPrefixOptionalWhenFormatting = function() {\r\n  return this.get$Value(6);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getNationalPrefixOptionalWhenFormattingOrDefault = function() {\r\n  return this.get$ValueOrDefault(6);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.setNationalPrefixOptionalWhenFormatting = function(a) {\r\n  this.set$Value(6, a);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.hasNationalPrefixOptionalWhenFormatting = function() {\r\n  return this.has$Value(6);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.nationalPrefixOptionalWhenFormattingCount = function() {\r\n  return this.count$Values(6);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.clearNationalPrefixOptionalWhenFormatting = function() {\r\n  this.clear$Field(6);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getDomesticCarrierCodeFormattingRule = function() {\r\n  return this.get$Value(5);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getDomesticCarrierCodeFormattingRuleOrDefault = function() {\r\n  return this.get$ValueOrDefault(5);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.setDomesticCarrierCodeFormattingRule = function(a) {\r\n  this.set$Value(5, a);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.hasDomesticCarrierCodeFormattingRule = function() {\r\n  return this.has$Value(5);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.domesticCarrierCodeFormattingRuleCount = function() {\r\n  return this.count$Values(5);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.clearDomesticCarrierCodeFormattingRule = function() {\r\n  this.clear$Field(5);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc = function() {\r\n  goog.proto2.Message.call(this);\r\n};\r\ngoog.inherits(i18n.phonenumbers.PhoneNumberDesc, goog.proto2.Message);\r\ni18n.phonenumbers.PhoneNumberDesc.descriptor_ = null;\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.getNationalNumberPattern = function() {\r\n  return this.get$Value(2);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.getNationalNumberPatternOrDefault = function() {\r\n  return this.get$ValueOrDefault(2);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.setNationalNumberPattern = function(a) {\r\n  this.set$Value(2, a);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.hasNationalNumberPattern = function() {\r\n  return this.has$Value(2);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.nationalNumberPatternCount = function() {\r\n  return this.count$Values(2);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.clearNationalNumberPattern = function() {\r\n  this.clear$Field(2);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.getPossibleLength = function(a) {\r\n  return this.get$Value(9, a);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.getPossibleLengthOrDefault = function(a) {\r\n  return this.get$ValueOrDefault(9, a);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.addPossibleLength = function(a) {\r\n  this.add$Value(9, a);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.possibleLengthArray = function() {\r\n  return this.array$Values(9);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.hasPossibleLength = function() {\r\n  return this.has$Value(9);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.possibleLengthCount = function() {\r\n  return this.count$Values(9);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.clearPossibleLength = function() {\r\n  this.clear$Field(9);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.getPossibleLengthLocalOnly = function(a) {\r\n  return this.get$Value(10, a);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.getPossibleLengthLocalOnlyOrDefault = function(a) {\r\n  return this.get$ValueOrDefault(10, a);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.addPossibleLengthLocalOnly = function(a) {\r\n  this.add$Value(10, a);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.possibleLengthLocalOnlyArray = function() {\r\n  return this.array$Values(10);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.hasPossibleLengthLocalOnly = function() {\r\n  return this.has$Value(10);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.possibleLengthLocalOnlyCount = function() {\r\n  return this.count$Values(10);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.clearPossibleLengthLocalOnly = function() {\r\n  this.clear$Field(10);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.getExampleNumber = function() {\r\n  return this.get$Value(6);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.getExampleNumberOrDefault = function() {\r\n  return this.get$ValueOrDefault(6);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.setExampleNumber = function(a) {\r\n  this.set$Value(6, a);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.hasExampleNumber = function() {\r\n  return this.has$Value(6);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.exampleNumberCount = function() {\r\n  return this.count$Values(6);\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.clearExampleNumber = function() {\r\n  this.clear$Field(6);\r\n};\r\ni18n.phonenumbers.PhoneMetadata = function() {\r\n  goog.proto2.Message.call(this);\r\n};\r\ngoog.inherits(i18n.phonenumbers.PhoneMetadata, goog.proto2.Message);\r\ni18n.phonenumbers.PhoneMetadata.descriptor_ = null;\r\ni18n.phonenumbers.PhoneMetadata.prototype.getGeneralDesc = function() {\r\n  return this.get$Value(1);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getGeneralDescOrDefault = function() {\r\n  return this.get$ValueOrDefault(1);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setGeneralDesc = function(a) {\r\n  this.set$Value(1, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasGeneralDesc = function() {\r\n  return this.has$Value(1);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.generalDescCount = function() {\r\n  return this.count$Values(1);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearGeneralDesc = function() {\r\n  this.clear$Field(1);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getFixedLine = function() {\r\n  return this.get$Value(2);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getFixedLineOrDefault = function() {\r\n  return this.get$ValueOrDefault(2);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setFixedLine = function(a) {\r\n  this.set$Value(2, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasFixedLine = function() {\r\n  return this.has$Value(2);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.fixedLineCount = function() {\r\n  return this.count$Values(2);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearFixedLine = function() {\r\n  this.clear$Field(2);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getMobile = function() {\r\n  return this.get$Value(3);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getMobileOrDefault = function() {\r\n  return this.get$ValueOrDefault(3);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setMobile = function(a) {\r\n  this.set$Value(3, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasMobile = function() {\r\n  return this.has$Value(3);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.mobileCount = function() {\r\n  return this.count$Values(3);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearMobile = function() {\r\n  this.clear$Field(3);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getTollFree = function() {\r\n  return this.get$Value(4);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getTollFreeOrDefault = function() {\r\n  return this.get$ValueOrDefault(4);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setTollFree = function(a) {\r\n  this.set$Value(4, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasTollFree = function() {\r\n  return this.has$Value(4);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.tollFreeCount = function() {\r\n  return this.count$Values(4);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearTollFree = function() {\r\n  this.clear$Field(4);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getPremiumRate = function() {\r\n  return this.get$Value(5);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getPremiumRateOrDefault = function() {\r\n  return this.get$ValueOrDefault(5);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setPremiumRate = function(a) {\r\n  this.set$Value(5, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasPremiumRate = function() {\r\n  return this.has$Value(5);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.premiumRateCount = function() {\r\n  return this.count$Values(5);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearPremiumRate = function() {\r\n  this.clear$Field(5);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getSharedCost = function() {\r\n  return this.get$Value(6);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getSharedCostOrDefault = function() {\r\n  return this.get$ValueOrDefault(6);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setSharedCost = function(a) {\r\n  this.set$Value(6, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasSharedCost = function() {\r\n  return this.has$Value(6);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.sharedCostCount = function() {\r\n  return this.count$Values(6);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearSharedCost = function() {\r\n  this.clear$Field(6);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getPersonalNumber = function() {\r\n  return this.get$Value(7);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getPersonalNumberOrDefault = function() {\r\n  return this.get$ValueOrDefault(7);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setPersonalNumber = function(a) {\r\n  this.set$Value(7, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasPersonalNumber = function() {\r\n  return this.has$Value(7);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.personalNumberCount = function() {\r\n  return this.count$Values(7);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearPersonalNumber = function() {\r\n  this.clear$Field(7);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getVoip = function() {\r\n  return this.get$Value(8);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getVoipOrDefault = function() {\r\n  return this.get$ValueOrDefault(8);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setVoip = function(a) {\r\n  this.set$Value(8, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasVoip = function() {\r\n  return this.has$Value(8);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.voipCount = function() {\r\n  return this.count$Values(8);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearVoip = function() {\r\n  this.clear$Field(8);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getPager = function() {\r\n  return this.get$Value(21);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getPagerOrDefault = function() {\r\n  return this.get$ValueOrDefault(21);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setPager = function(a) {\r\n  this.set$Value(21, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasPager = function() {\r\n  return this.has$Value(21);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.pagerCount = function() {\r\n  return this.count$Values(21);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearPager = function() {\r\n  this.clear$Field(21);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getUan = function() {\r\n  return this.get$Value(25);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getUanOrDefault = function() {\r\n  return this.get$ValueOrDefault(25);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setUan = function(a) {\r\n  this.set$Value(25, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasUan = function() {\r\n  return this.has$Value(25);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.uanCount = function() {\r\n  return this.count$Values(25);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearUan = function() {\r\n  this.clear$Field(25);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getEmergency = function() {\r\n  return this.get$Value(27);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getEmergencyOrDefault = function() {\r\n  return this.get$ValueOrDefault(27);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setEmergency = function(a) {\r\n  this.set$Value(27, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasEmergency = function() {\r\n  return this.has$Value(27);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.emergencyCount = function() {\r\n  return this.count$Values(27);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearEmergency = function() {\r\n  this.clear$Field(27);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getVoicemail = function() {\r\n  return this.get$Value(28);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getVoicemailOrDefault = function() {\r\n  return this.get$ValueOrDefault(28);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setVoicemail = function(a) {\r\n  this.set$Value(28, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasVoicemail = function() {\r\n  return this.has$Value(28);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.voicemailCount = function() {\r\n  return this.count$Values(28);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearVoicemail = function() {\r\n  this.clear$Field(28);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getShortCode = function() {\r\n  return this.get$Value(29);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getShortCodeOrDefault = function() {\r\n  return this.get$ValueOrDefault(29);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setShortCode = function(a) {\r\n  this.set$Value(29, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasShortCode = function() {\r\n  return this.has$Value(29);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.shortCodeCount = function() {\r\n  return this.count$Values(29);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearShortCode = function() {\r\n  this.clear$Field(29);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getStandardRate = function() {\r\n  return this.get$Value(30);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getStandardRateOrDefault = function() {\r\n  return this.get$ValueOrDefault(30);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setStandardRate = function(a) {\r\n  this.set$Value(30, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasStandardRate = function() {\r\n  return this.has$Value(30);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.standardRateCount = function() {\r\n  return this.count$Values(30);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearStandardRate = function() {\r\n  this.clear$Field(30);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getCarrierSpecific = function() {\r\n  return this.get$Value(31);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getCarrierSpecificOrDefault = function() {\r\n  return this.get$ValueOrDefault(31);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setCarrierSpecific = function(a) {\r\n  this.set$Value(31, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasCarrierSpecific = function() {\r\n  return this.has$Value(31);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.carrierSpecificCount = function() {\r\n  return this.count$Values(31);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearCarrierSpecific = function() {\r\n  this.clear$Field(31);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getSmsServices = function() {\r\n  return this.get$Value(33);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getSmsServicesOrDefault = function() {\r\n  return this.get$ValueOrDefault(33);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setSmsServices = function(a) {\r\n  this.set$Value(33, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasSmsServices = function() {\r\n  return this.has$Value(33);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.smsServicesCount = function() {\r\n  return this.count$Values(33);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearSmsServices = function() {\r\n  this.clear$Field(33);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getNoInternationalDialling = function() {\r\n  return this.get$Value(24);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getNoInternationalDiallingOrDefault = function() {\r\n  return this.get$ValueOrDefault(24);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setNoInternationalDialling = function(a) {\r\n  this.set$Value(24, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasNoInternationalDialling = function() {\r\n  return this.has$Value(24);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.noInternationalDiallingCount = function() {\r\n  return this.count$Values(24);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearNoInternationalDialling = function() {\r\n  this.clear$Field(24);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getId = function() {\r\n  return this.get$Value(9);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getIdOrDefault = function() {\r\n  return this.get$ValueOrDefault(9);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setId = function(a) {\r\n  this.set$Value(9, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasId = function() {\r\n  return this.has$Value(9);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.idCount = function() {\r\n  return this.count$Values(9);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearId = function() {\r\n  this.clear$Field(9);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getCountryCode = function() {\r\n  return this.get$Value(10);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getCountryCodeOrDefault = function() {\r\n  return this.get$ValueOrDefault(10);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setCountryCode = function(a) {\r\n  this.set$Value(10, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasCountryCode = function() {\r\n  return this.has$Value(10);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.countryCodeCount = function() {\r\n  return this.count$Values(10);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearCountryCode = function() {\r\n  this.clear$Field(10);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getInternationalPrefix = function() {\r\n  return this.get$Value(11);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getInternationalPrefixOrDefault = function() {\r\n  return this.get$ValueOrDefault(11);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setInternationalPrefix = function(a) {\r\n  this.set$Value(11, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasInternationalPrefix = function() {\r\n  return this.has$Value(11);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.internationalPrefixCount = function() {\r\n  return this.count$Values(11);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearInternationalPrefix = function() {\r\n  this.clear$Field(11);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getPreferredInternationalPrefix = function() {\r\n  return this.get$Value(17);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getPreferredInternationalPrefixOrDefault = function() {\r\n  return this.get$ValueOrDefault(17);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setPreferredInternationalPrefix = function(a) {\r\n  this.set$Value(17, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasPreferredInternationalPrefix = function() {\r\n  return this.has$Value(17);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.preferredInternationalPrefixCount = function() {\r\n  return this.count$Values(17);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearPreferredInternationalPrefix = function() {\r\n  this.clear$Field(17);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefix = function() {\r\n  return this.get$Value(12);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefixOrDefault = function() {\r\n  return this.get$ValueOrDefault(12);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setNationalPrefix = function(a) {\r\n  this.set$Value(12, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasNationalPrefix = function() {\r\n  return this.has$Value(12);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.nationalPrefixCount = function() {\r\n  return this.count$Values(12);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearNationalPrefix = function() {\r\n  this.clear$Field(12);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getPreferredExtnPrefix = function() {\r\n  return this.get$Value(13);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getPreferredExtnPrefixOrDefault = function() {\r\n  return this.get$ValueOrDefault(13);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setPreferredExtnPrefix = function(a) {\r\n  this.set$Value(13, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasPreferredExtnPrefix = function() {\r\n  return this.has$Value(13);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.preferredExtnPrefixCount = function() {\r\n  return this.count$Values(13);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearPreferredExtnPrefix = function() {\r\n  this.clear$Field(13);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefixForParsing = function() {\r\n  return this.get$Value(15);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefixForParsingOrDefault = function() {\r\n  return this.get$ValueOrDefault(15);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setNationalPrefixForParsing = function(a) {\r\n  this.set$Value(15, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasNationalPrefixForParsing = function() {\r\n  return this.has$Value(15);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.nationalPrefixForParsingCount = function() {\r\n  return this.count$Values(15);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearNationalPrefixForParsing = function() {\r\n  this.clear$Field(15);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefixTransformRule = function() {\r\n  return this.get$Value(16);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getNationalPrefixTransformRuleOrDefault = function() {\r\n  return this.get$ValueOrDefault(16);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setNationalPrefixTransformRule = function(a) {\r\n  this.set$Value(16, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasNationalPrefixTransformRule = function() {\r\n  return this.has$Value(16);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.nationalPrefixTransformRuleCount = function() {\r\n  return this.count$Values(16);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearNationalPrefixTransformRule = function() {\r\n  this.clear$Field(16);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getSameMobileAndFixedLinePattern = function() {\r\n  return this.get$Value(18);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getSameMobileAndFixedLinePatternOrDefault = function() {\r\n  return this.get$ValueOrDefault(18);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setSameMobileAndFixedLinePattern = function(a) {\r\n  this.set$Value(18, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasSameMobileAndFixedLinePattern = function() {\r\n  return this.has$Value(18);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.sameMobileAndFixedLinePatternCount = function() {\r\n  return this.count$Values(18);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearSameMobileAndFixedLinePattern = function() {\r\n  this.clear$Field(18);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getNumberFormat = function(a) {\r\n  return this.get$Value(19, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getNumberFormatOrDefault = function(a) {\r\n  return this.get$ValueOrDefault(19, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.addNumberFormat = function(a) {\r\n  this.add$Value(19, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.numberFormatArray = function() {\r\n  return this.array$Values(19);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasNumberFormat = function() {\r\n  return this.has$Value(19);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.numberFormatCount = function() {\r\n  return this.count$Values(19);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearNumberFormat = function() {\r\n  this.clear$Field(19);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getIntlNumberFormat = function(a) {\r\n  return this.get$Value(20, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getIntlNumberFormatOrDefault = function(a) {\r\n  return this.get$ValueOrDefault(20, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.addIntlNumberFormat = function(a) {\r\n  this.add$Value(20, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.intlNumberFormatArray = function() {\r\n  return this.array$Values(20);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasIntlNumberFormat = function() {\r\n  return this.has$Value(20);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.intlNumberFormatCount = function() {\r\n  return this.count$Values(20);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearIntlNumberFormat = function() {\r\n  this.clear$Field(20);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getMainCountryForCode = function() {\r\n  return this.get$Value(22);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getMainCountryForCodeOrDefault = function() {\r\n  return this.get$ValueOrDefault(22);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setMainCountryForCode = function(a) {\r\n  this.set$Value(22, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasMainCountryForCode = function() {\r\n  return this.has$Value(22);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.mainCountryForCodeCount = function() {\r\n  return this.count$Values(22);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearMainCountryForCode = function() {\r\n  this.clear$Field(22);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getLeadingDigits = function() {\r\n  return this.get$Value(23);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getLeadingDigitsOrDefault = function() {\r\n  return this.get$ValueOrDefault(23);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setLeadingDigits = function(a) {\r\n  this.set$Value(23, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasLeadingDigits = function() {\r\n  return this.has$Value(23);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.leadingDigitsCount = function() {\r\n  return this.count$Values(23);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearLeadingDigits = function() {\r\n  this.clear$Field(23);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getLeadingZeroPossible = function() {\r\n  return this.get$Value(26);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.getLeadingZeroPossibleOrDefault = function() {\r\n  return this.get$ValueOrDefault(26);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.setLeadingZeroPossible = function(a) {\r\n  this.set$Value(26, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.hasLeadingZeroPossible = function() {\r\n  return this.has$Value(26);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.leadingZeroPossibleCount = function() {\r\n  return this.count$Values(26);\r\n};\r\ni18n.phonenumbers.PhoneMetadata.prototype.clearLeadingZeroPossible = function() {\r\n  this.clear$Field(26);\r\n};\r\ni18n.phonenumbers.PhoneMetadataCollection = function() {\r\n  goog.proto2.Message.call(this);\r\n};\r\ngoog.inherits(i18n.phonenumbers.PhoneMetadataCollection, goog.proto2.Message);\r\ni18n.phonenumbers.PhoneMetadataCollection.descriptor_ = null;\r\ni18n.phonenumbers.PhoneMetadataCollection.prototype.getMetadata = function(a) {\r\n  return this.get$Value(1, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadataCollection.prototype.getMetadataOrDefault = function(a) {\r\n  return this.get$ValueOrDefault(1, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadataCollection.prototype.addMetadata = function(a) {\r\n  this.add$Value(1, a);\r\n};\r\ni18n.phonenumbers.PhoneMetadataCollection.prototype.metadataArray = function() {\r\n  return this.array$Values(1);\r\n};\r\ni18n.phonenumbers.PhoneMetadataCollection.prototype.hasMetadata = function() {\r\n  return this.has$Value(1);\r\n};\r\ni18n.phonenumbers.PhoneMetadataCollection.prototype.metadataCount = function() {\r\n  return this.count$Values(1);\r\n};\r\ni18n.phonenumbers.PhoneMetadataCollection.prototype.clearMetadata = function() {\r\n  this.clear$Field(1);\r\n};\r\ni18n.phonenumbers.NumberFormat.prototype.getDescriptor = function() {\r\n  var a = i18n.phonenumbers.NumberFormat.descriptor_;\r\n  a || (i18n.phonenumbers.NumberFormat.descriptor_ = a = goog.proto2.Message.createDescriptor(i18n.phonenumbers.NumberFormat, {0:{name:\"NumberFormat\", fullName:\"i18n.phonenumbers.NumberFormat\"}, 1:{name:\"pattern\", required:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 2:{name:\"format\", required:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 3:{name:\"leading_digits_pattern\", repeated:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 4:{name:\"national_prefix_formatting_rule\", \r\n  fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 6:{name:\"national_prefix_optional_when_formatting\", fieldType:goog.proto2.Message.FieldType.BOOL, defaultValue:!1, type:Boolean}, 5:{name:\"domestic_carrier_code_formatting_rule\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}}));\r\n  return a;\r\n};\r\ni18n.phonenumbers.NumberFormat.getDescriptor = i18n.phonenumbers.NumberFormat.prototype.getDescriptor;\r\ni18n.phonenumbers.PhoneNumberDesc.prototype.getDescriptor = function() {\r\n  var a = i18n.phonenumbers.PhoneNumberDesc.descriptor_;\r\n  a || (i18n.phonenumbers.PhoneNumberDesc.descriptor_ = a = goog.proto2.Message.createDescriptor(i18n.phonenumbers.PhoneNumberDesc, {0:{name:\"PhoneNumberDesc\", fullName:\"i18n.phonenumbers.PhoneNumberDesc\"}, 2:{name:\"national_number_pattern\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 9:{name:\"possible_length\", repeated:!0, fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 10:{name:\"possible_length_local_only\", repeated:!0, fieldType:goog.proto2.Message.FieldType.INT32, \r\n  type:Number}, 6:{name:\"example_number\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}}));\r\n  return a;\r\n};\r\ni18n.phonenumbers.PhoneNumberDesc.getDescriptor = i18n.phonenumbers.PhoneNumberDesc.prototype.getDescriptor;\r\ni18n.phonenumbers.PhoneMetadata.prototype.getDescriptor = function() {\r\n  var a = i18n.phonenumbers.PhoneMetadata.descriptor_;\r\n  a || (i18n.phonenumbers.PhoneMetadata.descriptor_ = a = goog.proto2.Message.createDescriptor(i18n.phonenumbers.PhoneMetadata, {0:{name:\"PhoneMetadata\", fullName:\"i18n.phonenumbers.PhoneMetadata\"}, 1:{name:\"general_desc\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 2:{name:\"fixed_line\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 3:{name:\"mobile\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, \r\n  4:{name:\"toll_free\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 5:{name:\"premium_rate\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 6:{name:\"shared_cost\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 7:{name:\"personal_number\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 8:{name:\"voip\", fieldType:goog.proto2.Message.FieldType.MESSAGE, \r\n  type:i18n.phonenumbers.PhoneNumberDesc}, 21:{name:\"pager\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 25:{name:\"uan\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 27:{name:\"emergency\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 28:{name:\"voicemail\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 29:{name:\"short_code\", \r\n  fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 30:{name:\"standard_rate\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 31:{name:\"carrier_specific\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 33:{name:\"sms_services\", fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneNumberDesc}, 24:{name:\"no_international_dialling\", fieldType:goog.proto2.Message.FieldType.MESSAGE, \r\n  type:i18n.phonenumbers.PhoneNumberDesc}, 9:{name:\"id\", required:!0, fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 10:{name:\"country_code\", fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 11:{name:\"international_prefix\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 17:{name:\"preferred_international_prefix\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 12:{name:\"national_prefix\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, \r\n  13:{name:\"preferred_extn_prefix\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 15:{name:\"national_prefix_for_parsing\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 16:{name:\"national_prefix_transform_rule\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 18:{name:\"same_mobile_and_fixed_line_pattern\", fieldType:goog.proto2.Message.FieldType.BOOL, defaultValue:!1, type:Boolean}, 19:{name:\"number_format\", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, \r\n  type:i18n.phonenumbers.NumberFormat}, 20:{name:\"intl_number_format\", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.NumberFormat}, 22:{name:\"main_country_for_code\", fieldType:goog.proto2.Message.FieldType.BOOL, defaultValue:!1, type:Boolean}, 23:{name:\"leading_digits\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 26:{name:\"leading_zero_possible\", fieldType:goog.proto2.Message.FieldType.BOOL, defaultValue:!1, type:Boolean}}));\r\n  return a;\r\n};\r\ni18n.phonenumbers.PhoneMetadata.getDescriptor = i18n.phonenumbers.PhoneMetadata.prototype.getDescriptor;\r\ni18n.phonenumbers.PhoneMetadataCollection.prototype.getDescriptor = function() {\r\n  var a = i18n.phonenumbers.PhoneMetadataCollection.descriptor_;\r\n  a || (i18n.phonenumbers.PhoneMetadataCollection.descriptor_ = a = goog.proto2.Message.createDescriptor(i18n.phonenumbers.PhoneMetadataCollection, {0:{name:\"PhoneMetadataCollection\", fullName:\"i18n.phonenumbers.PhoneMetadataCollection\"}, 1:{name:\"metadata\", repeated:!0, fieldType:goog.proto2.Message.FieldType.MESSAGE, type:i18n.phonenumbers.PhoneMetadata}}));\r\n  return a;\r\n};\r\ni18n.phonenumbers.PhoneMetadataCollection.getDescriptor = i18n.phonenumbers.PhoneMetadataCollection.prototype.getDescriptor;\r\ni18n.phonenumbers.PhoneNumber = function() {\r\n  goog.proto2.Message.call(this);\r\n};\r\ngoog.inherits(i18n.phonenumbers.PhoneNumber, goog.proto2.Message);\r\ni18n.phonenumbers.PhoneNumber.descriptor_ = null;\r\ni18n.phonenumbers.PhoneNumber.prototype.getCountryCode = function() {\r\n  return this.get$Value(1);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getCountryCodeOrDefault = function() {\r\n  return this.get$ValueOrDefault(1);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.setCountryCode = function(a) {\r\n  this.set$Value(1, a);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.hasCountryCode = function() {\r\n  return this.has$Value(1);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.countryCodeCount = function() {\r\n  return this.count$Values(1);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.clearCountryCode = function() {\r\n  this.clear$Field(1);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getNationalNumber = function() {\r\n  return this.get$Value(2);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getNationalNumberOrDefault = function() {\r\n  return this.get$ValueOrDefault(2);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.setNationalNumber = function(a) {\r\n  this.set$Value(2, a);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.hasNationalNumber = function() {\r\n  return this.has$Value(2);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.nationalNumberCount = function() {\r\n  return this.count$Values(2);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.clearNationalNumber = function() {\r\n  this.clear$Field(2);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getExtension = function() {\r\n  return this.get$Value(3);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getExtensionOrDefault = function() {\r\n  return this.get$ValueOrDefault(3);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.setExtension = function(a) {\r\n  this.set$Value(3, a);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.hasExtension = function() {\r\n  return this.has$Value(3);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.extensionCount = function() {\r\n  return this.count$Values(3);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.clearExtension = function() {\r\n  this.clear$Field(3);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getItalianLeadingZero = function() {\r\n  return this.get$Value(4);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getItalianLeadingZeroOrDefault = function() {\r\n  return this.get$ValueOrDefault(4);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.setItalianLeadingZero = function(a) {\r\n  this.set$Value(4, a);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.hasItalianLeadingZero = function() {\r\n  return this.has$Value(4);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.italianLeadingZeroCount = function() {\r\n  return this.count$Values(4);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.clearItalianLeadingZero = function() {\r\n  this.clear$Field(4);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getNumberOfLeadingZeros = function() {\r\n  return this.get$Value(8);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getNumberOfLeadingZerosOrDefault = function() {\r\n  return this.get$ValueOrDefault(8);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.setNumberOfLeadingZeros = function(a) {\r\n  this.set$Value(8, a);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.hasNumberOfLeadingZeros = function() {\r\n  return this.has$Value(8);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.numberOfLeadingZerosCount = function() {\r\n  return this.count$Values(8);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.clearNumberOfLeadingZeros = function() {\r\n  this.clear$Field(8);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getRawInput = function() {\r\n  return this.get$Value(5);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getRawInputOrDefault = function() {\r\n  return this.get$ValueOrDefault(5);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.setRawInput = function(a) {\r\n  this.set$Value(5, a);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.hasRawInput = function() {\r\n  return this.has$Value(5);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.rawInputCount = function() {\r\n  return this.count$Values(5);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.clearRawInput = function() {\r\n  this.clear$Field(5);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getCountryCodeSource = function() {\r\n  return this.get$Value(6);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getCountryCodeSourceOrDefault = function() {\r\n  return this.get$ValueOrDefault(6);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.setCountryCodeSource = function(a) {\r\n  this.set$Value(6, a);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.hasCountryCodeSource = function() {\r\n  return this.has$Value(6);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.countryCodeSourceCount = function() {\r\n  return this.count$Values(6);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.clearCountryCodeSource = function() {\r\n  this.clear$Field(6);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getPreferredDomesticCarrierCode = function() {\r\n  return this.get$Value(7);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.getPreferredDomesticCarrierCodeOrDefault = function() {\r\n  return this.get$ValueOrDefault(7);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.setPreferredDomesticCarrierCode = function(a) {\r\n  this.set$Value(7, a);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.hasPreferredDomesticCarrierCode = function() {\r\n  return this.has$Value(7);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.preferredDomesticCarrierCodeCount = function() {\r\n  return this.count$Values(7);\r\n};\r\ni18n.phonenumbers.PhoneNumber.prototype.clearPreferredDomesticCarrierCode = function() {\r\n  this.clear$Field(7);\r\n};\r\ni18n.phonenumbers.PhoneNumber.CountryCodeSource = {UNSPECIFIED:0, FROM_NUMBER_WITH_PLUS_SIGN:1, FROM_NUMBER_WITH_IDD:5, FROM_NUMBER_WITHOUT_PLUS_SIGN:10, FROM_DEFAULT_COUNTRY:20};\r\ni18n.phonenumbers.PhoneNumber.prototype.getDescriptor = function() {\r\n  var a = i18n.phonenumbers.PhoneNumber.descriptor_;\r\n  a || (i18n.phonenumbers.PhoneNumber.descriptor_ = a = goog.proto2.Message.createDescriptor(i18n.phonenumbers.PhoneNumber, {0:{name:\"PhoneNumber\", fullName:\"i18n.phonenumbers.PhoneNumber\"}, 1:{name:\"country_code\", required:!0, fieldType:goog.proto2.Message.FieldType.INT32, type:Number}, 2:{name:\"national_number\", required:!0, fieldType:goog.proto2.Message.FieldType.UINT64, type:Number}, 3:{name:\"extension\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 4:{name:\"italian_leading_zero\", \r\n  fieldType:goog.proto2.Message.FieldType.BOOL, type:Boolean}, 8:{name:\"number_of_leading_zeros\", fieldType:goog.proto2.Message.FieldType.INT32, defaultValue:1, type:Number}, 5:{name:\"raw_input\", fieldType:goog.proto2.Message.FieldType.STRING, type:String}, 6:{name:\"country_code_source\", fieldType:goog.proto2.Message.FieldType.ENUM, defaultValue:i18n.phonenumbers.PhoneNumber.CountryCodeSource.UNSPECIFIED, type:i18n.phonenumbers.PhoneNumber.CountryCodeSource}, 7:{name:\"preferred_domestic_carrier_code\", \r\n  fieldType:goog.proto2.Message.FieldType.STRING, type:String}}));\r\n  return a;\r\n};\r\ni18n.phonenumbers.PhoneNumber.ctor = i18n.phonenumbers.PhoneNumber;\r\ni18n.phonenumbers.PhoneNumber.ctor.getDescriptor = i18n.phonenumbers.PhoneNumber.prototype.getDescriptor;\r\n/*\r\n\r\n Copyright (C) 2010 The Libphonenumber Authors\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n*/\r\ni18n.phonenumbers.metadata = {};\r\ni18n.phonenumbers.metadata.countryCodeToRegionCodeMap = {1:\"US AG AI AS BB BM BS CA DM DO GD GU JM KN KY LC MP MS PR SX TC TT VC VG VI\".split(\" \"), 7:[\"RU\", \"KZ\"], 20:[\"EG\"], 27:[\"ZA\"], 30:[\"GR\"], 31:[\"NL\"], 32:[\"BE\"], 33:[\"FR\"], 34:[\"ES\"], 36:[\"HU\"], 39:[\"IT\", \"VA\"], 40:[\"RO\"], 41:[\"CH\"], 43:[\"AT\"], 44:[\"GB\", \"GG\", \"IM\", \"JE\"], 45:[\"DK\"], 46:[\"SE\"], 47:[\"NO\", \"SJ\"], 48:[\"PL\"], 49:[\"DE\"], 51:[\"PE\"], 52:[\"MX\"], 53:[\"CU\"], 54:[\"AR\"], 55:[\"BR\"], 56:[\"CL\"], 57:[\"CO\"], 58:[\"VE\"], 60:[\"MY\"], 61:[\"AU\", \r\n\"CC\", \"CX\"], 62:[\"ID\"], 63:[\"PH\"], 64:[\"NZ\"], 65:[\"SG\"], 66:[\"TH\"], 81:[\"JP\"], 82:[\"KR\"], 84:[\"VN\"], 86:[\"CN\"], 90:[\"TR\"], 91:[\"IN\"], 92:[\"PK\"], 93:[\"AF\"], 94:[\"LK\"], 95:[\"MM\"], 98:[\"IR\"], 211:[\"SS\"], 212:[\"MA\", \"EH\"], 213:[\"DZ\"], 216:[\"TN\"], 218:[\"LY\"], 220:[\"GM\"], 221:[\"SN\"], 222:[\"MR\"], 223:[\"ML\"], 224:[\"GN\"], 225:[\"CI\"], 226:[\"BF\"], 227:[\"NE\"], 228:[\"TG\"], 229:[\"BJ\"], 230:[\"MU\"], 231:[\"LR\"], 232:[\"SL\"], 233:[\"GH\"], 234:[\"NG\"], 235:[\"TD\"], 236:[\"CF\"], 237:[\"CM\"], 238:[\"CV\"], 239:[\"ST\"], 240:[\"GQ\"], \r\n241:[\"GA\"], 242:[\"CG\"], 243:[\"CD\"], 244:[\"AO\"], 245:[\"GW\"], 246:[\"IO\"], 247:[\"AC\"], 248:[\"SC\"], 249:[\"SD\"], 250:[\"RW\"], 251:[\"ET\"], 252:[\"SO\"], 253:[\"DJ\"], 254:[\"KE\"], 255:[\"TZ\"], 256:[\"UG\"], 257:[\"BI\"], 258:[\"MZ\"], 260:[\"ZM\"], 261:[\"MG\"], 262:[\"RE\", \"YT\"], 263:[\"ZW\"], 264:[\"NA\"], 265:[\"MW\"], 266:[\"LS\"], 267:[\"BW\"], 268:[\"SZ\"], 269:[\"KM\"], 290:[\"SH\", \"TA\"], 291:[\"ER\"], 297:[\"AW\"], 298:[\"FO\"], 299:[\"GL\"], 350:[\"GI\"], 351:[\"PT\"], 352:[\"LU\"], 353:[\"IE\"], 354:[\"IS\"], 355:[\"AL\"], 356:[\"MT\"], 357:[\"CY\"], \r\n358:[\"FI\", \"AX\"], 359:[\"BG\"], 370:[\"LT\"], 371:[\"LV\"], 372:[\"EE\"], 373:[\"MD\"], 374:[\"AM\"], 375:[\"BY\"], 376:[\"AD\"], 377:[\"MC\"], 378:[\"SM\"], 380:[\"UA\"], 381:[\"RS\"], 382:[\"ME\"], 383:[\"XK\"], 385:[\"HR\"], 386:[\"SI\"], 387:[\"BA\"], 389:[\"MK\"], 420:[\"CZ\"], 421:[\"SK\"], 423:[\"LI\"], 500:[\"FK\"], 501:[\"BZ\"], 502:[\"GT\"], 503:[\"SV\"], 504:[\"HN\"], 505:[\"NI\"], 506:[\"CR\"], 507:[\"PA\"], 508:[\"PM\"], 509:[\"HT\"], 590:[\"GP\", \"BL\", \"MF\"], 591:[\"BO\"], 592:[\"GY\"], 593:[\"EC\"], 594:[\"GF\"], 595:[\"PY\"], 596:[\"MQ\"], 597:[\"SR\"], 598:[\"UY\"], \r\n599:[\"CW\", \"BQ\"], 670:[\"TL\"], 672:[\"NF\"], 673:[\"BN\"], 674:[\"NR\"], 675:[\"PG\"], 676:[\"TO\"], 677:[\"SB\"], 678:[\"VU\"], 679:[\"FJ\"], 680:[\"PW\"], 681:[\"WF\"], 682:[\"CK\"], 683:[\"NU\"], 685:[\"WS\"], 686:[\"KI\"], 687:[\"NC\"], 688:[\"TV\"], 689:[\"PF\"], 690:[\"TK\"], 691:[\"FM\"], 692:[\"MH\"], 800:[\"001\"], 808:[\"001\"], 850:[\"KP\"], 852:[\"HK\"], 853:[\"MO\"], 855:[\"KH\"], 856:[\"LA\"], 870:[\"001\"], 878:[\"001\"], 880:[\"BD\"], 881:[\"001\"], 882:[\"001\"], 883:[\"001\"], 886:[\"TW\"], 888:[\"001\"], 960:[\"MV\"], 961:[\"LB\"], 962:[\"JO\"], 963:[\"SY\"], \r\n964:[\"IQ\"], 965:[\"KW\"], 966:[\"SA\"], 967:[\"YE\"], 968:[\"OM\"], 970:[\"PS\"], 971:[\"AE\"], 972:[\"IL\"], 973:[\"BH\"], 974:[\"QA\"], 975:[\"BT\"], 976:[\"MN\"], 977:[\"NP\"], 979:[\"001\"], 992:[\"TJ\"], 993:[\"TM\"], 994:[\"AZ\"], 995:[\"GE\"], 996:[\"KG\"], 998:[\"UZ\"]};\r\ni18n.phonenumbers.metadata.countryToMetadata = {AC:[, [, , \"[46]\\\\d{4}|[01589]\\\\d{5}\", , , , , , , [5, 6]], [, , \"6[2-467]\\\\d{3}\", , , , \"62889\", , , [5]], [, , \"4\\\\d{4}\", , , , \"40123\", , , [5]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AC\", 247, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"[01589]\\\\d{5}\", , , , \"542011\", , , [6]], , , [, , , , , , , , , [-1]]], AD:[, \r\n[, , \"[16]\\\\d{5,8}|[37-9]\\\\d{5}\", , , , , , , [6, 8, 9]], [, , \"[78]\\\\d{5}\", , , , \"712345\", , , [6]], [, , \"(?:3\\\\d|6(?:[0-8]|90\\\\d{2}))\\\\d{4}\", , , , \"312345\", , , [6, 9]], [, , \"180[02]\\\\d{4}\", , , , \"18001234\", , , [8]], [, , \"[19]\\\\d{5}\", , , , \"912345\", , , [6]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AD\", 376, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"[137-9]|6[0-8]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"180\", \"180[02]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \r\n\"$1 $2 $3\", [\"690\"]]], , [, , , , , , , , , [-1]], , , [, , \"1800\\\\d{4}\", , , , \"18000000\", , , [8]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], AE:[, [, , \"[2-79]\\\\d{7,8}|800\\\\d{2,9}\", , , , , , , [5, 6, 7, 8, 9, 10, 11, 12]], [, , \"[2-4679][2-8]\\\\d{6}\", , , , \"22345678\", , , [8], [7]], [, , \"5[024-68]\\\\d{7}\", , , , \"501234567\", , , [9]], [, , \"400\\\\d{6}|800\\\\d{2,9}\", , , , \"800123456\"], [, , \"900[02]\\\\d{5}\", , , , \"900234567\", , , [9]], [, , \"700[05]\\\\d{5}\", , , , \"700012345\", , , \r\n[9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AE\", 971, \"00\", \"0\", , , \"0\", , , , [[, \"([2-4679])(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-4679][2-8]\"], \"0$1\"], [, \"(5\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"([479]00)(\\\\d)(\\\\d{5})\", \"$1 $2 $3\", [\"[479]00\"], \"$1\"], [, \"([68]00)(\\\\d{2,9})\", \"$1 $2\", [\"[68]00\"], \"$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"600[25]\\\\d{5}\", , , , \"600212345\", , , [9]], , , [, , , , , , , , , [-1]]], AF:[, [, , \"[2-7]\\\\d{8}\", \r\n, , , , , , [9], [7]], [, , \"(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\\\d{6}\", , , , \"234567890\", , , , [7]], [, , \"7(?:[014-9]\\\\d|2[89]|3[01])\\\\d{6}\", , , , \"701234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AF\", 93, \"00\", \"0\", , , \"0\", , , , [[, \"([2-7]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2-7]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , \r\n, , [-1]]], AG:[, [, , \"[2589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"268(?:4(?:6[0-38]|84)|56[0-2])\\\\d{4}\", , , , \"2684601234\", , , , [7]], [, , \"268(?:464|7(?:1[3-9]|2\\\\d|3[246]|64|[78][0-689]))\\\\d{4}\", , , , \"2684641234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , \"26848[01]\\\\d{4}\", , , , \"2684801234\", , , , [7]], \r\n\"AG\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , \"26840[69]\\\\d{4}\", , , , \"2684061234\", , , , [7]], , \"268\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], AI:[, [, , \"[2589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"2644(?:6[12]|9[78])\\\\d{4}\", , , , \"2644612345\", , , , [7]], [, , \"264(?:235|476|5(?:3[6-9]|8[1-4])|7(?:29|72))\\\\d{4}\", , , , \"2642351234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], \r\n[, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"AI\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"264\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], AL:[, [, , \"[2-57]\\\\d{7}|6\\\\d{8}|8\\\\d{5,7}|9\\\\d{5}\", , , , , , , [6, 7, 8, 9], [5]], [, , \"(?:[2358](?:[16-9]\\\\d[2-9]|[2-5][2-9]\\\\d)|4(?:[2-57-9][2-9]\\\\d|6\\\\d{2}))\\\\d{4}\", , , , \"22345678\", , , [8], [5, 6, 7]], [, \r\n, \"6(?:[689][2-9]|7[2-6])\\\\d{6}\", , , , \"662123456\", , , [9]], [, , \"800\\\\d{4}\", , , , \"8001234\", , , [7]], [, , \"900[1-9]\\\\d{2}\", , , , \"900123\", , , [6]], [, , \"808[1-9]\\\\d{2}\", , , , \"808123\", , , [6]], [, , \"700[2-9]\\\\d{4}\", , , , \"70021234\", , , [8]], [, , , , , , , , , [-1]], \"AL\", 355, \"00\", \"0\", , , \"0\", , , , [[, \"(4)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[0-6]\"], \"0$1\"], [, \"(6\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2358][2-5]|4[7-9]\"], \r\n\"0$1\"], [, \"(\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"[235][16-9]|[79]|8[016-9]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], AM:[, [, , \"[1-9]\\\\d{7}\", , , , , , , [8], [5, 6]], [, , \"(?:1[0-2]\\\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2|47\\\\d)\\\\d{5}\", , , , \"10123456\", , , , [5, 6]], [, , \"(?:4[1349]|55|77|88|9[13-9])\\\\d{6}\", , , , \"77123456\"], [, , \"800\\\\d{5}\", , , , \"80012345\"], [, , \"90[016]\\\\d{5}\", , , , \"90012345\"], \r\n[, , \"80[1-4]\\\\d{5}\", , , , \"80112345\"], [, , , , , , , , , [-1]], [, , \"60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\\\d|90)\\\\d{4}\", , , , \"60271234\"], \"AM\", 374, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"1|47\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"4[1349]|[5-7]|88|9[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[23]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"8|90\"], \"0 $1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \r\n, , [, , , , , , , , , [-1]]], AO:[, [, , \"[29]\\\\d{8}\", , , , , , , [9]], [, , \"2\\\\d(?:[26-9]\\\\d|\\\\d[26-9])\\\\d{5}\", , , , \"222123456\"], [, , \"9[1-49]\\\\d{7}\", , , , \"923123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AO\", 244, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], AR:[, \r\n[, , \"11\\\\d{8}|[2368]\\\\d{9}|9\\\\d{10}\", , , , , , , [10, 11], [6, 7, 8]], [, , \"11\\\\d{8}|(?:2(?:2(?:[013]\\\\d|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[067]\\\\d)|4(?:7[3-8]|9\\\\d)|6(?:[01346]\\\\d|2[24-6]|5[15-8])|80\\\\d|9(?:[0124789]\\\\d|3[1-6]|5[234]|6[2-46]))|3(?:3(?:2[79]|6\\\\d|8[2578])|4(?:[78]\\\\d|0[0124-9]|[1-35]\\\\d|4[24-7]|6[02-9]|9[123678])|5(?:[138]\\\\d|2[1245]|4[1-9]|6[2-4]|7[1-6])|6[24]\\\\d|7(?:[0469]\\\\d|1[1568]|2[013-9]|3[145]|5[14-8]|7[2-57]|8[0-24-9])|8(?:[013578]\\\\d|2[15-7]|4[13-6]|6[1-357-9]|9[124]))|670\\\\d)\\\\d{6}\", \r\n, , , \"1123456789\", , , [10], [6, 7, 8]], [, , \"675\\\\d{7}|9(?:11[2-9]\\\\d{7}|(?:2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[12358]|5[138]|6[24]|7[069]|8[013578]))[2-9]\\\\d{6}|\\\\d{4}[2-9]\\\\d{5})\", , , , \"91123456789\", , , , [6, 7, 8]], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , \"60[04579]\\\\d{7}\", , , , \"6001234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AR\", 54, \"00\", \"0\", , , \"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))?15)?\", \r\n\"9$1\", , , [[, \"([68]\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\"], \"$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"[2-9]\"], \"$1\"], [, \"(9)(11)(\\\\d{4})(\\\\d{4})\", \"$2 15-$3-$4\", [\"911\"], \"0$1\"], [, \"(9)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9(?:2[2-4689]|3[3-8])\", \"9(?:2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578]))\", \"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\", \r\n\"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\"], \"0$1\"], [, \"(9)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$2 15-$3-$4\", [\"9[23]\"], \"0$1\"], [, \"(11)(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"11\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578])\", \"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\", \r\n\"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\"], \"0$1\", , 1], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\", , 1], [, \"(\\\\d{3})\", \"$1\", [\"1[0-2]|911\"], \"$1\"]], [[, \"([68]\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[68]\"], \"0$1\"], [, \"(9)(11)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"911\"]], [, \"(9)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3-$4\", [\"9(?:2[2-4689]|3[3-8])\", \r\n\"9(?:2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578]))\", \"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\", \"9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))\"]], [, \"(9)(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \r\n\"$1 $2 $3-$4\", [\"9[23]\"]], [, \"(11)(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"11\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578])\", \"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\", \"2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))\"], \r\n\"0$1\", , 1], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2-$3\", [\"[23]\"], \"0$1\", , 1]], [, , , , , , , , , [-1]], , , [, , \"810\\\\d{7}\", , , , \"8101234567\", , , [10]], [, , \"810\\\\d{7}\", , , , \"8101234567\", , , [10]], , , [, , , , , , , , , [-1]]], AS:[, [, , \"[5689]\\\\d{9}\", , , , , , , [10], [7]], [, , \"6846(?:22|33|44|55|77|88|9[19])\\\\d{4}\", , , , \"6846221234\", , , , [7]], [, , \"684(?:2(?:5[2468]|72)|7(?:3[13]|70))\\\\d{4}\", , , , \"6847331234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \r\n\"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"AS\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"684\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], AT:[, [, , \"[1-9]\\\\d{3,12}\", , , , , , , [4, 5, 6, 7, 8, 9, 10, 11, 12, 13], [3]], [, , \"1\\\\d{3,12}|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-8]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|4(?:2[1-8]|35|63|7[1368]|8[2457])|5(?:12|2[1-8]|3[357]|4[147]|5[12578]|6[37])|6(?:13|2[1-47]|4[1-35-8]|5[468]|62)|7(?:2[1-8]|3[25]|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\\\d{3,10}\", \r\n, , , \"1234567890\", , , , [3]], [, , \"6(?:5[0-3579]|6[013-9]|[7-9]\\\\d)\\\\d{4,10}\", , , , \"664123456\", , , [7, 8, 9, 10, 11, 12, 13]], [, , \"800\\\\d{6,10}\", , , , \"800123456\", , , [9, 10, 11, 12, 13]], [, , \"9(?:0[01]|3[019])\\\\d{6,10}\", , , , \"900123456\", , , [9, 10, 11, 12, 13]], [, , \"8(?:10\\\\d|2(?:[01]\\\\d|8\\\\d?))\\\\d{5,9}\", , , , \"810123456\", , , [8, 9, 10, 11, 12, 13]], [, , , , , , , , , [-1]], [, , \"780\\\\d{6,10}\", , , , \"780123456\", , , [9, 10, 11, 12, 13]], \"AT\", 43, \"00\", \"0\", , , \"0\", , , , \r\n[[, \"(116\\\\d{3})\", \"$1\", [\"116\"], \"$1\"], [, \"(1)(\\\\d{3,12})\", \"$1 $2\", [\"1\"], \"0$1\"], [, \"(5\\\\d)(\\\\d{3,5})\", \"$1 $2\", [\"5[079]\"], \"0$1\"], [, \"(5\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"5[079]\"], \"0$1\"], [, \"(5\\\\d)(\\\\d{4})(\\\\d{4,7})\", \"$1 $2 $3\", [\"5[079]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,10})\", \"$1 $2\", [\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:[28]0|32)|[89]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,9})\", \"$1 $2\", [\"2|3(?:1[1-578]|[3-8])|4[2378]|5[2-6]|6(?:[12]|4[1-9]|5[468])|7(?:[24][1-8]|35|[5-79])\"], \"0$1\"]], , \r\n[, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"5(?:(?:0[1-9]|17)\\\\d{2,10}|[79]\\\\d{3,11})|720\\\\d{6,10}\", , , , \"50123\", , , [5, 6, 7, 8, 9, 10, 11, 12, 13]], , , [, , , , , , , , , [-1]]], AU:[, [, , \"1\\\\d{4,9}|[2-578]\\\\d{8}\", , , , , , , [5, 6, 7, 8, 9, 10]], [, , \"[237]\\\\d{8}|8(?:51(?:0(?:0[03-9]|[1247]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-6])|1(?:1[69]|[23]\\\\d|4[0-4]))|[6-8]\\\\d{4}|9(?:[02-9]\\\\d{3}|1(?:[0-57-9]\\\\d{2}|6[0135-9]\\\\d)))\\\\d{3}\", , , , \"212345678\", , , [9], [8]], [, , \"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12457-9]|9[017-9])\\\\d{6}\", \r\n, , , \"412345678\", , , [9]], [, , \"180(?:0\\\\d{3}|2)\\\\d{3}\", , , , \"1800123456\", , , [7, 10]], [, , \"19(?:0[0126]\\\\d|[679])\\\\d{5}\", , , , \"1900123456\", , , [8, 10]], [, , \"13(?:00\\\\d{3}|45[0-4]|\\\\d)\\\\d{3}\", , , , \"1300123456\", , , [6, 8, 10]], [, , \"500\\\\d{6}\", , , , \"500123456\", , , [9]], [, , \"550\\\\d{6}\", , , , \"550123456\", , , [9]], \"AU\", 61, \"(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011)|001[14-689]\", \"0\", , , \"0\", , \"0011\", , [[, \"([2378])(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[2378]\"], \"(0$1)\"], [, \r\n\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"14|[45]\"], \"0$1\"], [, \"(16)(\\\\d{3,4})\", \"$1 $2\", [\"16\"], \"0$1\"], [, \"(16)(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"16\"], \"0$1\"], [, \"(1[389]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[389]0\", \"1(?:[38]0|9)0\"]], [, \"(180)(2\\\\d{3})\", \"$1 $2\", [\"180\", \"1802\"]], [, \"(19\\\\d)(\\\\d{3})\", \"$1 $2\", [\"19[13]\"]], [, \"(19\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"19[679]\"]], [, \"(13)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"13[1-9]\"]]], , [, , \"16\\\\d{3,7}\", , , , \"1612345\", , , [5, 6, 7, 8, 9]], 1, \r\n, [, , \"1(?:3(?:00\\\\d{3}|45[0-4]|\\\\d)\\\\d{3}|80(?:0\\\\d{6}|2\\\\d{3}))\", , , , \"1300123456\", , , [6, 7, 8, 10]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], AW:[, [, , \"[25-9]\\\\d{6}\", , , , , , , [7]], [, , \"5(?:2\\\\d|8[1-9])\\\\d{4}\", , , , \"5212345\"], [, , \"(?:290|5[69]\\\\d|6(?:[03]0|22|4[0-2]|[69]\\\\d)|7(?:[34]\\\\d|7[07])|9(?:6[45]|9[4-8]))\\\\d{4}\", , , , \"5601234\"], [, , \"800\\\\d{4}\", , , , \"8001234\"], [, , \"900\\\\d{4}\", , , , \"9001234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, \r\n, \"28\\\\d{5}|501\\\\d{4}\", , , , \"5011234\"], \"AW\", 297, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], AX:[, [, , \"1\\\\d{5,11}|[35]\\\\d{5,9}|2\\\\d{4,9}|4\\\\d{5,10}|6\\\\d{7,9}|7\\\\d{4,9}|8\\\\d{6,9}\", , , , , , , [5, 6, 7, 8, 9, 10, 11, 12]], [, , \"18[1-8]\\\\d{3,9}\", , , , \"181234567\", , , [6, 7, 8, 9, 10, 11, 12]], [, , \"4\\\\d{5,10}|50\\\\d{4,8}\", , , , \"412345678\", , , [6, 7, 8, 9, 10, 11]], \r\n[, , \"800\\\\d{4,7}\", , , , \"8001234567\", , , [7, 8, 9, 10]], [, , \"[67]00\\\\d{5,6}\", , , , \"600123456\", , , [8, 9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AX\", 358, \"00|99(?:[02469]|5(?:11|33|5[59]|88|9[09]))\", \"0\", , , \"0\", , \"00\", , , , [, , , , , , , , , [-1]], , , [, , \"[13]00\\\\d{3,7}|2(?:0(?:0\\\\d{3,7}|2[023]\\\\d{1,6}|9[89]\\\\d{1,6}))|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{3,7})\", , , , \"1001234\", , , [5, 6, 7, 8, 9, 10]], [, , \"[13]0\\\\d{4,8}|2(?:0(?:[016-8]\\\\d{3,7}|[2-59]\\\\d{2,7})|9\\\\d{4,8})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{2,7})\", \r\n, , , \"10112345\", , , [5, 6, 7, 8, 9, 10]], , , [, , , , , , , , , [-1]]], AZ:[, [, , \"[1-9]\\\\d{8}\", , , , , , , [9], [7]], [, , \"(?:1[28]\\\\d{3}|2(?:02|1[24]|2[2-4]|33|[45]2|6[23])\\\\d{2}|365(?:[0-46-9]\\\\d|5[0-35-9]))\\\\d{4}\", , , , \"123123456\", , , , [7]], [, , \"(?:36554|(?:4[04]|5[015]|60|7[07])\\\\d{3})\\\\d{4}\", , , , \"401234567\"], [, , \"88\\\\d{7}\", , , , \"881234567\"], [, , \"900200\\\\d{3}\", , , , \"900200123\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"AZ\", 994, \"00\", \r\n\"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[28]|2(?:[0-36]|[45]2)|365\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[4-8]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BA:[, [, , \"[3-9]\\\\d{7,8}\", , , , , , , [8, 9], [6]], [, , \"(?:3(?:[05679][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\\\d{5}\", \r\n, , , \"30212345\", , , [8], [6]], [, , \"6(?:0(?:3\\\\d|40)|[1-356]\\\\d|44[0-6]|71[137])\\\\d{5}\", , , , \"61123456\"], [, , \"8[08]\\\\d{6}\", , , , \"80123456\", , , [8]], [, , \"9[0246]\\\\d{6}\", , , , \"90123456\", , , [8]], [, , \"8[12]\\\\d{6}\", , , , \"82123456\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BA\", 387, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2-$3\", [\"[3-5]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[1-356]|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \r\n\"$1 $2 $3 $4\", [\"6[047]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"70(?:3[0146]|[56]0)\\\\d{4}\", , , , \"70341234\", , , [8]], , , [, , , , , , , , , [-1]]], BB:[, [, , \"[2589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\\\d|3[2-9])|5(?:20|[34]\\\\d|54|7[1-3])|6(?:2\\\\d|38)|7(?:37|57)|9(?:1[89]|63))\\\\d{4}\", , , , \"2464123456\", , , , [7]], [, , \"246(?:2(?:[356]\\\\d|4[0-57-9]|8[0-79])|45\\\\d|69[5-7]|8(?:[2-5]\\\\d|83))\\\\d{4}\", , , , \"2462501234\", \r\n, , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900\\\\d{7}|246976\\\\d{4}\", , , , \"9002123456\", , , , [7]], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , \"24631\\\\d{5}\", , , , \"2463101234\", , , , [7]], \"BB\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"246\", [, , , , , , , , , [-1]], [, , \"246(?:292|367|4(?:1[7-9]|3[01]|44|67)|736)\\\\d{4}\", , , , \"2464301234\", , , , [7]], , , [, , , , , \r\n, , , , [-1]]], BD:[, [, , \"[2-79]\\\\d{5,9}|1\\\\d{9}|8[0-7]\\\\d{4,8}\", , , , , , , [6, 7, 8, 9, 10]], [, , \"2(?:[45]\\\\d{3}|7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|[139][1-6]|2[0157-9]|41|6[1-35]|7[1-5]|8[1-8]|90)|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[0167]|7[15]|8[0146-9]))\\\\d{4}|3(?:12?[5-7]\\\\d{2}|0(?:2(?:[025-79]\\\\d|[348]\\\\d{1,2})|3(?:[2-4]\\\\d|[56]\\\\d?))|2(?:1\\\\d{2}|2(?:[12]\\\\d|[35]\\\\d{1,2}|4\\\\d?))|3(?:1\\\\d{2}|2(?:[2356]\\\\d|4\\\\d{1,2}))|4(?:1\\\\d{2}|2(?:2\\\\d{1,2}|[47]|5\\\\d{2}))|5(?:1\\\\d{2}|29)|[67]1\\\\d{2}|8(?:1\\\\d{2}|2(?:2\\\\d{2}|3|4\\\\d)))\\\\d{3}|4(?:0(?:2(?:[09]\\\\d|7)|33\\\\d{2})|1\\\\d{3}|2(?:1\\\\d{2}|2(?:[25]\\\\d?|[348]\\\\d|[67]\\\\d{1,2}))|3(?:1\\\\d{2}(?:\\\\d{2})?|2(?:[045]\\\\d|[236-9]\\\\d{1,2})|32\\\\d{2})|4(?:[18]\\\\d{2}|2(?:[2-46]\\\\d{2}|3)|5[25]\\\\d{2})|5(?:1\\\\d{2}|2(?:3\\\\d|5))|6(?:[18]\\\\d{2}|2(?:3(?:\\\\d{2})?|[46]\\\\d{1,2}|5\\\\d{2}|7\\\\d)|5(?:3\\\\d?|4\\\\d|[57]\\\\d{1,2}|6\\\\d{2}|8))|71\\\\d{2}|8(?:[18]\\\\d{2}|23\\\\d{2}|54\\\\d{2})|9(?:[18]\\\\d{2}|2[2-5]\\\\d{2}|53\\\\d{1,2}))\\\\d{3}|5(?:02[03489]\\\\d{2}|1\\\\d{2}|2(?:1\\\\d{2}|2(?:2(?:\\\\d{2})?|[457]\\\\d{2}))|3(?:1\\\\d{2}|2(?:[37](?:\\\\d{2})?|[569]\\\\d{2}))|4(?:1\\\\d{2}|2[46]\\\\d{2})|5(?:1\\\\d{2}|26\\\\d{1,2})|6(?:[18]\\\\d{2}|2|53\\\\d{2})|7(?:1|24)\\\\d{2}|8(?:1|26)\\\\d{2}|91\\\\d{2})\\\\d{3}|6(?:0(?:1\\\\d{2}|2(?:3\\\\d{2}|4\\\\d{1,2}))|2(?:2[2-5]\\\\d{2}|5(?:[3-5]\\\\d{2}|7)|8\\\\d{2})|3(?:1|2[3478])\\\\d{2}|4(?:1|2[34])\\\\d{2}|5(?:1|2[47])\\\\d{2}|6(?:[18]\\\\d{2}|6(?:2(?:2\\\\d|[34]\\\\d{2})|5(?:[24]\\\\d{2}|3\\\\d|5\\\\d{1,2})))|72[2-5]\\\\d{2}|8(?:1\\\\d{2}|2[2-5]\\\\d{2})|9(?:1\\\\d{2}|2[2-6]\\\\d{2}))\\\\d{3}|7(?:(?:02|[3-589]1|6[12]|72[24])\\\\d{2}|21\\\\d{3}|32)\\\\d{3}|8(?:(?:4[12]|[5-7]2|1\\\\d?)|(?:0|3[12]|[5-7]1|217)\\\\d)\\\\d{4}|9(?:[35]1|(?:[024]2|81)\\\\d|(?:1|[24]1)\\\\d{2})\\\\d{3}\", \r\n, , , \"27111234\", , , [6, 7, 8, 9]], [, , \"(?:1[13-9]\\\\d|(?:3[78]|44)[02-9]|6(?:44|6[02-9]))\\\\d{7}\", , , , \"1812345678\", , , [10]], [, , \"80[03]\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"96(?:0[469]|1[0-4]|3[389]|6[69]|7[78])\\\\d{6}\", , , , \"9604123456\", , , [10]], \"BD\", 880, \"00\", \"0\", , , \"0\", , , , [[, \"(2)(\\\\d{7,8})\", \"$1-$2\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,6})\", \"$1-$2\", [\"[3-79]1\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3,6})\", \r\n\"$1-$2\", [\"1|3(?:0|[2-58]2)|4(?:0|[25]2|3[23]|[4689][25])|5(?:[02-578]2|6[25])|6(?:[0347-9]2|[26][25])|7[02-9]2|8(?:[023][23]|[4-7]2)|9(?:[02][23]|[458]2|6[01367])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,7})\", \"$1-$2\", [\"[3-79][2-9]|8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BE:[, [, , \"[1-9]\\\\d{7,8}\", , , , , , , [8, 9]], [, , \"(?:1[0-69]|[23][2-8]|4[23]|5\\\\d|6[013-57-9]|71|8[1-79]|9[2-4])\\\\d{6}|80[2-8]\\\\d{5}\", , , , \"12345678\", \r\n, , [8]], [, , \"4(?:56|6[0135-8]|[79]\\\\d|8[3-9])\\\\d{6}\", , , , \"470123456\", , , [9]], [, , \"800[1-9]\\\\d{4}\", , , , \"80012345\", , , [8]], [, , \"(?:70(?:2[0-57]|3[0457]|44|69|7[0579])|90(?:0[0-35-8]|1[36]|2[0-3568]|3[0135689]|4[2-68]|5[1-68]|6[0-378]|7[23568]|9[34679]))\\\\d{4}\", , , , \"90012345\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BE\", 32, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4[5-9]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3 $4\", [\"[23]|4[23]|9[2-4]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[156]|7[018]|8(?:0[1-9]|[1-79])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:80|9)0\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"78[0-7]\\\\d{5}\", , , , \"78102345\", , , [8]], , , [, , , , , , , , , [-1]]], BF:[, [, , \"[25-7]\\\\d{7}\", , , , , , , [8]], [, , \"2(?:0(?:49|5[23]|6[56]|9[016-9])|4(?:4[569]|5[4-6]|6[56]|7[0179])|5(?:[34]\\\\d|50|6[5-7]))\\\\d{4}\", , \r\n, , \"20491234\"], [, , \"(?:5[124-8]|[67]\\\\d)\\\\d{6}\", , , , \"70123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BF\", 226, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BG:[, [, , \"[23567]\\\\d{5,7}|[489]\\\\d{6,8}\", , , , , , , [6, 7, 8, 9], [4, 5]], [, , \"2\\\\d{5,7}|(?:[36]\\\\d|5[1-9]|8[1-6]|9[1-7])\\\\d{5,6}|(?:4(?:[124-7]\\\\d|3[1-6])|7(?:0[1-9]|[1-9]\\\\d))\\\\d{4,5}\", \r\n, , , \"2123456\", , , [6, 7, 8], [4, 5]], [, , \"(?:8[7-9]\\\\d|9(?:8\\\\d|9[69]))\\\\d{6}|4(?:3[0789]|8\\\\d)\\\\d{5}\", , , , \"48123456\", , , [8, 9]], [, , \"800\\\\d{5}\", , , , \"80012345\", , , [8]], [, , \"90\\\\d{6}\", , , , \"90123456\", , , [8]], [, , , , , , , , , [-1]], [, , \"700\\\\d{5}\", , , , \"70012345\", , , [8]], [, , , , , , , , , [-1]], \"BG\", 359, \"00\", \"0\", , , \"0\", , , , [[, \"(2)(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"2\"], \"0$1\"], [, \"(2)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \r\n\"$1 $2\", [\"43[124-7]|70[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"43[124-7]|70[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[78]00\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"99[69]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"48|8[7-9]|9[08]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , \r\n, , , , , , , [-1]]], BH:[, [, , \"[136-9]\\\\d{7}\", , , , , , , [8]], [, , \"(?:1(?:3[1356]|6[0156]|7\\\\d)\\\\d|6(?:1[16]\\\\d|500|6(?:0\\\\d|3[12]|44|7[7-9])|9[69][69])|7(?:1(?:11|78)|7\\\\d{2}))\\\\d{4}\", , , , \"17001234\"], [, , \"(?:3(?:[1-4679]\\\\d|5[013-69]|8[0-47-9])\\\\d|6(?:3(?:00|33|6[16])|6(?:[69]\\\\d|3[03-9]|7[0-6])))\\\\d{4}\", , , , \"36001234\"], [, , \"80\\\\d{6}\", , , , \"80123456\"], [, , \"(?:87|9[014578])\\\\d{6}\", , , , \"90123456\"], [, , \"84\\\\d{6}\", , , , \"84123456\"], [, , , , , , , , , [-1]], [, , , , , , , \r\n, , [-1]], \"BH\", 973, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BI:[, [, , \"[267]\\\\d{7}\", , , , , , , [8]], [, , \"22\\\\d{6}\", , , , \"22201234\"], [, , \"(?:29|6[189]|7[124-9])\\\\d{6}\", , , , \"79561234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BI\", 257, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3 $4\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BJ:[, [, , \"[2689]\\\\d{7}\", , , , , , , [8]], [, , \"2(?:02|1[037]|2[45]|3[68])\\\\d{5}\", , , , \"20211234\"], [, , \"(?:6\\\\d|9[03-9])\\\\d{6}\", , , , \"90011234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"857[58]\\\\d{4}\", , , , \"85751234\"], \"BJ\", 229, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3 $4\", [\"[2689]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"81\\\\d{6}\", , , , \"81123456\"], , , [, , , , , , , , , [-1]]], BL:[, [, , \"[56]\\\\d{8}\", , , , , , , [9]], [, , \"590(?:2[7-9]|5[12]|87)\\\\d{4}\", , , , \"590271234\"], [, , \"69(?:0\\\\d{2}|1(?:2[29]|3[0-5]))\\\\d{4}\", , , , \"690001234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BL\", 590, \"00\", \"0\", , , \"0\", , , , , , [, , , , , \r\n, , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BM:[, [, , \"[4589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"441(?:2(?:02|23|61|[3479]\\\\d)|[46]\\\\d{2}|5(?:4\\\\d|60|89)|824)\\\\d{4}\", , , , \"4412345678\", , , , [7]], [, , \"441(?:[37]\\\\d|5[0-39])\\\\d{5}\", , , , \"4413701234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", \r\n, , , \"5002345678\"], [, , , , , , , , , [-1]], \"BM\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"441\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BN:[, [, , \"[2-578]\\\\d{6}\", , , , , , , [7]], [, , \"2(?:[013-9]\\\\d|2[0-7])\\\\d{4}|[3-5]\\\\d{6}\", , , , \"2345678\"], [, , \"22[89]\\\\d{4}|[78]\\\\d{6}\", , , , \"7123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BN\", \r\n673, \"00\", , , , , , , , [[, \"([2-578]\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"[2-578]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BO:[, [, , \"[23467]\\\\d{7}|8\\\\d{8}\", , , , , , , [8, 9], [7]], [, , \"(?:2(?:2\\\\d{2}|5(?:11|[258]\\\\d|9[67])|6(?:12|2\\\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\\\d{2}|4(?:6\\\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:2\\\\d|3[234]|4[248]|5[24]|6[2-6]|7\\\\d))|4(?:4\\\\d{2}|6(?:11|[24689]\\\\d|72)))\\\\d{4}\", , , , \"22123456\", , , \r\n[8], [7]], [, , \"[67]\\\\d{7}\", , , , \"71234567\", , , [8]], [, , \"80017\\\\d{4}\", , , , \"800171234\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BO\", 591, \"00(1\\\\d)?\", \"0\", , , \"0(1\\\\d)?\", , , , [[, \"([234])(\\\\d{7})\", \"$1 $2\", [\"[2-4]\"], , \"0$CC $1\"], [, \"([67]\\\\d{7})\", \"$1\", [\"[67]\"], , \"0$CC $1\"], [, \"(800)(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"800\"], , \"0$CC $1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , \r\n, , , , [-1]], , , [, , , , , , , , , [-1]]], BQ:[, [, , \"[347]\\\\d{6}\", , , , , , , [7]], [, , \"(?:318[023]|41(?:6[023]|70)|7(?:1[578]|50)\\\\d)\\\\d{3}\", , , , \"7151234\"], [, , \"(?:31(?:8[14-8]|9[14578])|416[145-9]|7(?:0[01]|7[07]|8\\\\d|9[056])\\\\d)\\\\d{3}\", , , , \"3181234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BQ\", 599, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , \r\n, , , , , [-1]], , , [, , , , , , , , , [-1]]], BR:[, [, , \"[1-46-9]\\\\d{7,10}|5(?:[0-4]\\\\d{7,9}|5(?:[2-8]\\\\d{7}|9\\\\d{7,8}))\", , , , , , , [8, 9, 10, 11]], [, , \"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\\\d{7}\", , , , \"1123456789\", , , [10], [8]], [, , \"(?:[189][1-9]|2[12478])(?:7|9\\\\d)\\\\d{7}|(?:3[1-578]|[46][1-9]|5[13-5]|7[13-579])(?:[6-9]|9\\\\d)\\\\d{7}\", , , , \"11961234567\", , , [10, 11], [8]], [, , \"800\\\\d{6,7}\", , , , \"800123456\", , , [9, 10]], [, , \"(?:300|[59]00\\\\d?)\\\\d{6}\", , \r\n, , \"300123456\", , , [9, 10]], [, , \"(?:300\\\\d(?:\\\\d{2})?|4(?:0(?:0\\\\d|20)|370))\\\\d{4}\", , , , \"40041234\", , , [8, 10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BR\", 55, \"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\", \"0\", , , \"0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\", \"$2\", , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"300|4(?:0(?:0|20)|370)\"]], [, \"([3589]00)(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3589]00\"], \"0$1\"], [, \"(\\\\d{3,5})\", \"$1\", [\"1[125689]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \r\n\"$1-$2\", [\"[2-9](?:0[1-9]|[1-9])\"]], [, \"(\\\\d{5})(\\\\d{4})\", \"$1-$2\", [\"9(?:0[1-9]|[1-9])\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"[1-9][1-9]\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \"$1 $2-$3\", [\"[1-9][1-9]9\"], \"($1)\", \"0 $CC ($1)\"]], [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"300|4(?:0[02]|37)\", \"300|4(?:0(?:0|20)|370)\"]], [, \"([3589]00)(\\\\d{2,3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3589]00\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2-$3\", [\"[1-9][1-9]\"], \"($1)\", \"0 $CC ($1)\"], [, \"(\\\\d{2})(\\\\d{5})(\\\\d{4})\", \r\n\"$1 $2-$3\", [\"[1-9][1-9]9\"], \"($1)\", \"0 $CC ($1)\"]], [, , , , , , , , , [-1]], , , [, , \"(?:300\\\\d|40(?:0\\\\d|20))\\\\d{4}\", , , , \"40041234\", , , [8]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BS:[, [, , \"[2589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-4]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\\\d{4}\", , , , \"2423456789\", , , , [7]], [, , \"242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\\\d|[89]9))\\\\d{4}\", \r\n, , , \"2423591234\", , , , [7]], [, , \"242300\\\\d{4}|8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\", , , , [7]], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"BS\", 1, \"011?\", \"1\", , , \"1\", , \"011\", , , , [, , , , , , , , , [-1]], , \"242\", [, , , , , , , , , [-1]], [, , \"242225[0-46-9]\\\\d{3}\", , , , \"2422250123\"], , , [, , , , , , , , , [-1]]], BT:[, [, , \"[1-8]\\\\d{6,7}\", \r\n, , , , , , [7, 8], [6]], [, , \"(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\\\d{5}\", , , , \"2345678\", , , [7], [6]], [, , \"(?:1[67]|77)\\\\d{6}\", , , , \"17123456\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BT\", 975, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1|77\"]], [, \"([2-8])(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-68]|7[246]\"]]], , [, , , , , , , , , [-1]], , , [, \r\n, , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BW:[, [, , \"[2-79]\\\\d{6,7}\", , , , , , , [7, 8]], [, , \"(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\\\d|7[01])|4(?:6[03]|7[1267]|9[0-5])|5(?:3[0389]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[067]))\\\\d{4}\", , , , \"2401234\", , , [7]], [, , \"7(?:[1-6]\\\\d|7[014-8])\\\\d{5}\", , , , \"71123456\", , , [8]], [, , , , , , , , , [-1]], [, , \"90\\\\d{5}\", , , , \"9012345\", , , [7]], [, , , , , , , , , [-1]], [, , , , , \r\n, , , , [-1]], [, , \"79[12][01]\\\\d{4}\", , , , \"79101234\", , , [8]], \"BW\", 267, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-6]\"]], [, \"(7\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"]], [, \"(90)(\\\\d{5})\", \"$1 $2\", [\"90\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BY:[, [, , \"[1-4]\\\\d{8}|8(?:0(?:0\\\\d{3,7}|[13]\\\\d{7})|(?:10|20\\\\d)\\\\d{7})|9\\\\d{9,10}\", , , , , , , [6, 7, 8, 9, 10, 11], [5]], [, , \"(?:1(?:5(?:1[1-5]|[24]\\\\d|6[2-4]|9[1-7])|6(?:[235]\\\\d|4[1-7])|7\\\\d{2})|2(?:1(?:[246]\\\\d|3[0-35-9]|5[1-9])|2(?:[235]\\\\d|4[0-8])|3(?:[26]\\\\d|3[02-79]|4[024-7]|5[03-7])))\\\\d{5}\", \r\n, , , \"152450911\", , , [9], [5, 6, 7]], [, , \"(?:2(?:5[5679]|9[1-9])|33\\\\d|44\\\\d)\\\\d{6}\", , , , \"294911911\", , , [9]], [, , \"8(?:0[13]|20\\\\d)\\\\d{7}|800\\\\d{3,7}\", , , , \"8011234567\"], [, , \"(?:810|902)\\\\d{7}\", , , , \"9021234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"249\\\\d{6}\", , , , \"249123456\", , , [9]], \"BY\", 375, \"810\", \"8\", , , \"8?0?\", , \"8~10\", , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"17[0-3589]|2[4-9]|[34]\", \"17(?:[02358]|1[0-2]|9[0189])|2[4-9]|[34]\"], \r\n\"8 0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"1(?:5[24]|6[235]|7[467])|2(?:1[246]|2[25]|3[26])\", \"1(?:5[24]|6(?:2|3[04-9]|5[0346-9])|7(?:[46]|7[37-9]))|2(?:1[246]|2[25]|3[26])\"], \"8 0$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{3})\", \"$1 $2-$3\", [\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\", \"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"], \"8 0$1\"], [, \"([89]\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8[01]|9\"], \"8 $1\"], [, \"(82\\\\d)(\\\\d{4})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"82\"], \"8 $1\"], [, \"(800)(\\\\d{3})\", \"$1 $2\", [\"800\"], \"8 $1\"], [, \"(800)(\\\\d{2})(\\\\d{2,4})\", \"$1 $2 $3\", [\"800\"], \"8 $1\"]], , [, , , , , , , , , [-1]], , , [, , \"8(?:0[13]|10|20\\\\d)\\\\d{7}|800\\\\d{3,7}|902\\\\d{7}\", , , , \"82012345678\"], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], BZ:[, [, , \"[2-8]\\\\d{6}|0\\\\d{10}\", , , , , , , [7, 11]], [, , \"(?:2(?:[02]\\\\d|36)|[3-58][02]\\\\d|7(?:[02]\\\\d|32))\\\\d{4}\", , , , \"2221234\", , , [7]], [, , \"6[0-35-7]\\\\d{5}\", , , , \"6221234\", , , [7]], \r\n[, , \"0800\\\\d{7}\", , , , \"08001234123\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"BZ\", 501, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[2-8]\"]], [, \"(0)(800)(\\\\d{4})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"080\", \"0800\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CA:[, [, , \"[2-9]\\\\d{9}\", , , , , , , [10], [7]], [, , \"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\", \r\n, , , \"5062345678\", , , , [7]], [, , \"(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:0[04]|13|22|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\\\d{6}\", , , , \"2042345678\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"CA\", 1, \"011\", \"1\", \r\n, , \"1\", , , 1, , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CC:[, [, , \"[1458]\\\\d{5,9}\", , , , , , , [6, 7, 8, 9, 10]], [, , \"8(?:51(?:0(?:02|31|60)|118)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:08|22|68)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\", , , , \"891621234\", , , [9], [8]], [, , \"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12547-9]|9[017-9])\\\\d{6}\", , , , \"412345678\", , , [9]], [, , \"180(?:0\\\\d{3}|2)\\\\d{3}\", \r\n, , , \"1800123456\", , , [7, 10]], [, , \"19(?:0[0126]\\\\d|[679])\\\\d{5}\", , , , \"1900123456\", , , [8, 10]], [, , \"13(?:00\\\\d{2})?\\\\d{4}\", , , , \"1300123456\", , , [6, 10]], [, , \"500\\\\d{6}\", , , , \"500123456\", , , [9]], [, , \"550\\\\d{6}\", , , , \"550123456\", , , [9]], \"CC\", 61, \"(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88))?001[14-689]\", \"0\", , , \"0\", , \"0011\", , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CD:[, [, , \"[2-6]\\\\d{6}|[18]\\\\d{6,8}|9\\\\d{8}\", \r\n, , , , , , [7, 9]], [, , \"1(?:2\\\\d{7}|\\\\d{6})|[2-6]\\\\d{6}\", , , , \"1234567\"], [, , \"8(?:[0-2459]\\\\d{2}|8)\\\\d{5}|9[017-9]\\\\d{7}\", , , , \"991234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CD\", 243, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"12\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[0-2459]|9\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], \r\n[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[1-6]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CF:[, [, , \"[278]\\\\d{7}\", , , , , , , [8]], [, , \"2[12]\\\\d{6}\", , , , \"21612345\"], [, , \"7[0257]\\\\d{6}\", , , , \"70012345\"], [, , , , , , , , , [-1]], [, , \"8776\\\\d{4}\", , , , \"87761234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CF\", 236, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3 $4\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CG:[, [, , \"[028]\\\\d{8}\", , , , , , , [9]], [, , \"222[1-589]\\\\d{5}\", , , , \"222123456\"], [, , \"0[14-6]\\\\d{7}\", , , , \"061234567\"], [, , , , , , , , , [-1]], [, , \"80(?:0\\\\d{2}|11[0-4])\\\\d{4}\", , , , \"800123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CG\", 242, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", \r\n[\"801\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[02]\"]], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"800\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CH:[, [, , \"[2-9]\\\\d{8}|860\\\\d{9}\", , , , , , , [9, 12]], [, , \"(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\\\d{7}\", , , , \"212345678\", , , [9]], [, , \"7[5-9]\\\\d{7}\", , , , \"781234567\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"90[016]\\\\d{6}\", , , \r\n, \"900123456\", , , [9]], [, , \"84[0248]\\\\d{6}\", , , , \"840123456\", , , [9]], [, , \"878\\\\d{6}\", , , , \"878123456\", , , [9]], [, , , , , , , , , [-1]], \"CH\", 41, \"00\", \"0\", , , \"0\", , , , [[, \"([2-9]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]|[89]1\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8[047]|90\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"860\"], \"0$1\"]], , [, , \"74[0248]\\\\d{6}\", , , , \"740123456\", , , [9]], , , [, , , , , , , , , [-1]], \r\n[, , \"5[18]\\\\d{7}\", , , , \"581234567\", , , [9]], , , [, , \"860\\\\d{9}\", , , , \"860123456789\", , , [12]]], CI:[, [, , \"[02-8]\\\\d{7}\", , , , , , , [8]], [, , \"(?:2(?:0[023]|1[02357]|[23][045]|4[03-5])|3(?:0[06]|1[069]|[2-4][07]|5[09]|6[08]))\\\\d{5}\", , , , \"21234567\"], [, , \"(?:0[1-9]|[45]\\\\d|6[014-9]|7[124-9]|8[4-9])\\\\d{6}\", , , , \"01234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CI\", 225, \"00\", , , , , , , \r\n, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CK:[, [, , \"[2-8]\\\\d{4}\", , , , , , , [5]], [, , \"(?:2\\\\d|3[13-7]|4[1-5])\\\\d{3}\", , , , \"21234\"], [, , \"[5-8]\\\\d{4}\", , , , \"71234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CK\", 682, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\"]], \r\n, [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CL:[, [, , \"1230\\\\d{7}|[2-46-9]\\\\d{8,10}|5[1-3578]\\\\d{7}\", , , , , , , [9, 10, 11]], [, , \"2(?:1962\\\\d{4}|2\\\\d{7}|32[0-467]\\\\d{5})|(?:3[2-5]\\\\d|[47][1-35]\\\\d|5[1-3578]\\\\d|6[13-57]\\\\d|8(?:0[1-9]|[1-9]\\\\d)|9[3-9]\\\\d)\\\\d{6}\", , , , \"221234567\", , , [9]], [, , \"2(?:1962\\\\d{4}|2\\\\d{7}|32[0-467]\\\\d{5})|(?:3[2-5]\\\\d|[47][1-35]\\\\d|5[1-3578]\\\\d|6[13-57]\\\\d|8(?:0[1-9]|[1-9]\\\\d)|9[3-9]\\\\d)\\\\d{6}\", \r\n, , , \"961234567\", , , [9]], [, , \"800\\\\d{6}|1230\\\\d{7}\", , , , \"800123456\", , , [9, 11]], [, , , , , , , , , [-1]], [, , \"600\\\\d{7,8}\", , , , \"6001234567\", , , [10, 11]], [, , , , , , , , , [-1]], [, , \"44\\\\d{7}\", , , , \"441234567\", , , [9]], \"CL\", 56, \"(?:0|1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))0\", , , , , , , 1, [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[23]\"], \"($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[357]|4[1-35]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"], [, \"(9)(\\\\d{4})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"9\"]], [, \"(44)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [, \"([68]00)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[68]00\"]], [, \"(600)(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"600\"]], [, \"(1230)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"123\", \"1230\"]], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\"], \"($1)\"], [, \"(\\\\d{4,5})\", \"$1\", [\"[1-9]\"], \"$1\"]], [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[23]\"], \"($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[357]|4[1-35]|6[13-57]|8(?:0[1-9]|[1-9])\"], \"($1)\"], [, \"(9)(\\\\d{4})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"9\"]], [, \"(44)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"44\"]], [, \"([68]00)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[68]00\"]], [, \"(600)(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"600\"]], [, \"(1230)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"123\", \"1230\"]], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"219\"], \"($1)\"]], [, , , , , , , , , [-1]], , , [, , \"600\\\\d{7,8}\", , , , \"6001234567\", , , [10, 11]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CM:[, [, , \"[2368]\\\\d{7,8}\", , , , , , , [8, 9]], [, , \"2(?:22|33|4[23])\\\\d{6}\", \r\n, , , \"222123456\", , , [9]], [, , \"6[5-9]\\\\d{7}\", , , , \"671234567\", , , [9]], [, , \"88\\\\d{6}\", , , , \"88012345\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CM\", 237, \"00\", , , , , , , , [[, \"([26])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[26]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]|88\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , \r\n, , , , [-1]]], CN:[, [, , \"[1-7]\\\\d{6,11}|8[0-357-9]\\\\d{6,9}|9\\\\d{7,10}\", , , , , , , [7, 8, 9, 10, 11, 12], [5, 6]], [, , \"21(?:100\\\\d{2}|95\\\\d{3,4}|\\\\d{8,10})|(?:10|2[02-57-9]|3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1\\\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98))(?:100\\\\d{2}|95\\\\d{3,4}|\\\\d{8})|(?:3(?:1[02-9]|35|49|5\\\\d|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|3[3-9]|5[2-9]|6[4789]|7\\\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\\\d|2[248]|3[04-9]|4[3-6]|5[0-4689]|6[2368]|9[02-9])|8(?:078|1[236-8]|2[5-7]|3\\\\d|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100\\\\d{2}|95\\\\d{3,4}|\\\\d{7})\", \r\n, , , \"1012345678\", , , , [5, 6]], [, , \"1(?:[38]\\\\d{3}|4[57]\\\\d{2}|5[0-35-9]\\\\d{2}|66\\\\d{2}|7(?:[0-35-8]\\\\d{2}|40[0-5])|9[89]\\\\d{2})\\\\d{6}\", , , , \"13123456789\", , , [11]], [, , \"(?:10)?800\\\\d{7}\", , , , \"8001234567\", , , [10, 12]], [, , \"16[08]\\\\d{5}\", , , , \"16812345\", , , [8]], [, , \"400\\\\d{7}|950\\\\d{7,8}|(?:10|2[0-57-9]|3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[4789]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[3678]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))96\\\\d{3,4}\", \r\n, , , \"4001234567\", , , [7, 8, 9, 10, 11], [5, 6]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CN\", 86, \"(?:1(?:[12]\\\\d{3}|79\\\\d{2}|9[0-7]\\\\d{2}))?00\", \"0\", , , \"(1(?:[12]\\\\d{3}|79\\\\d{2}|9[0-7]\\\\d{2}))|0\", , \"00\", , [[, \"([48]00)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[48]00\"]], [, \"(\\\\d{5,6})\", \"$1\", [\"100|95\"]], [, \"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2\\\\d)[19]\", \"(?:10|2\\\\d)(?:10|9[56])\", \"(?:10|2\\\\d)(?:100|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[3-9]\", \"[3-9]\\\\d\\\\d[19]\", \r\n\"[3-9]\\\\d\\\\d(?:10|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3,4})(\\\\d{4})\", \"$1 $2\", [\"[2-9]\"]], [, \"(21)(\\\\d{4})(\\\\d{4,6})\", \"$1 $2 $3\", [\"21\"], \"0$1\", \"$CC $1\", 1], [, \"([12]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10[1-9]|2[02-9]\", \"10[1-9]|2[02-9]\", \"10(?:[1-79]|8(?:0[1-9]|[1-9]))|2[02-9]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[47-9]|7|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])\"], \r\n\"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[457]|6[09])|8(?:[57]1|98)\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"807\", \"8078\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:[3-57-9]|66)\"], , \"$CC $1\"], [, \"(10800)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"108\", \"1080\", \"10800\"]], [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"950\"]]], [[, \"([48]00)(\\\\d{3})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"[48]00\"]], [, \"(\\\\d{2})(\\\\d{5,6})\", \"$1 $2\", [\"(?:10|2\\\\d)[19]\", \"(?:10|2\\\\d)(?:10|9[56])\", \"(?:10|2\\\\d)(?:100|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"[3-9]\", \"[3-9]\\\\d\\\\d[19]\", \"[3-9]\\\\d\\\\d(?:10|9[56])\"], \"0$1\", \"$CC $1\"], [, \"(21)(\\\\d{4})(\\\\d{4,6})\", \"$1 $2 $3\", [\"21\"], \"0$1\", \"$CC $1\", 1], [, \"([12]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"10[1-9]|2[02-9]\", \"10[1-9]|2[02-9]\", \"10(?:[1-79]|8(?:0[1-9]|[1-9]))|2[02-9]\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[47-9]|7|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[457]|6[09])|8(?:[57]1|98)\"], \"0$1\", \r\n\"$CC $1\", 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"807\", \"8078\"], \"0$1\", \"$CC $1\", 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:[3-57-9]|66)\"], , \"$CC $1\"], [, \"(10800)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"108\", \"1080\", \"10800\"]], [, \"(\\\\d{3})(\\\\d{7,8})\", \"$1 $2\", [\"950\"]]], [, , , , , , , , , [-1]], , , [, , \"(?:4|(?:10)?8)00\\\\d{7}|950\\\\d{7,8}\", , , , \"4001234567\", , , [10, 11, 12]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CO:[, [, , \"(?:[13]\\\\d{0,3}|[24-8])\\\\d{7}\", , \r\n, , , , , [8, 10, 11], [7]], [, , \"[124-8][2-9]\\\\d{6}\", , , , \"12345678\", , , [8], [7]], [, , \"3(?:0[0-5]|1\\\\d|2[0-3]|5[01])\\\\d{7}\", , , , \"3211234567\", , , [10]], [, , \"1800\\\\d{7}\", , , , \"18001234567\", , , [11]], [, , \"19(?:0[01]|4[78])\\\\d{7}\", , , , \"19001234567\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CO\", 57, \"00(?:4(?:[14]4|56)|[579])\", \"0\", , , \"0([3579]|4(?:44|56))?\", , , , [[, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1(?:[2-7]|8[2-9]|9[0-3])|[24-8]\", \r\n\"1(?:[2-7]|8[2-9]|9(?:09|[1-3]))|[24-8]\"], \"($1)\", \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"], , \"0$CC $1\"], [, \"(1)(\\\\d{3})(\\\\d{7})\", \"$1-$2-$3\", [\"1(?:80|9[04])\", \"1(?:800|9(?:0[01]|4[78]))\"], \"0$1\"]], [[, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"1(?:[2-7]|8[2-9]|9[0-3])|[24-8]\", \"1(?:[2-7]|8[2-9]|9(?:09|[1-3]))|[24-8]\"], \"($1)\", \"0$CC $1\"], [, \"(\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"3\"], , \"0$CC $1\"], [, \"(1)(\\\\d{3})(\\\\d{7})\", \"$1 $2 $3\", [\"1(?:80|9[04])\", \"1(?:800|9(?:0[01]|4[78]))\"]]], [, , , , , , , , , [-1]], \r\n, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CR:[, [, , \"[24-9]\\\\d{7,9}\", , , , , , , [8, 10]], [, , \"2(?:[024-7]\\\\d{2}|1(?:0[7-9]|[1-9]\\\\d))\\\\d{4}\", , , , \"22123456\", , , [8]], [, , \"5(?:0[01]|7[0-3])\\\\d{5}|6(?:[0-4]\\\\d{3}|500[01])\\\\d{3}|(?:7[0-3]|8[3-9])\\\\d{6}\", , , , \"83123456\", , , [8]], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , \"90[059]\\\\d{7}\", , , , \"9001234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"210[0-6]\\\\d{4}|4\\\\d{7}|5100\\\\d{4}\", \r\n, , , \"40001234\", , , [8]], \"CR\", 506, \"00\", , , , \"(19(?:0[012468]|1[09]|20|66|77|99))\", , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[24-7]|8[3-9]\"], , \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[89]0\"], , \"$CC $1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CU:[, [, , \"[2-57]\\\\d{5,7}\", , , , , , , [6, 7, 8], [4, 5]], [, , \"2[1-4]\\\\d{5,6}|3(?:1\\\\d{6}|[23]\\\\d{4,6})|4(?:[125]\\\\d{5,6}|[36]\\\\d{6}|[78]\\\\d{4,6})|7\\\\d{6,7}\", \r\n, , , \"71234567\", , , , [4, 5]], [, , \"5\\\\d{7}\", , , , \"51234567\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CU\", 53, \"119\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{6,7})\", \"$1 $2\", [\"7\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{4,6})\", \"$1 $2\", [\"[2-4]\"], \"(0$1)\"], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"5\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], \r\nCV:[, [, , \"[2-59]\\\\d{6}\", , , , , , , [7]], [, , \"2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\\\d|7[1-3]|8[1-5])\\\\d{4}\", , , , \"2211234\"], [, , \"(?:[34][36]|5[1-389]|9\\\\d)\\\\d{5}\", , , , \"9911234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CV\", 238, \"0\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , \r\n[-1]]], CW:[, [, , \"[134679]\\\\d{6,7}\", , , , , , , [7, 8]], [, , \"9(?:[48]\\\\d{2}|50\\\\d|7(?:2[0-24]|[34]\\\\d|6[35-7]|77|8[7-9]))\\\\d{4}\", , , , \"94151234\", , , [8]], [, , \"9(?:5(?:[12467]\\\\d|3[01])|6(?:[15-9]\\\\d|3[01]))\\\\d{4}\", , , , \"95181234\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"60[0-2]\\\\d{4}\", , , , \"6001234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"CW\", 599, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[13-7]\"]], [, \"(9)(\\\\d{3})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"9\"]]], , [, , \"955\\\\d{5}\", , , , \"95581234\", , , [8]], 1, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], CX:[, [, , \"[1458]\\\\d{5,9}\", , , , , , , [6, 7, 8, 9, 10]], [, , \"8(?:51(?:0(?:01|30|59)|117)|91(?:00[6-9]|1(?:21|49|78|81)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\", , , , \"891641234\", , , [9], [8]], [, , \"14(?:5\\\\d|71)\\\\d{5}|4(?:[0-3]\\\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[12547-9]|9[017-9])\\\\d{6}\", , , , \"412345678\", \r\n, , [9]], [, , \"180(?:0\\\\d{3}|2)\\\\d{3}\", , , , \"1800123456\", , , [7, 10]], [, , \"19(?:0[0126]\\\\d|[679])\\\\d{5}\", , , , \"1900123456\", , , [8, 10]], [, , \"13(?:00\\\\d{2})?\\\\d{4}\", , , , \"1300123456\", , , [6, 8, 10]], [, , \"500\\\\d{6}\", , , , \"500123456\", , , [9]], [, , \"550\\\\d{6}\", , , , \"550123456\", , , [9]], \"CX\", 61, \"(?:14(?:1[14]|34|4[17]|[56]6|7[47]|88))?001[14-689]\", \"0\", , , \"0\", , \"0011\", , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , \r\n, , , [-1]]], CY:[, [, , \"[257-9]\\\\d{7}\", , , , , , , [8]], [, , \"2[2-6]\\\\d{6}\", , , , \"22345678\"], [, , \"9[4-79]\\\\d{6}\", , , , \"96123456\"], [, , \"800\\\\d{5}\", , , , \"80001234\"], [, , \"90[09]\\\\d{5}\", , , , \"90012345\"], [, , \"80[1-9]\\\\d{5}\", , , , \"80112345\"], [, , \"700\\\\d{5}\", , , , \"70012345\"], [, , , , , , , , , [-1]], \"CY\", 357, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"(?:50|77)\\\\d{6}\", , , , \"77123456\"], , , [, , , , \r\n, , , , , [-1]]], CZ:[, [, , \"[2-8]\\\\d{8}|9\\\\d{8,11}\", , , , , , , [9, 10, 11, 12]], [, , \"2\\\\d{8}|(?:3[1257-9]|4[16-9]|5[13-9])\\\\d{7}\", , , , \"212345678\", , , [9]], [, , \"(?:60[1-8]|7(?:0[2-5]|[2379]\\\\d))\\\\d{6}\", , , , \"601123456\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"9(?:0[05689]|76)\\\\d{6}\", , , , \"900123456\", , , [9]], [, , \"8[134]\\\\d{7}\", , , , \"811234567\", , , [9]], [, , \"70[01]\\\\d{6}\", , , , \"700123456\", , , [9]], [, , \"9[17]0\\\\d{6}\", , , , \"910123456\", , , [9]], \"CZ\", \r\n420, \"00\", , , , , , , , [[, \"([2-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8]|9[015-7]\"]], [, \"(96\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"96\"]], [, \"(9\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9[36]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"9(?:5\\\\d|7[234])\\\\d{6}\", , , , \"972123456\", , , [9]], , , [, , \"9(?:3\\\\d{9}|6\\\\d{7,10})\", , , , \"93123456789\"]], DE:[, [, , \"[1-35-9]\\\\d{3,14}|4(?:[0-8]\\\\d{3,12}|9(?:[0-37]\\\\d|4(?:[1-35-8]|4\\\\d?)|5\\\\d{1,2}|6[1-8]\\\\d?)\\\\d{2,8})\", \r\n, , , , , , [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [3]], [, , \"2\\\\d{5,13}|3(?:0\\\\d{3,13}|2\\\\d{9}|[3-9]\\\\d{4,13})|4(?:0\\\\d{3,12}|[1-8]\\\\d{4,12}|9(?:[0-37]\\\\d|4(?:[1-35-8]|4\\\\d?)|5\\\\d{1,2}|6[1-8]\\\\d?)\\\\d{2,8})|5(?:0[2-8]|[1256]\\\\d|[38][0-8]|4\\\\d{0,2}|[79][0-7])\\\\d{3,11}|6(?:\\\\d{5,13}|9\\\\d{3,12})|7(?:0[2-8]|[1-9]\\\\d)\\\\d{3,10}|8(?:0[2-9]|[1-8]\\\\d|9\\\\d?)\\\\d{3,10}|9(?:0[6-9]\\\\d{3,10}|1\\\\d{4,12}|[2-9]\\\\d{4,11})\", , , , \"30123456\", , , [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [3, 4]], [, , \"1(?:5[0-25-9]\\\\d{8}|6[023]\\\\d{7,8}|7\\\\d{8,9})\", \r\n, , , \"15123456789\", , , [10, 11]], [, , \"800\\\\d{7,12}\", , , , \"8001234567890\", , , [10, 11, 12, 13, 14, 15]], [, , \"137[7-9]\\\\d{6}|900(?:[135]\\\\d{6}|9\\\\d{7})\", , , , \"9001234567\", , , [10, 11]], [, , \"1(?:3(?:7[1-6]\\\\d{6}|8\\\\d{4})|80\\\\d{5,11})\", , , , \"18012345\", , , [7, 8, 9, 10, 11, 12, 13, 14]], [, , \"700\\\\d{8}\", , , , \"70012345678\", , , [11]], [, , , , , , , , , [-1]], \"DE\", 49, \"00\", \"0\", , , \"0\", , , , [[, \"(1\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"1[67]\"], \"0$1\"], [, \"(15\\\\d{3})(\\\\d{6})\", \"$1 $2\", \r\n[\"15[0568]\"], \"0$1\"], [, \"(1\\\\d{3})(\\\\d{7})\", \"$1 $2\", [\"15\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,11})\", \"$1 $2\", [\"3[02]|40|[68]9\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3,11})\", \"$1 $2\", [\"2(?:0[1-389]|1[124]|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|[4-8][1-9]1|9(?:06|[1-9]1)\", \"2(?:0[1-389]|1(?:[14]|2[0-8])|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|[4-8][1-9]1|9(?:06|[1-9]1)\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{2,11})\", \"$1 $2\", [\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|[7-9](?:0[1-9]|[1-9])\", \"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|[49][1246]|6[1-4]|7[13468]|8[13568])|6(?:0[1356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6[0135-9]|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|[7-9](?:0[1-9]|[1-9])\"], \r\n\"0$1\"], [, \"(3\\\\d{4})(\\\\d{1,10})\", \"$1 $2\", [\"3\"], \"0$1\"], [, \"(800)(\\\\d{7,12})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{4,10})\", \"$1 $2 $3\", [\"1(?:37|80)|900\", \"1(?:37|80)|900[1359]\"], \"0$1\"], [, \"(1\\\\d{2})(\\\\d{5,11})\", \"$1 $2\", [\"181\"], \"0$1\"], [, \"(18\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"185\", \"1850\", \"18500\"], \"0$1\"], [, \"(18\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"18[68]\"], \"0$1\"], [, \"(18\\\\d)(\\\\d{8})\", \"$1 $2\", [\"18[2-579]\"], \"0$1\"], [, \"(700)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"700\"], \"0$1\"], [, \"(138)(\\\\d{4})\", \r\n\"$1 $2\", [\"138\"], \"0$1\"], [, \"(15[013-68])(\\\\d{2})(\\\\d{8})\", \"$1 $2 $3\", [\"15[013-68]\"], \"0$1\"], [, \"(15[279]\\\\d)(\\\\d{2})(\\\\d{7})\", \"$1 $2 $3\", [\"15[279]\"], \"0$1\"], [, \"(1[67]\\\\d)(\\\\d{2})(\\\\d{7,8})\", \"$1 $2 $3\", [\"1(?:6[023]|7)\"], \"0$1\"]], , [, , \"16(?:4\\\\d{1,10}|[89]\\\\d{1,11})\", , , , \"16412345\", , , [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], , , [, , , , , , , , , [-1]], [, , \"18(?:1\\\\d{5,11}|[2-9]\\\\d{8})\", , , , \"18500123456\", , , [8, 9, 10, 11, 12, 13, 14]], , , [, , \"1(?:5(?:(?:2\\\\d55|7\\\\d99|9\\\\d33)\\\\d{7}|(?:[034568]00|113)\\\\d{8})|6(?:013|255|399)\\\\d{7,8}|7(?:[015]13|[234]55|[69]33|[78]99)\\\\d{7,8})\", \r\n, , , \"177991234567\", , , [12, 13]]], DJ:[, [, , \"[27]\\\\d{7}\", , , , , , , [8]], [, , \"2(?:1[2-5]|7[45])\\\\d{5}\", , , , \"21360003\"], [, , \"77\\\\d{6}\", , , , \"77831001\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"DJ\", 253, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], \r\nDK:[, [, , \"[2-9]\\\\d{7}\", , , , , , , [8]], [, , \"(?:[2-7]\\\\d|8[126-9]|9[1-36-9])\\\\d{6}\", , , , \"32123456\"], [, , \"(?:[2-7]\\\\d|8[126-9]|9[1-36-9])\\\\d{6}\", , , , \"20123456\"], [, , \"80\\\\d{6}\", , , , \"80123456\"], [, , \"90\\\\d{6}\", , , , \"90123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"DK\", 45, \"00\", , , , , , , 1, [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, \r\n, , , , , , , , [-1]]], DM:[, [, , \"[57-9]\\\\d{9}\", , , , , , , [10], [7]], [, , \"767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4]|70[1-3])\\\\d{4}\", , , , \"7674201234\", , , , [7]], [, , \"767(?:2(?:[234689]5|7[5-7])|31[5-7]|61[1-7])\\\\d{4}\", , , , \"7672251234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \r\n\"DM\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"767\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], DO:[, [, , \"[589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"8(?:[04]9[2-9]\\\\d{6}|29(?:2(?:[0-59]\\\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\\\d|4[7-9])|[45]\\\\d{2}|6(?:[0-27-9]\\\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9]))\\\\d{4})\", \r\n, , , \"8092345678\", , , , [7]], [, , \"8[024]9[2-9]\\\\d{6}\", , , , \"8092345678\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"DO\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"8[024]9\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], DZ:[, [, \r\n, \"(?:[1-4]|[5-9]\\\\d)\\\\d{7}\", , , , , , , [8, 9]], [, , \"(?:1\\\\d|2[013-79]|3[0-8]|4[0135689])\\\\d{6}|9619\\\\d{5}\", , , , \"12345678\"], [, , \"(?:5[4-6]|7[7-9])\\\\d{7}|6(?:[569]\\\\d|7[0-6])\\\\d{6}\", , , , \"551234567\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"80[3-689]1\\\\d{5}\", , , , \"808123456\", , , [9]], [, , \"80[12]1\\\\d{5}\", , , , \"801123456\", , , [9]], [, , , , , , , , , [-1]], [, , \"98[23]\\\\d{6}\", , , , \"983123456\", , , [9]], \"DZ\", 213, \"00\", \"0\", , , \"0\", , , , [[, \"([1-4]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3 $4\", [\"[1-4]\"], \"0$1\"], [, \"([5-8]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-8]\"], \"0$1\"], [, \"(9\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"9\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], EC:[, [, , \"1\\\\d{9,10}|[2-8]\\\\d{7}|9\\\\d{8}\", , , , , , , [8, 9, 10, 11], [7]], [, , \"[2-7][2-7]\\\\d{6}\", , , , \"22123456\", , , [8], [7]], [, , \"9(?:(?:39|[45][89]|7[7-9]|[89]\\\\d)\\\\d|6(?:[0-27-9]\\\\d|30))\\\\d{5}\", \r\n, , , \"991234567\", , , [9]], [, , \"1800\\\\d{6,7}\", , , , \"18001234567\", , , [10, 11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"[2-7]890\\\\d{4}\", , , , \"28901234\", , , [8]], \"EC\", 593, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2-$3\", [\"[247]|[356][2-8]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(1800)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"180\", \"1800\"], \"$1\"]], [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[247]|[356][2-8]\"]], \r\n[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(1800)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"180\", \"1800\"], \"$1\"]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], EE:[, [, , \"[3-9]\\\\d{6,7}|800\\\\d{6,7}\", , , , , , , [7, 8, 10]], [, , \"(?:3[23589]|4[3-8]|6\\\\d|7[1-9]|88)\\\\d{5}\", , , , \"3212345\", , , [7]], [, , \"(?:5\\\\d|8[1-5])\\\\d{6}|5(?:[02]\\\\d{2}|1(?:[0-8]\\\\d|95)|5[0-478]\\\\d|64[0-4]|65[1-589])\\\\d{3}\", , , , \"51234567\", , , \r\n[7, 8]], [, , \"800(?:0\\\\d{3}|1\\\\d|[2-9])\\\\d{3}\", , , , \"80012345\"], [, , \"(?:40\\\\d{2}|900)\\\\d{4}\", , , , \"9001234\", , , [7, 8]], [, , , , , , , , , [-1]], [, , \"70[0-2]\\\\d{5}\", , , , \"70012345\", , , [8]], [, , , , , , , , , [-1]], \"EE\", 372, \"00\", , , , , , , , [[, \"([3-79]\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]\", \"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]\"]], [, \"(70)(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"70\"]], [, \"(8000)(\\\\d{3})(\\\\d{3})\", \r\n\"$1 $2 $3\", [\"800\", \"8000\"]], [, \"([458]\\\\d{3})(\\\\d{3,4})\", \"$1 $2\", [\"40|5|8(?:00|[1-5])\", \"40|5|8(?:00[1-9]|[1-5])\"]]], , [, , , , , , , , , [-1]], , , [, , \"800[2-9]\\\\d{3}\", , , , \"8002123\", , , [7]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], EG:[, [, , \"1\\\\d{4,9}|[24-6]\\\\d{8}|3\\\\d{7}|[89]\\\\d{8,9}\", , , , , , , [8, 9, 10], [7]], [, , \"(?:1(?:3[23]\\\\d|5(?:[23]|9\\\\d))|2[2-4]\\\\d{2}|3\\\\d{2}|4(?:0[2-5]|[578][23]|64)\\\\d|5(?:0[2-7]|5\\\\d|7[23])\\\\d|6[24-689]3\\\\d|8(?:2[2-57]|4[26]|6[237]|8[2-4])\\\\d|9(?:2[27]|3[24]|52|6[2356]|7[2-4])\\\\d)\\\\d{5}\", \r\n, , , \"234567890\", , , [8, 9], [7]], [, , \"1[0125]\\\\d{8}\", , , , \"1001234567\", , , [10]], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , \"900\\\\d{7}\", , , , \"9001234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"EG\", 20, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{7,8})\", \"$1 $2\", [\"[23]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6,7})\", \"$1 $2\", [\"1(?:3|5[239])|[4-6]|[89][2-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1[0-25]|[89]00\"], \"0$1\"]], \r\n, [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], EH:[, [, , \"[5-9]\\\\d{8}\", , , , , , , [9]], [, , \"528[89]\\\\d{5}\", , , , \"528812345\"], [, , \"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[017]))\\\\d{6}\", , , , \"650123456\"], [, , \"80\\\\d{7}\", , , , \"801234567\"], [, , \"89\\\\d{7}\", , , , \"891234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"5924[01]\\\\d{4}\", , , , \"592401234\"], \"EH\", 212, \"00\", \"0\", , , \"0\", , , , , , \r\n[, , , , , , , , , [-1]], , \"528[89]\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], ER:[, [, , \"[178]\\\\d{6}\", , , , , , , [7], [6]], [, , \"1(?:1[12568]|20|40|55|6[146])\\\\d{4}|8\\\\d{6}\", , , , \"8370362\", , , , [6]], [, , \"17[1-3]\\\\d{4}|7\\\\d{6}\", , , , \"7123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ER\", 291, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", \r\n, \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], ES:[, [, , \"[5-9]\\\\d{8}\", , , , , , , [9]], [, , \"8(?:[1356]\\\\d|[28][0-8]|[47][1-9])\\\\d{6}|9(?:[135]\\\\d{7}|[28][0-8]\\\\d{6}|4[1-9]\\\\d{6}|6(?:[0-8]\\\\d{6}|9(?:0(?:[0-57-9]\\\\d{4}|6(?:0[0-8]|1[1-9]|[2-9]\\\\d)\\\\d{2})|[1-9]\\\\d{5}))|7(?:[124-9]\\\\d{2}|3(?:[0-8]\\\\d|9[1-9]))\\\\d{4})\", , , , \"810123456\"], [, , \"(?:6\\\\d{6}|7[1-48]\\\\d{5}|9(?:6906(?:09|10)|7390\\\\d{2}))\\\\d{2}\", , , , \"612345678\"], \r\n[, , \"[89]00\\\\d{6}\", , , , \"800123456\"], [, , \"80[367]\\\\d{6}\", , , , \"803123456\"], [, , \"90[12]\\\\d{6}\", , , , \"901123456\"], [, , \"70\\\\d{7}\", , , , \"701234567\"], [, , , , , , , , , [-1]], \"ES\", 34, \"00\", , , , , , , , [[, \"([89]00)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[89]00\"]], [, \"([5-9]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[568]|[79][0-8]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"51\\\\d{7}\", , , , \"511234567\"], , , [, , , , , , , , , [-1]]], ET:[, [, , \"[1-59]\\\\d{8}\", \r\n, , , , , , [9], [7]], [, , \"(?:11(?:1(?:1[124]|2[2-57]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8])|5(?:1[578]|44|5[0-4])|6(?:18|2[69]|39|4[5-7]|5[1-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|22[0-6]|33[0134689]|44[04]|55[0-6]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:11[1-9]|22[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\\\d)))\\\\d{4}\", \r\n, , , \"111112345\", , , , [7]], [, , \"9\\\\d{8}\", , , , \"911234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ET\", 251, \"00\", \"0\", , , \"0\", , , , [[, \"([1-59]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-59]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], FI:[, [, , \"1\\\\d{4,11}|[2-9]\\\\d{4,10}\", , , , , , , [5, 6, 7, 8, 9, 10, 11, 12]], [, \r\n, \"1(?:[3569][1-8]\\\\d{3,9}|[47]\\\\d{5,10})|2[1-8]\\\\d{3,9}|3(?:[1-8]\\\\d{3,9}|9\\\\d{4,8})|[5689][1-8]\\\\d{3,9}\", , , , \"1312345678\"], [, , \"4(?:[0-8]\\\\d{4,9}|9\\\\d{3,8})|50\\\\d{4,8}\", , , , \"412345678\", , , [6, 7, 8, 9, 10, 11]], [, , \"800\\\\d{4,7}\", , , , \"8001234567\", , , [7, 8, 9, 10]], [, , \"[67]00\\\\d{5,6}\", , , , \"600123456\", , , [8, 9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"FI\", 358, \"00|99(?:[02469]|5(?:11|33|5[59]|88|9[09]))\", \"0\", , , \"0\", , \"00\", , [[, \r\n\"(\\\\d{3})(\\\\d{3,7})\", \"$1 $2\", [\"(?:[1-3]0|[6-8])0\"], \"0$1\"], [, \"(75\\\\d{3})\", \"$1\", [\"75[12]\"], \"0$1\"], [, \"(116\\\\d{3})\", \"$1\", [\"116\"], \"$1\"], [, \"(\\\\d{2})(\\\\d{4,10})\", \"$1 $2\", [\"[14]|2[09]|50|7[135]\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4,11})\", \"$1 $2\", [\"[25689][1-8]|3\"], \"0$1\"]], , [, , , , , , , , , [-1]], 1, , [, , \"[13]00\\\\d{3,7}|2(?:0(?:0\\\\d{3,7}|2[023]\\\\d{1,6}|9[89]\\\\d{1,6}))|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{3,7})\", , , , \"100123\", , , [5, 6, 7, 8, 9, 10]], [, , \"[13]0\\\\d{4,8}|2(?:0(?:[016-8]\\\\d{3,7}|[2-59]\\\\d{2,7})|9\\\\d{4,8})|60(?:[12]\\\\d{5,6}|6\\\\d{7})|7(?:1\\\\d{7}|3\\\\d{8}|5[03-9]\\\\d{3,7})\", \r\n, , , \"10112345\", , , [5, 6, 7, 8, 9, 10]], , , [, , , , , , , , , [-1]]], FJ:[, [, , \"[2-9]\\\\d{6}|0\\\\d{10}\", , , , , , , [7, 11]], [, , \"(?:3[0-5]\\\\d|6(?:03|[25-7]\\\\d)|8[58]\\\\d)\\\\d{4}\", , , , \"3212345\", , , [7]], [, , \"(?:[279]\\\\d|45|5[01568]|8[034679])\\\\d{5}\", , , , \"7012345\", , , [7]], [, , \"0800\\\\d{7}\", , , , \"08001234567\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"FJ\", 679, \"0(?:0|52)\", , , , , , \"00\", , [[, \"(\\\\d{3})(\\\\d{4})\", \r\n\"$1 $2\", [\"[2-9]\"]], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], FK:[, [, , \"[2-7]\\\\d{4}\", , , , , , , [5]], [, , \"[2-47]\\\\d{4}\", , , , \"31234\"], [, , \"[56]\\\\d{4}\", , , , \"51234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"FK\", 500, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, \r\n, , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], FM:[, [, , \"[39]\\\\d{6}\", , , , , , , [7]], [, , \"3[2357]0[1-9]\\\\d{3}|9[2-6]\\\\d{5}\", , , , \"3201234\"], [, , \"3[2357]0[1-9]\\\\d{3}|9[2-7]\\\\d{5}\", , , , \"3501234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"FM\", 691, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , \r\n, , , , , , [-1]], , , [, , , , , , , , , [-1]]], FO:[, [, , \"[2-9]\\\\d{5}\", , , , , , , [6]], [, , \"(?:20|[3-4]\\\\d|8[19])\\\\d{4}\", , , , \"201234\"], [, , \"(?:[27][1-9]|5\\\\d)\\\\d{4}\", , , , \"211234\"], [, , \"80[257-9]\\\\d{3}\", , , , \"802123\"], [, , \"90(?:[1345][15-7]|2[125-7]|99)\\\\d{2}\", , , , \"901123\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:6[0-36]|88)\\\\d{4}\", , , , \"601234\"], \"FO\", 298, \"00\", , , , \"(10(?:01|[12]0|88))\", , , , [[, \"(\\\\d{6})\", \"$1\", , , \"$CC $1\"]], , [, , , , , \r\n, , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], FR:[, [, , \"[1-9]\\\\d{8}\", , , , , , , [9]], [, , \"[1-5]\\\\d{8}\", , , , \"123456789\"], [, , \"(?:6\\\\d|7[3-9])\\\\d{7}\", , , , \"612345678\"], [, , \"80[0-5]\\\\d{6}\", , , , \"801234567\"], [, , \"89[1-357-9]\\\\d{6}\", , , , \"891123456\"], [, , \"8(?:1[0-29]|2[0156]|84|90)\\\\d{6}\", , , , \"810123456\"], [, , , , , , , , , [-1]], [, , \"9\\\\d{8}\", , , , \"912345678\"], \"FR\", 33, \"00\", \"0\", , , \"0\", , , , [[, \"([1-79])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"], [, \"(1\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"11\"], \"$1\"], [, \"(8\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"]], [[, \"([1-79])(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"[1-79]\"], \"0$1\"], [, \"(8\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"], \"0 $1\"]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"80[6-9]\\\\d{6}\", , , , \"806123456\"], , , [, , , , , , , , , [-1]]], GA:[, [, , \"0?\\\\d{7}\", , , , , , , [7, 8]], [, , \"01\\\\d{6}\", \r\n, , , \"01441234\", , , [8]], [, , \"0?[2-7]\\\\d{6}\", , , , \"06031234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GA\", 241, \"00\", , , , , , , , [[, \"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-7]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GB:[, [, , \"\\\\d{7,10}\", \r\n, , , , , , [7, 9, 10], [4, 5, 6, 8]], [, , \"2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{7}|1(?:1(?:3[0-48]|[46][0-4]|5[0-26-9]|[78][0-49])|21[0-7]|31[0-8]|[4-69]1\\\\d)\\\\d{6}|1(?:2(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)|3(?:0\\\\d|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[28][02-57-9]|[37]\\\\d|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|2[024-9]|3[015689]|4[02-9]|5[03-9]|6\\\\d|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0124578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|8\\\\d|9[2-57]))\\\\d{6}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[345])))|3(?:638[2-5]|647[23]|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[123]))|5(?:24(?:3[2-79]|6\\\\d)|276\\\\d|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[567]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|955[0-4])|7(?:26(?:6[13-9]|7[0-7])|442\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|84(?:3[2-58]))|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}|176888[2-46-8]\\\\d{2}|16977[23]\\\\d{3}\", \r\n, , , \"1212345678\", , , [9, 10], [4, 5, 6, 7, 8]], [, , \"7(?:[1-3]\\\\d{3}|4(?:[0-46-9]\\\\d{2}|5(?:[0-689]\\\\d|7[0-57-9]))|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])\\\\d|7(?:0(?:0[01]|[1-9]\\\\d)|[1-7]\\\\d{2}|8[02-9]\\\\d|9[0-689]\\\\d)|8(?:[014-9]\\\\d|[23][0-8])\\\\d|9(?:[024-9]\\\\d{2}|1(?:[02-9]\\\\d|1[028])|3[0-689]\\\\d))\\\\d{5}\", , , , \"7400123456\", , , [10]], [, , \"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})\", , , , \"8001234567\"], [, , \"(?:87[123]|9(?:[01]\\\\d|8[2349]))\\\\d{7}\", , , , \"9012345678\", , , [10]], [, , \"8(?:4(?:5464\\\\d|[2-5]\\\\d{7})|70\\\\d{7})\", \r\n, , , \"8431234567\", , , [7, 10]], [, , \"70\\\\d{8}\", , , , \"7012345678\", , , [10]], [, , \"56\\\\d{8}\", , , , \"5612345678\", , , [10]], \"GB\", 44, \"00\", \"0\", \" x\", , \"0\", , , , [[, \"(7\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"7(?:[1-57-9]|62)\", \"7(?:[1-57-9]|624)\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2|5[56]|7[06]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:[02-9]1|1)|3|9[018]\"], \"0$1\"], [, \"(\\\\d{5})(\\\\d{4,5})\", \"$1 $2\", [\"1(?:38|5[23]|69|76|94)\", \"1(?:(?:38|69)7|5(?:24|39)|768|946)\", \r\n\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"], \"0$1\"], [, \"(1\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"1\"], \"0$1\"], [, \"(800)(\\\\d{4})\", \"$1 $2\", [\"800\", \"8001\", \"80011\", \"800111\", \"8001111\"], \"0$1\"], [, \"(845)(46)(4\\\\d)\", \"$1 $2 $3\", [\"845\", \"8454\", \"84546\", \"845464\"], \"0$1\"], [, \"(8\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8(?:4[2-5]|7[0-3])\"], \"0$1\"], [, \"(80\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"80\"], \"0$1\"], [, \"(800)(\\\\d{6})\", \"$1 $2\", [\"800\"], \"0$1\"]], , [, , \"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\", \r\n, , , \"7640123456\", , , [10]], 1, , [, , , , , , , , , [-1]], [, , \"(?:3[0347]|55)\\\\d{8}\", , , , \"5512345678\", , , [10]], , , [, , , , , , , , , [-1]]], GD:[, [, , \"[4589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-49]|5[5-79]|68|73|90)|63[68]|7(?:58|84)|800|938)\\\\d{4}\", , , , \"4732691234\", , , , [7]], [, , \"473(?:4(?:0[2-79]|1[04-9]|2[0-5]|58)|5(?:2[01]|3[3-8])|901)\\\\d{4}\", , , , \"4734031234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", \r\n, , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"GD\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"473\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GE:[, [, , \"[34578]\\\\d{8}\", , , , , , , [9], [6]], [, , \"(?:3(?:[256]\\\\d|4[124-9]|7[0-4])|4(?:1\\\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\\\d{6}\", , , \r\n, \"322123456\", , , , [6]], [, , \"(?:5(?:[14]4|5[0157-9]|68|7[0147-9]|9[1-35-9])|790)\\\\d{6}\", , , , \"555123456\"], [, , \"800\\\\d{6}\", , , , \"800123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"706\\\\d{6}\", , , , \"706123456\"], \"GE\", 995, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[348]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5|790\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], \r\n, [, , , , , , , , , [-1]], , , [, , \"706\\\\d{6}\", , , , \"706123456\"], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GF:[, [, , \"[56]\\\\d{8}\", , , , , , , [9]], [, , \"594(?:[023]\\\\d|1[01]|4[03-9]|5[6-9]|6[0-3]|80|9[014])\\\\d{4}\", , , , \"594101234\"], [, , \"694(?:[0-249]\\\\d|3[0-48])\\\\d{4}\", , , , \"694201234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GF\", 594, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3 $4\", , \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GG:[, [, , \"[135789]\\\\d{6,9}\", , , , , , , [7, 9, 10], [6]], [, , \"1481[25-9]\\\\d{5}\", , , , \"1481256789\", , , [10], [6]], [, , \"7(?:781\\\\d|839\\\\d|911[17])\\\\d{5}\", , , , \"7781123456\", , , [10]], [, , \"80(?:0(?:1111|\\\\d{6,7})|8\\\\d{7})\", , , , \"8001234567\"], [, , \"(?:87[123]|9(?:[01]\\\\d|8[0-3]))\\\\d{7}\", , , , \"9012345678\", , , [10]], [, , \"8(?:4(?:5464\\\\d|[2-5]\\\\d{7})|70\\\\d{7})\", \r\n, , , \"8431234567\", , , [7, 10]], [, , \"70\\\\d{8}\", , , , \"7012345678\", , , [10]], [, , \"56\\\\d{8}\", , , , \"5612345678\", , , [10]], \"GG\", 44, \"00\", \"0\", , , \"0\", , , , , , [, , \"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\", , , , \"7640123456\", , , [10]], , , [, , , , , , , , , [-1]], [, , \"(?:3[0347]|55)\\\\d{8}\", , , , \"5512345678\", , , [10]], , , [, , , , , , , , , [-1]]], GH:[, [, , \"[235]\\\\d{8}|8\\\\d{7}\", , , , , , , [8, 9], [7]], [, , \"3(?:0(?:[237]\\\\d|80)|[167](?:2[0-6]|7\\\\d|80)|2(?:2[0-5]|7\\\\d|80)|3(?:2[0-3]|7\\\\d|80)|4(?:2[013-9]|3[01]|7\\\\d|80)|5(?:2[0-7]|7\\\\d|80)|8(?:2[0-2]|7\\\\d|80)|9(?:[28]0|7\\\\d))\\\\d{5}\", \r\n, , , \"302345678\", , , [9], [7]], [, , \"(?:2[034678]\\\\d|5(?:[0457]\\\\d|6[01]))\\\\d{6}\", , , , \"231234567\", , , [9]], [, , \"800\\\\d{5}\", , , , \"80012345\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GH\", 233, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[235]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , \"800\\\\d{5}\", , , , \"80012345\", , , [8]], [, , , , , \r\n, , , , [-1]], , , [, , , , , , , , , [-1]]], GI:[, [, , \"[256]\\\\d{7}\", , , , , , , [8]], [, , \"2(?:00\\\\d{2}|1(?:6[24-7]\\\\d|90[0-2])|2(?:2[2457]\\\\d|50[0-2]))\\\\d{3}\", , , , \"20012345\"], [, , \"(?:5[46-8]|62)\\\\d{6}\", , , , \"57123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GI\", 350, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"2\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , \r\n, , , , , , [-1]], , , [, , , , , , , , , [-1]]], GL:[, [, , \"[1-689]\\\\d{5}\", , , , , , , [6]], [, , \"(?:19|3[1-7]|6[14689]|8[14-79]|9\\\\d)\\\\d{4}\", , , , \"321000\"], [, , \"(?:[25][1-9]|4[2-9])\\\\d{4}\", , , , \"221234\"], [, , \"80\\\\d{4}\", , , , \"801234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"3[89]\\\\d{4}\", , , , \"381234\"], \"GL\", 299, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, \r\n, , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GM:[, [, , \"[2-9]\\\\d{6}\", , , , , , , [7]], [, , \"(?:4(?:[23]\\\\d{2}|4(?:1[024679]|[6-9]\\\\d))|5(?:54[0-7]|6(?:[67]\\\\d)|7(?:1[04]|2[035]|3[58]|48))|8\\\\d{3})\\\\d{3}\", , , , \"5661234\"], [, , \"[23679]\\\\d{6}\", , , , \"3012345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GM\", 220, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , \r\n, [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GN:[, [, , \"[367]\\\\d{7,8}\", , , , , , , [8, 9]], [, , \"30(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])\\\\d{4}\", , , , \"30241234\", , , [8]], [, , \"6[02356]\\\\d{7}\", , , , \"601123456\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"722\\\\d{6}\", , , , \"722123456\", , , [9]], \"GN\", 224, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3 $4\", [\"3\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[67]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GP:[, [, , \"[56]\\\\d{8}\", , , , , , , [9]], [, , \"590(?:0[1-68]|1[0-2]|2[0-68]|3[1289]|4[0-24-9]|5[3-579]|6[0189]|7[08]|8[0-689]|9\\\\d)\\\\d{4}\", , , , \"590201234\"], [, , \"69(?:0\\\\d{2}|1(?:2[29]|3[0-5]))\\\\d{4}\", , , , \"690001234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , \r\n, [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GP\", 590, \"00\", \"0\", , , \"0\", , , , [[, \"([56]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"590|69[01]\"], \"0$1\"]], , [, , , , , , , , , [-1]], 1, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GQ:[, [, , \"[23589]\\\\d{8}\", , , , , , , [9]], [, , \"3(?:3(?:3\\\\d[7-9]|[0-24-9]\\\\d[46])|5\\\\d{2}[7-9])\\\\d{4}\", , , , \"333091234\"], [, , \"(?:222|55[15])\\\\d{6}\", , , , \"222123456\"], [, , \"80\\\\d[1-9]\\\\d{5}\", \r\n, , , \"800123456\"], [, , \"90\\\\d[1-9]\\\\d{5}\", , , , \"900123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GQ\", 240, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[235]\"]], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"[89]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GR:[, [, , \"[26-9]\\\\d{9}\", , , , , , , [10]], [, , \"2(?:1\\\\d{2}|2(?:2[1-46-9]|3[1-8]|4[1-7]|5[1-4]|6[1-8]|7[1-5]|[89][1-9])|3(?:1\\\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\\\d|3[1245]|4[1-7]|5[13-9]|[269][1-6]|7[14]|8[1-5])|7(?:1\\\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\\\d|2[1-5]|[34][1-4]|9[1-57]))\\\\d{6}\", \r\n, , , \"2123456789\"], [, , \"6(?:8[57-9]|9\\\\d)\\\\d{7}\", , , , \"6912345678\"], [, , \"800\\\\d{7}\", , , , \"8001234567\"], [, , \"90[19]\\\\d{7}\", , , , \"9091234567\"], [, , \"8(?:0[16]|12|25)\\\\d{7}\", , , , \"8011234567\"], [, , \"70\\\\d{8}\", , , , \"7012345678\"], [, , , , , , , , , [-1]], \"GR\", 30, \"00\", , , , , , , , [[, \"([27]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"21|7\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[2-9]1|[689]\"]], [, \"(2\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"2[2-9][02-9]\"]]], , [, , , , , , , , , [-1]], \r\n, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GT:[, [, , \"[2-7]\\\\d{7}|1[89]\\\\d{9}\", , , , , , , [8, 11]], [, , \"[267][2-9]\\\\d{6}\", , , , \"22456789\", , , [8]], [, , \"[345]\\\\d{7}\", , , , \"51234567\", , , [8]], [, , \"18[01]\\\\d{8}\", , , , \"18001112222\", , , [11]], [, , \"19\\\\d{9}\", , , , \"19001112222\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GT\", 502, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]\"]], \r\n[, \"(\\\\d{4})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GU:[, [, , \"[5689]\\\\d{9}\", , , , , , , [10], [7]], [, , \"671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[079]7|2[0167]|3[45]|47|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\", , , , \"6713001234\", , , , [7]], [, , \"671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[079]7|2[0167]|3[45]|47|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\\\d{4}\", \r\n, , , \"6713001234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"GU\", 1, \"011\", \"1\", , , \"1\", , , 1, , , [, , , , , , , , , [-1]], , \"671\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], GW:[, [, , \"(?:4(?:0\\\\d{5}|4\\\\d{7})|9\\\\d{8})\", , , , , , , [7, 9]], [, \r\n, \"443\\\\d{6}\", , , , \"443201234\", , , [9]], [, , \"9(?:5\\\\d|6[569]|77)\\\\d{6}\", , , , \"955012345\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"40\\\\d{5}\", , , , \"4012345\", , , [7]], \"GW\", 245, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"44|9[5-7]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"40\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], \r\nGY:[, [, , \"[2-46-9]\\\\d{6}\", , , , , , , [7]], [, , \"(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\\\d|7[0-24-79])|3(?:2[25-9]|3\\\\d)|4(?:4[0-24]|5[56])|77[1-57])\\\\d{4}\", , , , \"2201234\"], [, , \"6\\\\d{6}\", , , , \"6091234\"], [, , \"(?:289|862)\\\\d{4}\", , , , \"2891234\"], [, , \"9008\\\\d{3}\", , , , \"9008123\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"GY\", 592, \"001\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, \r\n, , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], HK:[, [, , \"[2-7]\\\\d{7}|8[0-3]\\\\d{6,7}|9\\\\d{4,10}\", , , , , , , [5, 6, 7, 8, 9, 11]], [, , \"(?:2(?:[13-8]\\\\d|2[013-9]|9[0-24-9])\\\\d|3(?:[1569][0-24-9]\\\\d|4[0-246-9]\\\\d|7[0-24-69]\\\\d|8(?:40|9\\\\d))|58(?:0[1-8]|1[2-9]))\\\\d{4}\", , , , \"21234567\", , , [8]], [, , \"(?:46(?:0[0-6]|4[07-9])|5(?:[1-59][0-46-9]\\\\d|6[0-4689]\\\\d|7(?:[0-2469]\\\\d|30))|6(?:0[1-9]\\\\d|[1459]\\\\d{2}|2(?:[0-57-9]\\\\d|6[01])|[368][0-57-9]\\\\d|7[0-79]\\\\d)|9(?:0[1-9]\\\\d|1[02-9]\\\\d|2(?:[0-8]\\\\d|9[03-9])|[358][0-8]\\\\d|[467]\\\\d{2}))\\\\d{4}\", \r\n, , , \"51234567\", , , [8]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"900(?:[0-24-9]\\\\d{7}|3\\\\d{1,4})\", , , , \"90012345678\", , , [5, 6, 7, 8, 11]], [, , , , , , , , , [-1]], [, , \"8(?:1[0-4679]\\\\d|2(?:[0-36]\\\\d|7[0-4])|3(?:[034]\\\\d|2[09]|70))\\\\d{4}\", , , , \"81123456\", , , [8]], [, , , , , , , , , [-1]], \"HK\", 852, \"00(?:[126-9]|30|5[09])?\", , , , , , \"00\", , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[2-7]|[89](?:0[1-9]|[1-9])\"]], [, \"(800)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"800\"]], [, \"(900)(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \r\n\"$1 $2 $3 $4\", [\"900\"]], [, \"(900)(\\\\d{2,5})\", \"$1 $2\", [\"900\"]]], , [, , \"7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[136])|2(?:[02389]\\\\d|1[18]|7[27-9])|3(?:[0-38]\\\\d|7[0-369]|9[2357-9])|47\\\\d|5(?:[178]\\\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\\\d)|7(?:[27]\\\\d|8[7-9])|8(?:[23689]\\\\d|7[1-9])|9(?:[025]\\\\d|6[0-246-8]|7[0-36-9]|8[238]))\\\\d{4}\", , , , \"71123456\", , , [8]], , , [, , , , , , , , , [-1]], [, , \"30(?:0[1-9]|[15-7]\\\\d|2[047]|89)\\\\d{4}\", , , , \"30161234\", , , [8]], , , [, , , , , , , , , [-1]]], HN:[, \r\n[, , \"[237-9]\\\\d{7}\", , , , , , , [8]], [, , \"2(?:2(?:0[019]|1[1-36]|[23]\\\\d|4[04-6]|5[57]|7[013689]|8[0146-9]|9[012])|4(?:07|2[3-59]|3[13-689]|4[0-68]|5[1-35])|5(?:16|4[03-5]|5\\\\d|6[4-6]|74)|6(?:[056]\\\\d|17|3[04]|4[0-378]|[78][0-8]|9[01])|7(?:6[46-9]|7[02-9]|8[034])|8(?:79|8[0-35789]|9[1-57-9]))\\\\d{4}\", , , , \"22123456\"], [, , \"[37-9]\\\\d{7}\", , , , \"91234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"HN\", \r\n504, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], HR:[, [, , \"[1-7]\\\\d{5,8}|[89]\\\\d{6,8}\", , , , , , , [6, 7, 8, 9]], [, , \"1\\\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\\\d{6,7}\", , , , \"12345678\", , , [8, 9], [6, 7]], [, , \"9(?:01\\\\d|[1259]\\\\d{2}|7(?:[0679]\\\\d|51)|8\\\\d{1,2})\\\\d{5}\", , , , \"921234567\", , , [8, 9]], [, , \"80[01]\\\\d{4,6}\", , , , \"800123456\", , , [7, 8, 9]], [, \r\n, \"6(?:[01]\\\\d{0,2}|[459]\\\\d{2})\\\\d{4}\", , , , \"611234\", , , [6, 7, 8]], [, , , , , , , , , [-1]], [, , \"7[45]\\\\d{6}\", , , , \"74123456\", , , [8]], [, , , , , , , , , [-1]], \"HR\", 385, \"00\", \"0\", , , \"0\", , , , [[, \"(1)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"([2-5]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-5]\"], \"0$1\"], [, \"(9\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(6[01])(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"6[01]\"], \"0$1\"], [, \"([67]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[67]\"], \r\n\"0$1\"], [, \"(80[01])(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"80[01]\"], \"0$1\"], [, \"(80[01])(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"80[01]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"(?:62\\\\d?|72)\\\\d{6}\", , , , \"62123456\", , , [8, 9]], , , [, , , , , , , , , [-1]]], HT:[, [, , \"[2-489]\\\\d{7}\", , , , , , , [8]], [, , \"2(?:2\\\\d|5[1-5]|81|9[149])\\\\d{5}\", , , , \"22453300\"], [, , \"[34]\\\\d{7}\", , , , \"34101234\"], [, , \"8\\\\d{7}\", , , , \"80012345\"], [, , , , , , , , , [-1]], [, , , , , \r\n, , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:9(?:[67][0-4]|8[0-3589]|9\\\\d))\\\\d{5}\", , , , \"98901234\"], \"HT\", 509, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], HU:[, [, , \"[1-9]\\\\d{7,8}\", , , , , , , [8, 9], [6]], [, , \"(?:1\\\\d|2[2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|7[2-9]|8[2-57-9]|9[2-69])\\\\d{6}\", , , , \"12345678\", , , [8], [6]], [, , \"(?:[257]0|3[01])\\\\d{7}\", \r\n, , , \"201234567\", , , [9]], [, , \"[48]0\\\\d{6}\", , , , \"80123456\", , , [8]], [, , \"9[01]\\\\d{6}\", , , , \"90123456\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"21\\\\d{7}\", , , , \"211234567\", , , [9]], \"HU\", 36, \"00\", \"06\", , , \"06\", , , , [[, \"(1)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"($1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-9]\"], \"($1)\"]], , [, , , , , , , , , [-1]], , , [, , \"[48]0\\\\d{6}\", , , , \"80123456\", , , [8]], [, , \"38\\\\d{7}\", , , , \"381234567\", , , \r\n[9]], , , [, , , , , , , , , [-1]]], ID:[, [, , \"(?:[1-79]\\\\d{6,10}|8\\\\d{7,11})\", , , , , , , [7, 8, 9, 10, 11, 12], [5, 6]], [, , \"2(?:1(?:14\\\\d{3}|500\\\\d{3}|\\\\d{7,8})|2\\\\d{6,8}|4\\\\d{7,8})|(?:2(?:[35][1-4]|6[0-8]|7[1-6]|8\\\\d|9[1-8])|3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|6(?:19?|[25]\\\\d|3[1-69]|4[1-6])|7(?:02|[125][1-9]|[36]\\\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\\\d{5,8}\", \r\n, , , \"612345678\", , , [7, 8, 9, 10, 11], [5, 6]], [, , \"(?:2(?:1(?:3[145]|4[01]|5[1-469]|60|8[0359])|2(?:88|9[1256])|3[1-4]9|4(?:36|91)|5(?:1[349]|[2-4]9)|6[0-7]9|7(?:[1-36]9|4[39])|8[1-5]9|9[1-48]9)|3(?:19[1-3]|2[12]9|3[13]9|4(?:1[69]|39)|5[14]9|6(?:1[69]|2[89])|709)|4[13]19|5(?:1(?:19|8[39])|4[129]9|6[12]9)|6(?:19[12]|2(?:[23]9|77))|7(?:1[13]9|2[15]9|419|5(?:1[89]|29)|6[15]9|7[178]9))\\\\d{5,6}|8[1-35-9]\\\\d{7,10}\", , , , \"812345678\", , , [9, 10, 11, 12]], [, , \"177\\\\d{6,8}|800\\\\d{5,7}\", , , , \"8001234567\", \r\n, , [8, 9, 10, 11]], [, , \"809\\\\d{7}\", , , , \"8091234567\", , , [10]], [, , \"804\\\\d{7}\", , , , \"8041234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ID\", 62, \"0(?:0[1789]|10(?:00|1[67]))\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{5,8})\", \"$1 $2\", [\"2[124]|[36]1\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5,8})\", \"$1 $2\", [\"2[035-9]|[36][02-9]|[4579]\"], \"(0$1)\"], [, \"(8\\\\d{2})(\\\\d{3,4})(\\\\d{3})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \"0$1\"], [, \"(8\\\\d{2})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"8[1-35-9]\"], \r\n\"0$1\"], [, \"(1)(500)(\\\\d{3})\", \"$1 $2 $3\", [\"150\", \"1500\"], \"$1\"], [, \"(177)(\\\\d{6,8})\", \"$1 $2\", [\"177\"], \"0$1\"], [, \"(800)(\\\\d{5,7})\", \"$1 $2\", [\"800\"], \"0$1\"], [, \"(804)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"804\"], \"0$1\"], [, \"(80\\\\d)(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"80[79]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , \"8071\\\\d{6}\", , , , \"8071123456\", , , [10]], [, , \"1500\\\\d{3}|8071\\\\d{6}\", , , , \"8071123456\", , , [7, 10]], , , [, , , , , , , , , [-1]]], IE:[, [, , \"[124-9]\\\\d{6,9}\", , , \r\n, , , , [7, 8, 9, 10], [5, 6]], [, , \"1\\\\d{7,8}|2(?:1\\\\d{6,7}|3\\\\d{7}|[24-9]\\\\d{5})|4(?:0[24]\\\\d{5}|[1-469]\\\\d{7}|5\\\\d{6}|7\\\\d{5}|8[0-46-9]\\\\d{7})|5(?:0[45]\\\\d{5}|1\\\\d{6}|[23679]\\\\d{7}|8\\\\d{5})|6(?:1\\\\d{6}|[237-9]\\\\d{5}|[4-6]\\\\d{7})|7[14]\\\\d{7}|9(?:1\\\\d{6}|[04]\\\\d{7}|[35-9]\\\\d{5})\", , , , \"2212345\", , , , [5, 6]], [, , \"8(?:22\\\\d{6}|[35-9]\\\\d{7})\", , , , \"850123456\", , , [9]], [, , \"1800\\\\d{6}\", , , , \"1800123456\", , , [10]], [, , \"15(?:1[2-8]|[2-8]0|9[089])\\\\d{6}\", , , , \"1520123456\", , , [10]], \r\n[, , \"18[59]0\\\\d{6}\", , , , \"1850123456\", , , [10]], [, , \"700\\\\d{6}\", , , , \"700123456\", , , [9]], [, , \"76\\\\d{7}\", , , , \"761234567\", , , [9]], \"IE\", 353, \"00\", \"0\", , , \"0\", , , , [[, \"(1)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"2[24-9]|47|58|6[237-9]|9[35-9]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"40[24]|50[45]\"], \"(0$1)\"], [, \"(48)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"48\"], \"(0$1)\"], [, \"(818)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"818\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \r\n\"$1 $2 $3\", [\"[24-69]|7[14]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"76|8[35-9]\"], \"0$1\"], [, \"(8\\\\d)(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"8[35-9]5\"], \"0$1\"], [, \"(700)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"700\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:5|8[059])\", \"1(?:5|8[059]0)\"], \"$1\"]], , [, , , , , , , , , [-1]], , , [, , \"18[59]0\\\\d{6}\", , , , \"1850123456\", , , [10]], [, , \"818\\\\d{6}\", , , , \"818123456\", , , [9]], , , [, , \"8[35-9]5\\\\d{7}\", , , , \"8551234567\", \r\n, , [10]]], IL:[, [, , \"1\\\\d{6,11}|[2-589]\\\\d{3}(?:\\\\d{3,6})?|6\\\\d{3}|7\\\\d{6,9}\", , , , , , , [4, 7, 8, 9, 10, 11, 12]], [, , \"(?:153\\\\d{1,2}|[2-489])\\\\d{7}\", , , , \"21234567\", , , [8, 11, 12], [7]], [, , \"5(?:[0-47-9]\\\\d{2}|5(?:01|2[23]|3[2-4]|4[45]|5[5689]|6[6-8]|7[0178]|8[6-9]|9[2-9])|6[2-9]\\\\d)\\\\d{5}\", , , , \"501234567\", , , [9]], [, , \"1(?:80[019]\\\\d{3}|255)\\\\d{3}\", , , , \"1800123456\", , , [7, 10]], [, , \"1(?:212|(?:9(?:0[01]|19)|200)\\\\d{2})\\\\d{4}\", , , , \"1919123456\", , , [8, 9, 10]], [, , \r\n\"1700\\\\d{6}\", , , , \"1700123456\", , , [10]], [, , , , , , , , , [-1]], [, , \"7(?:18\\\\d|2[23]\\\\d|3[237]\\\\d|47\\\\d|6[58]\\\\d|7\\\\d{2}|8(?:2\\\\d|33|55|77|81)|9[2579]\\\\d)\\\\d{5}\", , , , \"771234567\", , , [9]], \"IL\", 972, \"0(?:0|1[2-9])\", \"0\", , , \"0\", , , , [[, \"([2-489])(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2-489]\"], \"0$1\"], [, \"([57]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]\"], \"0$1\"], [, \"(153)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"153\"]], [, \"(1)([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3-$4\", [\"1[7-9]\"]], \r\n[, \"(1255)(\\\\d{3})\", \"$1-$2\", [\"125\", \"1255\"]], [, \"(1200)(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"120\", \"1200\"]], [, \"(1212)(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"121\", \"1212\"]], [, \"(1599)(\\\\d{6})\", \"$1-$2\", [\"159\", \"1599\"]], [, \"(151)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3-$4\", [\"151\"]], [, \"(\\\\d{4})\", \"*$1\", [\"[2-689]\"]]], , [, , , , , , , , , [-1]], , , [, , \"1700\\\\d{6}|[2-689]\\\\d{3}\", , , , \"1700123456\", , , [4, 10]], [, , \"[2-689]\\\\d{3}|1599\\\\d{6}\", , , , \"1599123456\", , , [4, 10]], , , [, , \"151\\\\d{8,9}\", \r\n, , , \"15112340000\", , , [11, 12]]], IM:[, [, , \"[135789]\\\\d{6,9}\", , , , , , , [10], [6]], [, , \"1624[5-8]\\\\d{5}\", , , , \"1624756789\", , , , [6]], [, , \"7(?:4576|[59]24\\\\d|624[0-4689])\\\\d{5}\", , , , \"7924123456\"], [, , \"808162\\\\d{4}\", , , , \"8081624567\"], [, , \"(?:872299|90[0167]624)\\\\d{4}\", , , , \"9016247890\"], [, , \"8(?:4(?:40[49]06|5624\\\\d)|70624\\\\d)\\\\d{3}\", , , , \"8456247890\"], [, , \"70\\\\d{8}\", , , , \"7012345678\"], [, , \"56\\\\d{8}\", , , , \"5612345678\"], \"IM\", 44, \"00\", \"0\", , , \"0\", , , , , , \r\n[, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"3(?:08162\\\\d|3\\\\d{5}|4(?:40[49]06|5624\\\\d)|7(?:0624\\\\d|2299\\\\d))\\\\d{3}|55\\\\d{8}\", , , , \"5512345678\"], , , [, , , , , , , , , [-1]]], IN:[, [, , \"008\\\\d{9}|1\\\\d{7,12}|[2-9]\\\\d{9,10}\", , , , , , , [8, 9, 10, 11, 12, 13], [6, 7]], [, , \"(?:11|2[02]|33|4[04]|79|80)[2-7]\\\\d{7}|(?:1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6[014]|7[1257]|8[01346])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|[36][25]|22|4[28]|5[12]|[78]1|9[15])|6(?:12|[2345]1|57|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91))[2-7]\\\\d{6}|(?:(?:1(?:2[35-8]|3[346-9]|4[236-9]|[59][0235-9]|6[235-9]|7[34689]|8[257-9])|2(?:1[134689]|3[24-8]|4[2-8]|5[25689]|6[2-4679]|7[13-79]|8[2-479]|9[235-9])|3(?:01|1[79]|2[1-5]|4[25-8]|5[125689]|6[235-7]|7[157-9]|8[2-46-8])|4(?:1[14578]|2[5689]|3[2-467]|5[4-7]|6[35]|73|8[2689]|9[2389])|5(?:[16][146-9]|2[14-8]|3[1346]|4[14-69]|5[46]|7[2-4]|8[2-8]|9[246])|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|[57][2-689]|6[24-578]|8[1-6])|8(?:1[1357-9]|2[235-8]|3[03-57-9]|4[0-24-9]|5\\\\d|6[2457-9]|7[1-6]|8[1256]|9[2-4]))\\\\d|7(?:(?:1[013-9]|2[0235-9]|3[2679]|4[1-35689]|5[2-46-9]|[67][02-9]|9\\\\d)\\\\d|8(?:2[0-6]|[013-8]\\\\d)))[2-7]\\\\d{5}\", \r\n, , , \"1123456789\", , , [10], [6, 7, 8]], [, , \"(?:6(?:00[0-35]\\\\d|1279|2(?:0[0-4]|3[589]|6[0-39]|8[0-3]|9[0-6])\\\\d|3(?:0[0-39]\\\\d|5(?:0[0-6]|[1-46-9]\\\\d)|6[0-2]\\\\d|7[0156]\\\\d|8[0-3569]\\\\d|9[0-79]\\\\d)|90[01]\\\\d)|7(?:0\\\\d{3}|19[0-5]\\\\d|2(?:[0235679]\\\\d{2}|[14][017-9]\\\\d|8(?:[0-59]\\\\d|[678][089]))|3(?:[05-8]\\\\d{2}|1(?:[089]\\\\d|11|7[024-8])|2(?:[0-49][089]|[5-8]\\\\d)|3[017-9]\\\\d|4(?:[07-9]\\\\d|11)|9(?:[016-9]\\\\d|[2-5][089]))|4(?:0\\\\d{2}|1(?:[015-9]\\\\d|[23][089]|4[089])|2(?:0[089]|[1-7][089]|[89]\\\\d)|3(?:[0-8][089]|9\\\\d)|4(?:[089]\\\\d|11|7[02-8])|[56]\\\\d[089]|7(?:[089]\\\\d|11|7[02-8])|8(?:[0-24-7][089]|[389]\\\\d)|9(?:[0-6][089]|7[089]|[89]\\\\d))|5(?:[0346-8]\\\\d{2}|1(?:[07-9]\\\\d|11)|2(?:[04-9]\\\\d|[123][089])|5[017-9]\\\\d|9(?:[0-6][089]|[7-9]\\\\d))|6(?:0(?:[0-47]\\\\d|[5689][089])|(?:1[0-257-9]|[6-9]\\\\d)\\\\d|2(?:[0-4]\\\\d|[5-9][089])|3(?:[02-8][089]|[19]\\\\d)|4\\\\d[089]|5(?:[0-367][089]|[4589]\\\\d))|7(?:0(?:0[02-9]|[13-7][089]|[289]\\\\d)|[1-9]\\\\d{2})|8(?:[0-79]\\\\d{2}|8(?:[089]\\\\d|11|7[02-9]))|9(?:[089]\\\\d{2}|313|7(?:[02-8]\\\\d|9[07-9])))|8(?:0(?:[01589]\\\\d{2}|6[67]\\\\d|7(?:[02-8]\\\\d|9[04-9]))|1(?:[02-57-9]\\\\d{2}|1(?:[0-35-9]\\\\d|4[0-46-9])|6(?:[089]\\\\d|7[02-8]))|2(?:0(?:[089]\\\\d|7[02-8])|[14](?:[089]\\\\d|7[02-8])|[235-9]\\\\d{2})|3(?:[0357-9]\\\\d{2}|1(?:[089]\\\\d|7[02-8])|2(?:[09]\\\\d|7[02-8]|8[0-689])|4\\\\d{2}|6(?:[089]\\\\d|7[02-8]))|[45]\\\\d{3}|6(?:[02457-9]\\\\d{2}|1(?:[089]\\\\d|7[02-8])|3(?:[089]\\\\d|7[02-8])|6(?:[08]\\\\d|7[02-8]|9\\\\d))|7(?:0[07-9]\\\\d|[1-69]\\\\d{2}|[78](?:[089]\\\\d|7[02-8]))|8(?:[0-25-9]\\\\d{2}|3(?:[089]\\\\d|7[02-8])|4(?:[0489]\\\\d|7[02-8]))|9(?:[02-9]\\\\d{2}|1(?:[0289]\\\\d|7[02-8])))|9\\\\d{4})\\\\d{5}\", \r\n, , , \"8123456789\", , , [10]], [, , \"00800\\\\d{7}|1(?:600\\\\d{6}|80(?:0\\\\d{4,9}|3\\\\d{9}))\", , , , \"1800123456\"], [, , \"186[12]\\\\d{9}\", , , , \"1861123456789\", , , [13]], [, , \"1860\\\\d{7}\", , , , \"18603451234\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"IN\", 91, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{8})\", \"$1\", [\"561\", \"5616\", \"56161\"], \"$1\", , 1], [, \"(\\\\d{5})(\\\\d{5})\", \"$1 $2\", [\"6(?:00|12|2[03689]|3[05-9]|9[01])|7(?:[02-8]|19|9[037-9])|8(?:0[015-9]|[1-9])|9\", \"6(?:00|127|2(?:0[0134]|3[589]|6[0-39]|8[0-3]|9[0-46])|3(?:0[0-39]|5[0-46-9]|6[0-2]|7[0156]|8[1-3569]|9[0-79])|9[01])|7(?:[07]|19[0-5]|2(?:[0235-9]|[14][017-9])|3(?:[025-9]|[134][017-9])|4(?:[0-35689]|[47][017-9])|5(?:[02-46-9]|[15][017-9])|6(?:[02-9]|1[0-257-9])|8(?:[0-79]|8[0189])|9(?:[089]|31|7[02-9]))|8(?:0(?:[01589]|6[67]|7[02-9])|1(?:[0-57-9]|6[07-9])|2(?:[014][07-9]|[235-9])|3(?:[03-57-9]|[126][07-9])|[45]|6(?:[02457-9]|[136][07-9])|7(?:[078][07-9]|[1-69])|8(?:[0-25-9]|3[07-9]|4[047-9])|9(?:[02-9]|1[027-9]))|9\", \r\n\"6(?:00|1279|2(?:0[0134]|3[589]|6[0-39]|8[0-3]|9[0-46])|3(?:0[0-39]|5[0-46-9]|6[0-2]|7[0156]|8[1-3569]|9[0-79])|9[01])|7(?:0|19[0-5]|2(?:[0235-79]|[14][017-9]|8(?:[0-69]|[78][089]))|3(?:[05-8]|1(?:[0189]|7[024-9])|2(?:[0-49][089]|[5-8])|3[017-9]|4(?:[07-9]|11)|9(?:[01689]|[2-5][089]|7[0189]))|4(?:[056]|1(?:[0135-9]|[24][089])|[29](?:[0-7][089]|[89])|3(?:[0-8][089]|9)|[47](?:[089]|11|7[02-8])|8(?:[0-24-7][089]|[389]))|5(?:[0346-9]|[15][017-9]|2(?:[03-9]|[12][089]))|6(?:[0346-9]|1[0-257-9]|2(?:[0-4]|[5-9][089])|5(?:[0-367][089]|[4589]))|7(?:0(?:[02-9]|1[089])|[1-9])|8(?:[0-79]|8(?:0[0189]|11|8[013-9]|9))|9(?:[089]|313|7(?:[02-8]|9[07-9])))|8(?:0(?:[01589]|6[67]|7(?:[02-8]|9[04-9]))|1(?:[02-57-9]|1(?:[0-35-9]|4[0-46-9])|6(?:[089]|7[02-8]))|2(?:[014](?:[089]|7[02-8])|[235-9])|3(?:[03-57-9]|[16](?:[089]|7[02-8])|2(?:[09]|7[02-8]|8[0-689]))|[45]|6(?:[02457-9]|[136](?:[089]|7[02-8]))|7(?:0[07-9]|[1-69]|[78](?:[089]|7[02-8]))|8(?:[0-25-9]|3(?:[089]|7[02-8])|4(?:[0489]|7[02-8]))|9(?:[02-9]|1(?:[0289]|7[02-8])))|9\"], \r\n\"0$1\", , 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"11|2[02]|33|4[04]|79[1-9]|80[2-46]\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:2[0-249]|3[0-25]|4[145]|[59][14]|[68][1-9]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1|9[15])|6(?:12|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)\"], \r\n\"0$1\", , 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1(?:[23579]|[468][1-9])|[2-8]\"], \"0$1\", , 1], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"008\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"140\"], \"$1\", , 1], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"160\", \"1600\"], \"$1\", , 1], [, \"(\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", [\"180\", \"1800\"], \"$1\", , 1], [, \"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\", \"$1 $2 $3\", [\"180\", \"1800\"], \"$1\", , 1], [, \"(\\\\d{4})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"186\", \r\n\"1860\"], \"$1\", , 1], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"18[06]\"], \"$1\", , 1]], , [, , , , , , , , , [-1]], , , [, , \"00800\\\\d{7}|1(?:600\\\\d{6}|8(?:0(?:0\\\\d{4,9}|3\\\\d{9})|6(?:0\\\\d{7}|[12]\\\\d{9})))\", , , , \"1800123456\"], [, , \"140\\\\d{7}\", , , , \"1409305260\", , , [10]], , , [, , , , , , , , , [-1]]], IO:[, [, , \"3\\\\d{6}\", , , , , , , [7]], [, , \"37\\\\d{5}\", , , , \"3709100\"], [, , \"38\\\\d{5}\", , , , \"3801234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , \r\n[-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"IO\", 246, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], IQ:[, [, , \"[1-7]\\\\d{7,9}\", , , , , , , [8, 9, 10], [6, 7]], [, , \"1\\\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\\\d{6,7}\", , , , \"12345678\", , , [8, 9], [6, 7]], [, , \"7[3-9]\\\\d{8}\", , , , \"7912345678\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , \r\n[-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"IQ\", 964, \"00\", \"0\", , , \"0\", , , , [[, \"(1)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"([2-6]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[2-6]\"], \"0$1\"], [, \"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], IR:[, [, , \"[1-8]\\\\d{5,9}|9(?:[0-4]\\\\d{8}|9\\\\d{8})\", , , , , , , [6, 7, 10], [4, 5, \r\n8]], [, , \"(?:(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:\\\\d{8}|(?:[16]|[289]\\\\d?)\\\\d{3}))|94(?:000|11[0-7]|2\\\\d{2}|30[01]|4(?:11|40))\\\\d{5}\", , , , \"2123456789\", , , , [4, 5, 8]], [, , \"9(?:0(?:[1-35]\\\\d{2}|44\\\\d)|[13]\\\\d{3}|2[0-2]\\\\d{2}|9(?:[01]\\\\d{2}|44\\\\d|8(?:10|88)|9(?:0[013]|1[134]|21|9[89])))\\\\d{5}\", , , , \"9123456789\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:[2-6]0\\\\d|993)\\\\d{7}\", \r\n, , , \"9932123456\", , , [10]], \"IR\", 98, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-8]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4,5})\", \"$1 $2\", [\"[1-8]\"], \"0$1\"], [, \"(\\\\d{4,5})\", \"$1\", [\"96\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"9\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , \"(?:9411[1-7]|94440)\\\\d{5}\", , , , \"9411110000\", , , [10]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], IS:[, [, , \"[4-9]\\\\d{6}|38\\\\d{7}\", , , , , , , [7, 9]], [, , \"(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-245]|5[0-68]|6\\\\d|8[0-36-8])|5(?:05|[156]\\\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|87[23])\\\\d{4}\", \r\n, , , \"4101234\", , , [7]], [, , \"38[589]\\\\d{6}|(?:6(?:1[1-8]|2[0-6]|3[027-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\\\d)|7(?:5[057]|[6-8]\\\\d|9[0-3])|8(?:2[0-59]|[3469]\\\\d|5[1-9]|8[28]))\\\\d{4}\", , , , \"6111234\"], [, , \"800\\\\d{4}\", , , , \"8001234\", , , [7]], [, , \"90\\\\d{5}\", , , , \"9011234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"49\\\\d{5}\", , , , \"4921234\", , , [7]], \"IS\", 354, \"1(?:0(?:01|10|20)|100)|00\", , , , , , \"00\", , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[4-9]\"]], [, \r\n\"(3\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"809\\\\d{4}\", , , , \"8091234\", , , [7]], , , [, , \"(?:689|8(?:7[0189]|80)|95[48])\\\\d{4}\", , , , \"6891234\", , , [7]]], IT:[, [, , \"[01589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9})\", , , , , , , [6, 7, 8, 9, 10, 11]], [, , \"0(?:[26]\\\\d{4,9}|(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2346]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[34578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7})\", \r\n, , , \"0212345678\"], [, , \"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\", , , , \"3123456789\", , , [9, 10, 11]], [, , \"80(?:0\\\\d{6}|3\\\\d{3})\", , , , \"800123456\", , , [6, 9]], [, , \"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\", , , , \"899123456\", , , [6, 8, 9, 10]], [, , \"84(?:[08]\\\\d{6}|[17]\\\\d{3})\", , , , \"848123456\", , , [6, 9]], [, , \"1(?:78\\\\d|99)\\\\d{6}\", , , , \"1781234567\", , , [9, 10]], [, , \"55\\\\d{8}\", , , , \"5512345678\", , , [10]], \r\n\"IT\", 39, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[26]|55\"]], [, \"(0[26])(\\\\d{4})(\\\\d{5})\", \"$1 $2 $3\", [\"0[26]\"]], [, \"(0[26])(\\\\d{4,6})\", \"$1 $2\", [\"0[26]\"]], [, \"(0\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][0159]\"]], [, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"0[13-57-9][0159]|8(?:03|4[17]|9[245])\", \"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))\"]], [, \"(0\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"0[13-57-9][2-46-8]\"]], [, \"(0\\\\d{3})(\\\\d{2,6})\", \"$1 $2\", [\"0[13-57-9][2-46-8]\"]], \r\n[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[13]|8(?:00|4[08]|9[59])\", \"[13]|8(?:00|4[08]|9(?:5[5-9]|9))\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"894\", \"894[5-9]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"3\"]]], , [, , , , , , , , , [-1]], 1, , [, , \"848\\\\d{6}\", , , , \"848123456\", , , [9]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], JE:[, [, , \"[135789]\\\\d{6,9}\", , , , , , , [10], [6]], [, , \"1534[0-24-8]\\\\d{5}\", , , , \"1534456789\", , , , [6]], [, , \"7(?:509\\\\d|7(?:00[378]|97[7-9])|829\\\\d|937\\\\d)\\\\d{5}\", \r\n, , , \"7797712345\"], [, , \"80(?:07(?:35|81)|8901)\\\\d{4}\", , , , \"8007354567\"], [, , \"(?:871206|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\", , , , \"9018105678\"], [, , \"8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|70002)\\\\d{4}\", , , , \"8447034567\"], [, , \"701511\\\\d{4}\", , , , \"7015115678\"], [, , \"56\\\\d{8}\", , , , \"5612345678\"], \"JE\", 44, \"00\", \"0\", , , \"0\", , , , , , [, , \"76(?:0[012]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\\\d{6}\", , , , \"7640123456\"], , , [, , , , , , , , , [-1]], [, , \"3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))\\\\d{4}|55\\\\d{8}\", \r\n, , , \"5512345678\"], , , [, , , , , , , , , [-1]]], JM:[, [, , \"[589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"876(?:5(?:0[12]|1[0-468]|2[35]|63)|6(?:0[1-3579]|1[0237-9]|[23]\\\\d|40|5[06]|6[2-589]|7[05]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\\\d|9[2-468]))\\\\d{4}\", , , , \"8765123456\", , , , [7]], [, , \"876(?:2[14-9]\\\\d|[348]\\\\d{2}|5(?:0[3-9]|[2-57-9]\\\\d|6[0-24-9])|7(?:0[07]|7\\\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579]))\\\\d{4}\", , , , \"8762101234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", \r\n, , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"JM\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"876\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], JO:[, [, , \"[235-9]\\\\d{7,8}\", , , , , , , [8, 9]], [, , \"(?:2(?:6(?:2[0-35-9]|3[0-57-8]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\\\d|4[0-3]|[57][023]|6[03])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2[50]0|3(?:00|33)|4(?:0[0125]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[17-8]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[02-39]))|87(?:[02]0|7[08]|90))\\\\d{4}\", \r\n, , , \"62001234\", , , [8]], [, , \"7(?:55[0-49]|7[025-9]\\\\d|8[0-25-9]\\\\d|9[0-25-9]\\\\d)\\\\d{5}\", , , , \"790123456\", , , [9]], [, , \"80\\\\d{6}\", , , , \"80012345\", , , [8]], [, , \"900\\\\d{5}\", , , , \"90012345\", , , [8]], [, , \"85\\\\d{6}\", , , , \"85012345\", , , [8]], [, , \"70\\\\d{7}\", , , , \"700123456\", , , [9]], [, , , , , , , , , [-1]], \"JO\", 962, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2356]|87\"], \"(0$1)\"], [, \"(7)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"7[457-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \r\n\"$1 $2\", [\"70\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5,6})\", \"$1 $2\", [\"8[0158]|9\"], \"0$1\"]], , [, , \"74(?:66|77)\\\\d{5}\", , , , \"746612345\", , , [9]], , , [, , , , , , , , , [-1]], [, , \"8(?:10|8\\\\d)\\\\d{5}\", , , , \"88101234\", , , [8]], , , [, , , , , , , , , [-1]]], JP:[, [, , \"[1-9]\\\\d{8,9}|00(?:[36]\\\\d{7,14}|7\\\\d{5,7}|8\\\\d{7})\", , , , , , , [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]], [, , \"(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|2[2-9]\\\\d|[36][1-9]\\\\d|4(?:6[02-8]|[2-578]\\\\d|9[2-59])|5(?:6[1-9]|7[2-8]|[2-589]\\\\d)|7(?:3[4-9]|4[02-9]|[25-9]\\\\d)|8(?:3[2-9]|4[5-9]|5[1-9]|8[03-9]|[2679]\\\\d)|9(?:[679][1-9]|[2-58]\\\\d))\\\\d{6}\", \r\n, , , \"312345678\", , , [9]], [, , \"[7-9]0[1-9]\\\\d{7}\", , , , \"9012345678\", , , [10]], [, , \"120\\\\d{6}|800\\\\d{7}|00(?:37\\\\d{6,13}|66\\\\d{6,13}|777(?:[01]\\\\d{2}|5\\\\d{3}|8\\\\d{4})|882[1245]\\\\d{4})\", , , , \"120123456\"], [, , \"990\\\\d{6}\", , , , \"990123456\", , , [9]], [, , , , , , , , , [-1]], [, , \"60\\\\d{7}\", , , , \"601234567\", , , [9]], [, , \"50[1-9]\\\\d{7}\", , , , \"5012345678\", , , [10]], \"JP\", 81, \"010\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \r\n\"$1-$2-$3\", [\"800\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"007\", \"0077\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{3,4})\", \"$1-$2-$3\", [\"007\", \"0077\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"008\", \"0088\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\", \"$1-$2-$3\", [\"00[36]\", \"00(?:37|66)\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4,5})\", \"$1-$2-$3\", [\"00[36]\", \"00(?:37|66)\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{5})(\\\\d{5,6})\", \"$1-$2-$3\", [\"00[36]\", \"00(?:37|66)\"], \"$1\"], [, \"(\\\\d{4})(\\\\d{6})(\\\\d{6,7})\", \"$1-$2-$3\", \r\n[\"00[36]\", \"00(?:37|66)\"], \"$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[2579]0|80[1-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))\"], \r\n\"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])\", \"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:[3-6][2-9]|7[2-6]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|4[2-69]|[5-7]))\", \r\n\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6[56]))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\", \r\n\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6(?:5[25]|60)))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\"], \r\n\"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93)\", \"1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93[34])\", \"1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93(?:31|4))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \r\n\"$1-$2-$3\", [\"2(?:[34]7|[56]9|74|9[14-79])|82|993\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"3|4(?:2[09]|7[01])|6[1-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2479][1-9]\"], \"0$1\"]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1-$2-$3\", [\"(?:12|57|99)0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"800\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[2579]0|80[1-9]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])\", \r\n\"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))\", \"1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3\", [\"1(?:2[3-6]|3[3-9]|4[2-6]|5[2-8]|[68][2-7]|7[2-689]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])\", \r\n\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:[3-6][2-9]|7[2-6]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|4[2-69]|[5-7]))\", \r\n\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6[56]))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\", \r\n\"1(?:2[3-6]|3[3-9]|4[2-6]|5(?:[236-8]|[45][2-69])|[68][2-7]|7[2-689]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|6[1-9]|7[2-8]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4[02-9]|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6(?:5[25]|60)))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))\"], \r\n\"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93)\", \"1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93[34])\", \"1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93(?:31|4))\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{4})\", \r\n\"$1-$2-$3\", [\"2(?:[34]7|[56]9|74|9[14-79])|82|993\"], \"0$1\"], [, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"3|4(?:2[09]|7[01])|6[1-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"[2479][1-9]\"], \"0$1\"]], [, , \"20\\\\d{8}\", , , , \"2012345678\", , , [10]], , , [, , \"00(?:37\\\\d{6,13}|66\\\\d{6,13}|777(?:[01]\\\\d{2}|5\\\\d{3}|8\\\\d{4})|882[1245]\\\\d{4})\", , , , \"00777012\"], [, , \"570\\\\d{6}\", , , , \"570123456\", , , [9]], , , [, , , , , , , , , [-1]]], KE:[, [, , \"20\\\\d{6,7}|[4-9]\\\\d{6,9}\", , , , , , , [7, \r\n8, 9, 10]], [, , \"20\\\\d{6,7}|4(?:0\\\\d{6,7}|[136]\\\\d{7}|[245]\\\\d{5,7})|5(?:[08]\\\\d{7}|[1-79]\\\\d{5,7})|6(?:[01457-9]\\\\d{5,7}|2\\\\d{7}|6\\\\d{6,7})\", , , , \"202012345\", , , [7, 8, 9]], [, , \"7(?:[0-3679]\\\\d|4[0-9]|5[0-7]|8[0-25-9])\\\\d{6}\", , , , \"712123456\", , , [9]], [, , \"800[24-8]\\\\d{5,6}\", , , , \"800223456\", , , [9, 10]], [, , \"900[02-9]\\\\d{5}\", , , , \"900223456\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"KE\", 254, \"000\", \"0\", , , \"005|0\", , , , [[, \"(\\\\d{2})(\\\\d{5,7})\", \r\n\"$1 $2\", [\"[24-6]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"7\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], KG:[, [, , \"[235-8]\\\\d{8,9}\", , , , , , , [9, 10], [5, 6]], [, , \"(?:3(?:1(?:[256]\\\\d|3[1-9]|47)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\\\d)|5(?:22|3[4-7]|59|6\\\\d)|6(?:22|5[35-7]|6\\\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\\\d)|9(?:22|4[1-8]|6\\\\d))|6(?:09|12|2[2-4])\\\\d)\\\\d{5}\", \r\n, , , \"312123456\", , , [9], [5, 6]], [, , \"(?:20[0-35]|5[0-24-7]\\\\d|7(?:[07]\\\\d|55))\\\\d{6}\", , , , \"700123456\", , , [9]], [, , \"800\\\\d{6,7}\", , , , \"800123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"KG\", 996, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[25-7]|31[25]\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{5})\", \"$1 $2\", [\"3(?:1[36]|[2-9])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{3})\", \"$1 $2 $3 $4\", [\"8\"], \"0$1\"]], \r\n, [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], KH:[, [, , \"[1-9]\\\\d{7,9}\", , , , , , , [8, 9, 10], [6, 7]], [, , \"(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])(?:[237-9]|4[56]|5\\\\d|6\\\\d?)\\\\d{5}|23(?:4[234]|8\\\\d{2})\\\\d{4}\", , , , \"23756789\", , , [8, 9], [6, 7]], [, , \"(?:1(?:[013-79]\\\\d|[28]\\\\d{1,2})|2[3-6]48|3(?:[18]\\\\d{2}|[2-6]48)|4[2-4]48|5[2-5]48|6(?:[016-9]\\\\d|[2-5]48)|7(?:[07-9]\\\\d|[16]\\\\d{2}|[2-5]48)|8(?:[013-79]\\\\d|8\\\\d{2})|9(?:6\\\\d{2}|7\\\\d{1,2}|[0-589]\\\\d))\\\\d{5}\", \r\n, , , \"91234567\", , , [8, 9]], [, , \"1800(?:1\\\\d|2[019])\\\\d{4}\", , , , \"1800123456\", , , [10]], [, , \"1900(?:1\\\\d|2[09])\\\\d{4}\", , , , \"1900123456\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"KH\", 855, \"00[14-9]\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1\\\\d[1-9]|[2-9]\"], \"0$1\"], [, \"(1[89]00)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[89]0\", \"1[89]00\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , \r\n[-1]], , , [, , , , , , , , , [-1]]], KI:[, [, , \"[2458]\\\\d{4}|3\\\\d{4,7}|[67]\\\\d{7}\", , , , , , , [5, 8]], [, , \"(?:[24]\\\\d|3[1-9]|50|8[0-5])\\\\d{3}|(?:65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\\\d{2}|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500)))\\\\d{3}\", , , , \"31234\"], [, , \"(?:6(?:200[01]|30[01]\\\\d)|7(?:200[01]|3(?:0[0-5]\\\\d|140)))\\\\d{3}\", , , , \"72001234\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"30(?:0[01]\\\\d{2}|12(?:11|20))\\\\d{2}\", \r\n, , , \"30010000\", , , [8]], \"KI\", 686, \"00\", , , , \"0\", , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], KM:[, [, , \"[3478]\\\\d{6}\", , , , , , , [7]], [, , \"7[4-7]\\\\d{5}\", , , , \"7712345\"], [, , \"[34]\\\\d{6}\", , , , \"3212345\"], [, , , , , , , , , [-1]], [, , \"8\\\\d{6}\", , , , \"8001234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"KM\", 269, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], KN:[, [, , \"[589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"869(?:2(?:29|36)|302|4(?:6[015-9]|70))\\\\d{4}\", , , , \"8692361234\", , , , [7]], [, , \"869(?:5(?:5[6-8]|6[5-7])|66\\\\d|76[02-7])\\\\d{4}\", , , , \"8697652917\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", \r\n, , , \"5002345678\"], [, , , , , , , , , [-1]], \"KN\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"869\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], KP:[, [, , \"1\\\\d{9}|[28]\\\\d{7}\", , , , , , , [8, 10], [6, 7]], [, , \"2\\\\d{7}|85\\\\d{6}\", , , , \"21234567\", , , [8], [6, 7]], [, , \"19[123]\\\\d{7}\", , , , \"1921234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , \r\n, , [-1]], \"KP\", 850, \"00|99\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1\"], \"0$1\"], [, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"8\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , \"2(?:[0-24-9]\\\\d{2}|3(?:[0-79]\\\\d|8[02-9]))\\\\d{4}\", , , , \"23821234\", , , [8]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], KR:[, [, , \"00(?:3\\\\d{8,9}|7\\\\d{9,11})|[1-7]\\\\d{4,9}|8\\\\d{8}\", , , , , , , [5, 6, 8, 9, 10, 11, 12, 13, \r\n14], [3, 7]], [, , \"2[1-9]\\\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])(?:1\\\\d{2,3}|[1-9]\\\\d{6,7})\", , , , \"22123456\", , , [5, 6, 8, 9, 10], [3, 7]], [, , \"1[0-26-9]\\\\d{7,8}\", , , , \"1000000000\", , , [9, 10]], [, , \"(?:00(?:3(?:08|68\\\\d)|798\\\\d{1,3})|80\\\\d)\\\\d{6}\", , , , \"801234567\", , , [9, 11, 12, 13, 14]], [, , \"60[2-9]\\\\d{6}\", , , , \"602345678\", , , [9]], [, , , , , , , , , [-1]], [, , \"50\\\\d{8}\", , , , \"5012345678\", , , [10]], [, , \"70\\\\d{8}\", , , , \"7012345678\", , , [10]], \"KR\", 82, \"00(?:[1259]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\", \r\n\"0\", , , \"0(8[1-46-8]|85\\\\d{2})?\", , , , [[, \"(\\\\d{2})(\\\\d{3,4})\", \"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1(?:5[246-9]|6[046-8]|8[03579])\", \"1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))\"], \"$1\", \"0$CC-$1\"], [, \"(\\\\d{5})\", \"$1\", [\"1[016-9]1\", \"1[016-9]11\", \"1[016-9]114\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2[1-9]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60[2-9]|80\"], \r\n\"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"1[0-25-9]|(?:3[1-3]|[46][1-4]|5[1-5])[1-9]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]0\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{5})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"003\", \"0030\", \"00308\"], \"$1\", \"0$CC-$1\"], [, \"(\\\\d{5})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"00[37]\", \"00(?:36|79)\", \"00(?:36|79)8\"], \"$1\", \"0$CC-$1\"], [, \"(\\\\d{5})(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"007\", \"0079\", \"00798\"], \"$1\", \"0$CC-$1\"]], [[, \"(\\\\d{2})(\\\\d{3,4})\", \r\n\"$1-$2\", [\"(?:3[1-3]|[46][1-4]|5[1-5])1\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"1(?:5[246-9]|6[046-8]|8[03579])\", \"1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))\"], \"$1\", \"0$CC-$1\"], [, \"(\\\\d{5})\", \"$1\", [\"1[016-9]1\", \"1[016-9]11\", \"1[016-9]114\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", [\"2[1-9]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\", [\"60[2-9]|80\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1-$2-$3\", \r\n[\"1[0-25-9]|(?:3[1-3]|[46][1-4]|5[1-5])[1-9]\"], \"0$1\", \"0$CC-$1\"], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1-$2-$3\", [\"[57]0\"], \"0$1\", \"0$CC-$1\"]], [, , \"15\\\\d{7,8}\", , , , \"1523456789\", , , [9, 10]], , , [, , \"00(?:3(?:08|68\\\\d)|798\\\\d{1,3})\\\\d{6}\", , , , \"007981234567\", , , [11, 12, 13, 14]], [, , \"1(?:5(?:22|44|66|77|88|99)|6(?:00|44|6[16]|70|88)|8(?:00|33|55|77|99))\\\\d{4}\", , , , \"15441234\", , , [8]], , , [, , , , , , , , , [-1]]], KW:[, [, , \"[12569]\\\\d{6,7}\", , , , , , , [7, 8]], [, , \"(?:18\\\\d|2(?:[23]\\\\d{2}|4(?:[1-35-9]\\\\d|44)|5(?:0[034]|[2-46]\\\\d|5[1-3]|7[1-7])))\\\\d{4}\", \r\n, , , \"22345678\"], [, , \"(?:5(?:[05]\\\\d{2}|1[0-7]\\\\d|2(?:22|5[25])|6[56]\\\\d)|6(?:0[034679]\\\\d|222|5[015-9]\\\\d|6\\\\d{2}|7(?:0[013-9]|[67]\\\\d)|9(?:[069]\\\\d|3[039]))|9(?:0[09]\\\\d|11[01]|22\\\\d|4[01479]\\\\d|55\\\\d|6[0679]\\\\d|7(?:02|[1-9]\\\\d)|8[057-9]\\\\d|9\\\\d{2}))\\\\d{4}\", , , , \"50012345\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"KW\", 965, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{3,4})\", \"$1 $2\", [\"[16]|2(?:[0-35-9]|4[0-35-9])|52[25]|9[0-24-9]\"]], \r\n[, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"244|5(?:[015]|6[56])\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], KY:[, [, , \"[3589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"345(?:2(?:22|44)|444|6(?:23|38|40)|7(?:4[35-79]|6[6-9]|77)|8(?:00|1[45]|25|[48]8)|9(?:14|4[035-9]))\\\\d{4}\", , , , \"3452221234\", , , , [7]], [, , \"345(?:32[1-9]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|9(?:1[67]|2[2-9]|3[689]))\\\\d{4}\", , , , \"3453231234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", \r\n, , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}|345976\\\\d{4}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"KY\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , \"345849\\\\d{4}\", , , , \"3458491234\"], , \"345\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], KZ:[, [, , \"(?:33\\\\d|7\\\\d{2}|80[089])\\\\d{7}\", , , , , , , [10]], [, , \"33622\\\\d{5}|7(?:1(?:0(?:[23]\\\\d|4[0-3]|59|63)|1(?:[23]\\\\d|4[0-79]|59)|2(?:[23]\\\\d|59)|3(?:2\\\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\\\d|3[013-9]|5[1-9])|5(?:2\\\\d|3[1-9]|4[0-7]|59)|6(?:[234]\\\\d|5[19]|61)|72\\\\d|8(?:[27]\\\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\\\d|4[46-9]|5[3469])|2(?:2\\\\d|3[0679]|46|5[12679])|3(?:[234]\\\\d|5[139])|4(?:2\\\\d|3[1235-9]|59)|5(?:[23]\\\\d|4[01246-8]|59|61)|6(?:2\\\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\\\d|40|5[279])|8(?:[23]\\\\d|4[0-3]|59)|9(?:2\\\\d|3[124578]|59)))\\\\d{5}\", \r\n, , , \"7123456789\"], [, , \"7(?:0[012578]|47|6[02-4]|7[15-8]|85)\\\\d{7}\", , , , \"7710009998\"], [, , \"800\\\\d{7}\", , , , \"8001234567\"], [, , \"809\\\\d{7}\", , , , \"8091234567\"], [, , , , , , , , , [-1]], [, , \"808\\\\d{7}\", , , , \"8081234567\"], [, , \"751\\\\d{7}\", , , , \"7511234567\"], \"KZ\", 7, \"810\", \"8\", , , \"8\", , \"8~10\", , , , [, , , , , , , , , [-1]], , , [, , \"751\\\\d{7}\", , , , \"7511234567\"], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], LA:[, [, , \"[2-8]\\\\d{7,9}\", , , , , , , [8, 9, 10], [6]], \r\n[, , \"(?:2[13]|3(?:0\\\\d|[14])|[5-7][14]|41|8[1468])\\\\d{6}\", , , , \"21212862\", , , [8, 9], [6]], [, , \"20(?:2[2389]|5[24-689]|7[6-8]|9[125-9])\\\\d{6}\", , , , \"2023123456\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LA\", 856, \"00\", \"0\", , , \"0\", , , , [[, \"(20)(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"], \"0$1\"], [, \"([2-8]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13]|3[14]|[4-8]\"], \"0$1\"], [, \"(30)(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \r\n\"$1 $2 $3 $4\", [\"30\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], LB:[, [, , \"[13-9]\\\\d{6,7}\", , , , , , , [7, 8]], [, , \"(?:[14-6]\\\\d{2}|7(?:[2-57]\\\\d|62|8[0-7]|9[04-9])|8[02-9]\\\\d|9\\\\d{2})\\\\d{4}\", , , , \"1123456\", , , [7]], [, , \"(?:3\\\\d|7(?:[01]\\\\d|6[013-9]|8[89]|9[1-3])|81\\\\d)\\\\d{5}\", , , , \"71123456\"], [, , , , , , , , , [-1]], [, , \"9[01]\\\\d{6}\", , , , \"90123456\", , , [8]], [, , \"80\\\\d{6}\", , , , \"80123456\", , \r\n, [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LB\", 961, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"], \"0$1\"], [, \"([7-9]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7(?:[01]|6[013-9]|8[89]|9[1-3])|[89][01]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], LC:[, [, , \"[5789]\\\\d{9}\", , , , , , , [10], [7]], [, , \"758(?:4(?:30|5[0-9]|6[2-9]|8[0-2])|57[0-2]|638)\\\\d{4}\", \r\n, , , \"7584305678\", , , , [7]], [, , \"758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\\\d|3[01]))\\\\d{4}\", , , , \"7582845678\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"LC\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"758\", [, , , , , , , , , [-1]], [, , , \r\n, , , , , , [-1]], , , [, , , , , , , , , [-1]]], LI:[, [, , \"6\\\\d{8}|[23789]\\\\d{6}\", , , , , , , [7, 9]], [, , \"(?:2(?:01|1[27]|3\\\\d|6[02-578]|96)|3(?:7[0135-7]|8[048]|9[0269]))\\\\d{4}\", , , , \"2345678\", , , [7]], [, , \"6(?:5(?:09|1\\\\d|20)|6(?:0[0-6]|10|2[06-9]|39))\\\\d{5}|7(?:[37-9]\\\\d|42|56)\\\\d{4}\", , , , \"660234567\"], [, , \"80(?:02[28]|9\\\\d{2})\\\\d{2}\", , , , \"8002222\", , , [7]], [, , \"90(?:02[258]|1(?:23|3[14])|66[136])\\\\d{2}\", , , , \"9002222\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , \r\n, , [-1]], [, , , , , , , , , [-1]], \"LI\", 423, \"00\", \"0\", , , \"0|10(?:01|20|66)\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[237-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6[56]\"]], [, \"(69)(7\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"697\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"870(?:28|87)\\\\d{2}\", , , , \"8702812\", , , [7]], , , [, , \"697(?:42|56|[78]\\\\d)\\\\d{4}\", , , , \"697861234\", , , [9]]], LK:[, [, , \"[1-9]\\\\d{8}\", , , , , , , [9], [7]], [, , \"1(?:1[2-57]\\\\d{6}|973\\\\d{5})|(?:2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7]|[89]1)[2-57]\\\\d{6}\", \r\n, , , \"112345678\", , , , [7]], [, , \"7[0125-8]\\\\d{7}\", , , , \"712345678\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LK\", 94, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[1-689]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], LR:[, [, , \"2\\\\d{7,8}|[378]\\\\d{8}|4\\\\d{6}|5\\\\d{6,8}\", \r\n, , , , , , [7, 8, 9]], [, , \"(?:2\\\\d{3}|33333)\\\\d{4}\", , , , \"21234567\", , , [8, 9]], [, , \"(?:20\\\\d{2}|330\\\\d|4[67]|5(?:55)?\\\\d|77\\\\d{2}|88\\\\d{2})\\\\d{5}\", , , , \"770123456\", , , [7, 9]], [, , , , , , , , , [-1]], [, , \"332(?:02|[2-5]\\\\d)\\\\d{4}\", , , , \"332021234\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LR\", 231, \"00\", \"0\", , , \"0\", , , , [[, \"(2\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"([4-5])(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[45]\"], \r\n\"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23578]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], LS:[, [, , \"[2568]\\\\d{7}\", , , , , , , [8]], [, , \"2\\\\d{7}\", , , , \"22123456\"], [, , \"[56]\\\\d{7}\", , , , \"50123456\"], [, , \"800[256]\\\\d{4}\", , , , \"80021234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LS\", 266, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \r\n\"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], LT:[, [, , \"[3-9]\\\\d{7}\", , , , , , , [8]], [, , \"(?:3[1478]|4[124-6]|52)\\\\d{6}\", , , , \"31234567\"], [, , \"6\\\\d{7}\", , , , \"61234567\"], [, , \"800\\\\d{5}\", , , , \"80012345\"], [, , \"9(?:0[0239]|10)\\\\d{5}\", , , , \"90012345\"], [, , \"808\\\\d{5}\", , , , \"80812345\"], [, , \"700\\\\d{5}\", , , , \"70012345\"], [, , , , , , , , , [-1]], \"LT\", 370, \"00\", \"8\", , , \"[08]\", , , , [[, \"([34]\\\\d)(\\\\d{6})\", \r\n\"$1 $2\", [\"37|4(?:1|5[45]|6[2-4])\"], \"(8-$1)\", , 1], [, \"([3-6]\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"3[148]|4(?:[24]|6[09])|528|6\"], \"(8-$1)\", , 1], [, \"([7-9]\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"8 $1\", , 1], [, \"(5)(2\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"52[0-79]\"], \"(8-$1)\", , 1]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"70[67]\\\\d{5}\", , , , \"70712345\"], , , [, , , , , , , , , [-1]]], LU:[, [, , \"[24-9]\\\\d{3,10}|3(?:[0-46-9]\\\\d{2,9}|5[013-9]\\\\d{1,8})\", , , , , , , [4, 5, 6, \r\n7, 8, 9, 10, 11]], [, , \"(?:2[2-9]\\\\d{2,9}|(?:3(?:[0-46-9]\\\\d|5[013-9])|[457]\\\\d{2}|8(?:0[2-9]|[13-9]\\\\d)|9(?:0[89]|[2-579]\\\\d))\\\\d{1,8})\", , , , \"27123456\"], [, , \"6[25-79][18]\\\\d{6}\", , , , \"628123456\", , , [9]], [, , \"800\\\\d{5}\", , , , \"80012345\", , , [8]], [, , \"90[015]\\\\d{5}\", , , , \"90012345\", , , [8]], [, , \"801\\\\d{5}\", , , , \"80112345\", , , [8]], [, , , , , , , , , [-1]], [, , \"20(?:1\\\\d{5}|[2-689]\\\\d{1,7})\", , , , \"20201234\", , , [4, 5, 6, 7, 8, 9, 10]], \"LU\", 352, \"00\", , , , \"(15(?:0[06]|1[12]|35|4[04]|55|6[26]|77|88|99)\\\\d)\", \r\n, , , [[, \"(\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"[2-5]|7[1-9]|[89](?:0[2-9]|[1-9])\"], , \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[2-5]|7[1-9]|[89](?:0[2-9]|[1-9])\"], , \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"20\"], , \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4\", [\"2(?:[0367]|4[3-8])\"], , \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"20\"], , \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\", \"$1 $2 $3 $4 $5\", [\"2(?:[0367]|4[3-8])\"], \r\n, \"$CC $1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,4})\", \"$1 $2 $3 $4\", [\"2(?:[12589]|4[12])|[3-5]|7[1-9]|8(?:0[2-9]|[1-9])|9(?:0[2-46-9]|[1-9])\"], , \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"70|80[01]|90[015]\"], , \"$CC $1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"6\"], , \"$CC $1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], LV:[, [, , \"[2689]\\\\d{7}\", , , , , , , [8]], [, , \"6\\\\d{7}\", , , , \"63123456\"], [, , \r\n\"2\\\\d{7}\", , , , \"21234567\"], [, , \"80\\\\d{6}\", , , , \"80123456\"], [, , \"90\\\\d{6}\", , , , \"90123456\"], [, , \"81\\\\d{6}\", , , , \"81123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LV\", 371, \"00\", , , , , , , , [[, \"([2689]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2689]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], LY:[, [, , \"[25679]\\\\d{8}\", , , , , , , [9], [7]], [, , \"(?:2[1345]|5[1347]|6[123479]|71)\\\\d{7}\", , , , \r\n\"212345678\", , , , [7]], [, , \"9[1-6]\\\\d{7}\", , , , \"912345678\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"LY\", 218, \"00\", \"0\", , , \"0\", , , , [[, \"([25-79]\\\\d)(\\\\d{7})\", \"$1-$2\", [\"[25-79]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MA:[, [, , \"[5-9]\\\\d{8}\", , , , , , , [9]], [, , \"5(?:2(?:[015-79]\\\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])\\\\d|3(?:[0-48]\\\\d|[57][2-9]|6[2-8]|9[3-9])\\\\d|4[067]\\\\d{2}|5[03]\\\\d{2})\\\\d{4}\", \r\n, , , \"520123456\"], [, , \"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[017]))\\\\d{6}\", , , , \"650123456\"], [, , \"80\\\\d{7}\", , , , \"801234567\"], [, , \"89\\\\d{7}\", , , , \"891234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"5924[01]\\\\d{4}\", , , , \"592401234\"], \"MA\", 212, \"00\", \"0\", , , \"0\", , , , [[, \"([5-7]\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"5(?:2[015-7]|3[0-4])|[67]\"], \"0$1\"], [, \"([58]\\\\d{3})(\\\\d{5})\", \"$1-$2\", [\"5(?:2[2-489]|3[5-9]|92)|892\", \"5(?:2(?:[2-48]|9[0-7])|3(?:[5-79]|8[0-7])|924)|892\"], \r\n\"0$1\"], [, \"(5\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"5(?:29|38)\", \"5(?:29|38)[89]\"], \"0$1\"], [, \"([5]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:4[067]|5[03])\"], \"0$1\"], [, \"(8[09])(\\\\d{7})\", \"$1-$2\", [\"8(?:0|9[013-9])\"], \"0$1\"]], , [, , , , , , , , , [-1]], 1, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MC:[, [, , \"[34689]\\\\d{7,8}\", , , , , , , [8, 9]], [, , \"870\\\\d{5}|9[2-47-9]\\\\d{6}\", , , , \"99123456\", , , [8]], [, , \"3\\\\d{7}|4(?:4\\\\d|5[1-9])\\\\d{5}|6\\\\d{8}\", \r\n, , , \"612345678\"], [, , \"90\\\\d{6}\", , , , \"90123456\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MC\", 377, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[39]\"], \"$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"4\"], \"0$1\"], [, \"(6)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"6\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"8\"], \"$1\"]], , [, , , , , , , , , [-1]], , , \r\n[, , \"870\\\\d{5}\", , , , \"87012345\", , , [8]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MD:[, [, , \"[235-9]\\\\d{7}\", , , , , , , [8]], [, , \"(?:2[1-9]\\\\d|3[1-79]\\\\d|5(?:33|5[257]))\\\\d{5}\", , , , \"22212345\"], [, , \"(?:562|6\\\\d{2}|7(?:[189]\\\\d|6[07]|7[457-9]))\\\\d{5}\", , , , \"62112345\"], [, , \"800\\\\d{5}\", , , , \"80012345\"], [, , \"90[056]\\\\d{5}\", , , , \"90012345\"], [, , \"808\\\\d{5}\", , , , \"80812345\"], [, , , , , , , , , [-1]], [, , \"3[08]\\\\d{6}\", , , , \"30123456\"], \"MD\", 373, \"00\", \"0\", \r\n, , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"22|3\"], \"0$1\"], [, \"([25-7]\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"2[13-9]|[5-7]\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[89]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"803\\\\d{5}\", , , , \"80312345\"], , , [, , , , , , , , , [-1]]], ME:[, [, , \"[2-9]\\\\d{7,8}\", , , , , , , [8], [6]], [, , \"(?:20[2-8]|3(?:0[2-7]|[12][235-7]|3[24-7])|4(?:0[2-467]|1[267])|5(?:0[2467]|1[267]|2[2367]))\\\\d{5}\", , , , \"30234567\", \r\n, , , [6]], [, , \"6(?:00\\\\d|3[024]\\\\d|6[0-25]\\\\d|[7-9]\\\\d{2})\\\\d{4}\", , , , \"67622901\"], [, , \"80[0-258]\\\\d{5}\", , , , \"80080002\"], [, , \"(?:9(?:4[1568]|5[178]))\\\\d{5}\", , , , \"94515151\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"78[1-49]\\\\d{5}\", , , , \"78108780\"], \"ME\", 382, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-57-9]|6[036-9]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"77[1-9]\\\\d{5}\", , , , \"77273012\"], , , [, \r\n, , , , , , , , [-1]]], MF:[, [, , \"[56]\\\\d{8}\", , , , , , , [9]], [, , \"590(?:0[079]|13|2[79]|30|43|5[0-268]|7[79]|87)\\\\d{4}\", , , , \"590271234\"], [, , \"69(?:0\\\\d{2}|1(?:2[29]|3[0-5]))\\\\d{4}\", , , , \"690001234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MF\", 590, \"00\", \"0\", , , \"0\", , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MG:[, \r\n[, , \"[23]\\\\d{8}\", , , , , , , [9], [7]], [, , \"20(?:2\\\\d{2}|4[47]\\\\d|5[3467]\\\\d|6[279]\\\\d|7(?:2[29]|[35]\\\\d)|8[268]\\\\d|9[245]\\\\d)\\\\d{4}\", , , , \"202123456\", , , , [7]], [, , \"3[2-49]\\\\d{7}\", , , , \"321234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"22\\\\d{7}\", , , , \"221234567\"], \"MG\", 261, \"00\", \"0\", , , \"0\", , , , [[, \"([23]\\\\d)(\\\\d{2})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , \r\n, , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MH:[, [, , \"[2-6]\\\\d{6}\", , , , , , , [7]], [, , \"(?:247|528|625)\\\\d{4}\", , , , \"2471234\"], [, , \"(?:235|329|45[56]|545)\\\\d{4}\", , , , \"2351234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"635\\\\d{4}\", , , , \"6351234\"], \"MH\", 692, \"011\", \"1\", , , \"1\", , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \r\n, , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MK:[, [, , \"[2-578]\\\\d{7}\", , , , , , , [8], [6, 7]], [, , \"(?:2(?:[23]\\\\d|5[0-24578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\\\d{5}\", , , , \"22012345\", , , , [6, 7]], [, , \"7(?:[0-25-8]\\\\d{2}|3[2-4]\\\\d|421|9[23]\\\\d)\\\\d{4}\", , , , \"72345678\"], [, , \"800\\\\d{5}\", , , , \"80012345\"], [, , \"5[02-9]\\\\d{6}\", , , , \"50012345\"], [, , \"8(?:0[1-9]|[1-9]\\\\d)\\\\d{5}\", , , , \"80123456\"], [, , , , , , \r\n, , , [-1]], [, , , , , , , , , [-1]], \"MK\", 389, \"00\", \"0\", , , \"0\", , , , [[, \"(2)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"([347]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[347]\"], \"0$1\"], [, \"([58]\\\\d{2})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[58]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], ML:[, [, , \"[24-9]\\\\d{7}\", , , , , , , [8]], [, , \"(?:2(?:0(?:2\\\\d|7[0-8])|1(?:2[67]|[4-689]\\\\d))|4(?:0[0-4]|4[1-39])\\\\d)\\\\d{4}\", \r\n, , , \"20212345\"], [, , \"(?:2(?:079|17\\\\d)|50[0-4]\\\\d|[679]\\\\d{3}|8[239]\\\\d{2})\\\\d{4}\", , , , \"65012345\"], [, , \"80\\\\d{6}\", , , , \"80012345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ML\", 223, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]], [, \"(\\\\d{4})\", \"$1\", [\"67|74\"]]], [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[24-9]\"]]], [, , , , , , , , , [-1]], , , [, , \"80\\\\d{6}\", , , , \r\n\"80012345\"], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MM:[, [, , \"[178]\\\\d{5,7}|[24-6]\\\\d{5,8}|9(?:[279]\\\\d{0,2}|5|[34]\\\\d{1,2}|6(?:\\\\d{1,2})?|8(?:\\\\d{2})?)\\\\d{6}\", , , , , , , [6, 7, 8, 9, 10], [5]], [, , \"1(?:2\\\\d{1,2}|[35]\\\\d|4(?:\\\\d|2[236]|39)|6\\\\d?|[89][0-6]\\\\d)\\\\d{4}|2(?:2(?:000\\\\d{3}|\\\\d{4})|3\\\\d{4}|4(?:0\\\\d{5}|26\\\\d{4}|39\\\\d{4}|\\\\d{4})|5(?:1\\\\d{3,6}|[02-9]\\\\d{3,5})|[6-9]\\\\d{4})|4(?:2[245-8]|3(?:2(?:02)?|[346]|56?)|[46][2-6]|5[3-5])\\\\d{4}|5(?:2(?:2(?:\\\\d{1,2})?|[3-8])|3[2-68]|4(?:21?|[4-8])|5[23]|6[2-4]|7[2-8]|8[24-7]|9[2-7])\\\\d{4}|6(?:0[23]|1(?:2(?:0|4\\\\d)?|[356])|2[2-6]|3[24-6]|4(?:2(?:4\\\\d)?|[3-6])|5[2-4]|6[2-8]|7(?:[2367]|4(?:\\\\d|39)|5\\\\d?|8[145]\\\\d)|8[245]|9(?:20?|4))\\\\d{4}|7(?:[04][24-8]|1(?:20?|[3-7])|22|3[2-4]|5[2-7])\\\\d{4}|8(?:1(?:2\\\\d{1,2}|[3-689]\\\\d)|2(?:2\\\\d|3(?:\\\\d|20)|[4-8]\\\\d)|3[24]\\\\d|4[24-7]\\\\d|5[245]\\\\d|6[23]\\\\d)\\\\d{3}\", \r\n, , , \"1234567\", , , [6, 7, 8, 9], [5]], [, , \"17[01]\\\\d{4}|9(?:2(?:[0-4]|5\\\\d{2}|6[0-5]\\\\d)|3(?:[0-36]|4[069])\\\\d|4(?:0[0-4]\\\\d|[1379]\\\\d|2\\\\d{2}|4[0-589]\\\\d|5\\\\d{2}|88)|5[0-6]|6(?:1\\\\d|9\\\\d{2}|\\\\d)|7(?:3|5[0-2]|[6-9]\\\\d)\\\\d|8(?:\\\\d|9\\\\d{2})|9(?:1\\\\d|[5-7]\\\\d{2}|[089]))\\\\d{5}\", , , , \"92123456\", , , [7, 8, 9, 10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"1333\\\\d{4}\", , , , \"13331234\", , , [8]], \"MM\", 95, \"00\", \"0\", , , \"0\", , \r\n, , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"1|2[245]\"], \"0$1\"], [, \"(2)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"251\"], \"0$1\"], [, \"(\\\\d)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"16|2\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"432|67|81\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[4-8]\"], \"0$1\"], [, \"(9)(\\\\d{3})(\\\\d{4,6})\", \"$1 $2 $3\", [\"9(?:2[0-4]|[35-9]|4[137-9])\"], \"0$1\"], [, \"(9)([34]\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"9(?:3[0-36]|4[0-57-9])\"], \"0$1\"], [, \"(9)(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \r\n\"$1 $2 $3 $4\", [\"92[56]\"], \"0$1\"], [, \"(9)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"93\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MN:[, [, , \"[12]\\\\d{7,9}|[57-9]\\\\d{7}\", , , , , , , [8, 9, 10], [6, 7]], [, , \"[12](?:1\\\\d|2(?:[1-3]\\\\d?|7\\\\d)|3[2-8]\\\\d{1,2}|4[2-68]\\\\d{1,2}|5[1-4689]\\\\d{1,2})\\\\d{5}|5[0568]\\\\d{6}\", , , , \"50123456\", , , , [6, 7]], [, , \"(?:8(?:[05689]\\\\d|3[01])|9[013-9]\\\\d)\\\\d{5}\", , , , \"88123456\", \r\n, , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"7[05-8]\\\\d{6}\", , , , \"75123456\", , , [8]], \"MN\", 976, \"001\", \"0\", , , \"0\", , , , [[, \"([12]\\\\d)(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[12]1\"], \"0$1\"], [, \"([12]2\\\\d)(\\\\d{5,6})\", \"$1 $2\", [\"[12]2[1-3]\"], \"0$1\"], [, \"([12]\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[12](?:27|[3-5])\", \"[12](?:27|[3-5]\\\\d)2\"], \"0$1\"], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[57-9]\"], \"$1\"], [, \"([12]\\\\d{4})(\\\\d{4,5})\", \"$1 $2\", \r\n[\"[12](?:27|[3-5])\", \"[12](?:27|[3-5]\\\\d)[4-9]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MO:[, [, , \"[268]\\\\d{7}\", , , , , , , [8]], [, , \"(?:28[2-57-9]|8(?:11|[2-57-9]\\\\d))\\\\d{5}\", , , , \"28212345\"], [, , \"6(?:[2356]\\\\d|8[158])\\\\d{5}\", , , , \"66123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MO\", 853, \"00\", , , , , , , , \r\n[[, \"([268]\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[268]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MP:[, [, , \"[5689]\\\\d{9}\", , , , , , , [10], [7]], [, , \"670(?:2(?:3[3-7]|56|8[5-8])|32[1238]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\", , , , \"6702345678\", , , , [7]], [, , \"670(?:2(?:3[3-7]|56|8[5-8])|32[1238]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\\\d{4}\", , , , \"6702345678\", \r\n, , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"MP\", 1, \"011\", \"1\", , , \"1\", , , 1, , , [, , , , , , , , , [-1]], , \"670\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MQ:[, [, , \"[56]\\\\d{8}\", , , , , , , [9]], [, , \"596(?:0[0-7]|10|2[7-9]|3[05-9]|4[0-46-8]|[5-7]\\\\d|8[09]|9[4-8])\\\\d{4}\", \r\n, , , \"596301234\"], [, , \"69(?:6(?:[0-47-9]\\\\d|5[0-6]|6[0-4])|727)\\\\d{4}\", , , , \"696201234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MQ\", 596, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", , \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MR:[, [, , \"[2-48]\\\\d{7}\", , , , , , , [8]], [, , \"25[08]\\\\d{5}|35\\\\d{6}|45[1-7]\\\\d{5}\", \r\n, , , \"35123456\"], [, , \"[234][0-46-9]\\\\d{6}\", , , , \"22123456\"], [, , \"800\\\\d{5}\", , , , \"80012345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MR\", 222, \"00\", , , , , , , , [[, \"([2-48]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[2-48]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MS:[, [, , \"[5689]\\\\d{9}\", , , , , , , [10], [7]], [, , \"664491\\\\d{4}\", , , \r\n, \"6644912345\", , , , [7]], [, , \"66449[2-6]\\\\d{4}\", , , , \"6644923456\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"MS\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"664\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MT:[, [, , \"[2357-9]\\\\d{7}\", \r\n, , , , , , [8]], [, , \"2(?:0(?:[169]\\\\d|3[1-4])|[1-357]\\\\d{2})\\\\d{4}\", , , , \"21001234\"], [, , \"(?:7(?:210|[79]\\\\d{2})|9(?:2(?:1[01]|31)|69[67]|8(?:1[1-3]|89|97)|9\\\\d{2}))\\\\d{4}\", , , , \"96961234\"], [, , \"800[3467]\\\\d{4}\", , , , \"80071234\"], [, , \"5(?:0(?:0(?:37|43)|6\\\\d{2}|70\\\\d|9[0168]\\\\d)|[12]\\\\d0[1-5])\\\\d{3}\", , , , \"50037123\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"3550\\\\d{4}\", , , , \"35501234\"], \"MT\", 356, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]], , [, , \"7117\\\\d{4}\", \r\n, , , \"71171234\"], , , [, , , , , , , , , [-1]], [, , \"501\\\\d{5}\", , , , \"50112345\"], , , [, , , , , , , , , [-1]]], MU:[, [, , \"[2-9]\\\\d{6,7}\", , , , , , , [7, 8]], [, , \"(?:2(?:[03478]\\\\d|1[0-7]|6[1-69])|4(?:[013568]\\\\d|2[4-7])|5(?:44\\\\d|471)|6\\\\d{2}|8(?:14|3[129]))\\\\d{4}\", , , , \"2012345\"], [, , \"5(?:2[589]\\\\d|4(?:2[1-389]|[489]\\\\d|7[1-9])|7\\\\d{2}|8(?:[0-689]\\\\d|7[15-8])|9[0-8]\\\\d)\\\\d{4}\", , , , \"52512345\", , , [8]], [, , \"80[012]\\\\d{4}\", , , , \"8001234\", , , [7]], [, , \"30\\\\d{5}\", , , , \"3012345\", \r\n, , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"3(?:20|9\\\\d)\\\\d{4}\", , , , \"3201234\", , , [7]], \"MU\", 230, \"0(?:0|[2-7]0|33)\", , , , , , \"020\", , [[, \"([2-46-9]\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"[2-46-9]\"]], [, \"(5\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"5\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MV:[, [, , \"[346-8]\\\\d{6,9}|9(?:00\\\\d{7}|\\\\d{6})\", , , , , , , [7, 10]], [, , \"(?:3(?:0[0-3]|3[0-59])|6(?:[57][02468]|6[024568]|8[024689]))\\\\d{4}\", \r\n, , , \"6701234\", , , [7]], [, , \"(?:46[46]|7[2-9]\\\\d|9[14-9]\\\\d)\\\\d{4}\", , , , \"7712345\", , , [7]], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , \"900\\\\d{7}\", , , , \"9001234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MV\", 960, \"0(?:0|19)\", , , , , , \"00\", , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[3467]|9(?:0[1-9]|[1-9])\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]00\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \r\n\"4[05]0\\\\d{4}\", , , , \"4001234\", , , [7]], , , [, , , , , , , , , [-1]]], MW:[, [, , \"(?:1(?:\\\\d{2})?|[2789]\\\\d{2}|31\\\\d)\\\\d{6}\", , , , , , , [7, 9]], [, , \"(?:1[2-9]|21\\\\d{2})\\\\d{5}\", , , , \"1234567\"], [, , \"(?:111|77\\\\d|88\\\\d|99\\\\d)\\\\d{6}\", , , , \"991234567\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"31\\\\d{7}\", , , , \"310123456\", , , [9]], \"MW\", 265, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1\"], \r\n\"0$1\"], [, \"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[17-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"31\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MX:[, [, , \"[1-9]\\\\d{9,10}\", , , , , , , [10, 11], [7, 8]], [, , \"(?:33|55|81)\\\\d{8}|(?:2(?:0[01]|2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-6][1-9]|[37][1-8]|8[1-35-9]|9[2-689])|5(?:88|9[1-79])|6(?:1[2-68]|[234][1-9]|5[1-3689]|6[12457-9]|7[1-7]|8[67]|9[4-8])|7(?:[13467][1-9]|2[1-9]|5[13-9]|8[1-69]|9[17])|8(?:2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\\\d{7}\", \r\n, , , \"2221234567\", , , [10], [7, 8]], [, , \"1(?:(?:33|55|81)\\\\d{8}|(?:2(?:2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-6][1-9]|[37][1-8]|8[1-35-9]|9[2-689])|5(?:88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[12457-9]|7[1-7]|8[67]|9[4-8])|7(?:[13467][1-9]|2[1-9]|5[13-9]|8[1-69]|9[17])|8(?:2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\\\d{7})\", , , , \"12221234567\", \r\n, , [11]], [, , \"8(?:00|88)\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , \"900\\\\d{7}\", , , , \"9001234567\", , , [10]], [, , \"300\\\\d{7}\", , , , \"3001234567\", , , [10]], [, , \"500\\\\d{7}\", , , , \"5001234567\", , , [10]], [, , , , , , , , , [-1]], \"MX\", 52, \"0[09]\", \"01\", , , \"0[12]|04[45](\\\\d{10})\", \"1$1\", , , [[, \"([358]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|55|81\"], \"01 $1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]\"], \"01 $1\", , 1], [, \"(1)([358]\\\\d)(\\\\d{4})(\\\\d{4})\", \r\n\"044 $2 $3 $4\", [\"1(?:33|55|81)\"], \"$1\", , 1], [, \"(1)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"044 $2 $3 $4\", [\"1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])\"], \"$1\", , 1]], [[, \"([358]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"33|55|81\"], \"01 $1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[2467]|3[0-2457-9]|5[089]|8[02-9]|9[0-35-9]\"], \"01 $1\", , 1], [, \"(1)([358]\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1(?:33|55|81)\"]], [, \"(1)(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"1(?:[2467]|3[0-2457-9]|5[089]|8[2-9]|9[1-35-9])\"]]], \r\n[, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MY:[, [, , \"[13-9]\\\\d{7,9}\", , , , , , , [8, 9, 10], [6, 7]], [, , \"(?:3(?:2(?:0(?:11|2[0-8]|3[0-24-79]|[579]\\\\d|8[0-57-9])|1(?:0[6-9]|1[03-9]|[467]\\\\d|8[0-2]|9[13])|2(?:0[1-3]|2[2-4]|4[0-25-7]|6[0-8]|7[02-689]|8\\\\d|9[5-9])|3(?:0[0-3]|3[0-36]|8[0-35-9]|9[1-3])|6(?:0[0-5]|[139]\\\\d|8[15-8])|7(?:1\\\\d|2[0-7]|3[0-3]|42|7[0-356]|8[0-35-8])|8(?:00|4[78]|5[6-9])|93[58])|3(?:0(?:0[0-35-9]|10|5[01]|8[0-6]|9[39])|1(?:0[1-39]|10|2[02-469]|3[245]|4[0-3589]|6[0-35-9]|7[067]|8[0-57]|9[0-278])|2(?:1[3467]|2[45]|4[1-3]|5[0689]|6[04589]|7[0-3579]|8[0-489]|9[0-27])|3(?:1[7-9]|2[1-6]|4[1-689]|5[89]|6[1-3]|7\\\\d|8[125]|9[236])|6(?:[12]0|3[01]|5[0-256]|6[08]|8[45]))|4(?:0(?:09|[14]\\\\d|2[0-8]|3[12]|5[01]|65)|1(?:0[0-8]|31|4\\\\d|6[12])|2(?:17|5[0-35-9]|6[024-6]|7[0189]|8[057-9]|9\\\\d)|770|8(?:0[0-2]|1[0-3569]|2[01]))|5(?:0(?:2[0-2]|3[0-35-9])|1(?:0[1-3]|1[05]|2[0-6]|31|6[1-7]|9[1258])|270|48[0-5]|5(?:1\\\\d|2[0-6]|4[0-589]|6[125-9]|9[01])|6(?:1[1-4]|2[0-589]|3\\\\d|5[0-3])|7(?:21|40)|8(?:7[06-9]|8[025-9]|9[12]))|6(?:0(?:2[0-28]|3[24-9]|4[246-9]|5[57]|6[13-6]|7[358]|8[1247]|9[0-59])|1(?:[04][0-58]|15|2[02-8]|3[015-9]|5[016-8]|7[7-9]|8[14-9]|9[1-356])|2(?:[05]\\\\d|11|[46][1-3]|7[02-79]|8[015-7])|303|4(?:1[129]|2[01]|3[36]|6[0-2])|690|7(?:3\\\\d|89))|7(?:118|2(?:0[02]|6[01])|4(?:[59]\\\\d|8[01])|6(?:1[01]|2\\\\d|5[0-2]|6[0-69])|7(?:1[0-37-9]|[28]\\\\d|3[1-5]|7[0-3])|8(?:[04]\\\\d|3[129]|59|6[1-356]|7[02-79]|8[02-7]|90)|9(?:10|3[1-3]|4[016-9]|[56]\\\\d|7[12]|8\\\\d))|8(?:0(?:0[08]|11|2[0-7]|5[12]|6\\\\d|7[013-69]|8[0-24]|9[0-5])|100|21[0-36]|3(?:08|1\\\\d|2[0-589]|31)|408|5(?:2[0-35-79]|88)|6(?:0[0-259]|5[5-79]|6[01]|8[46-9]|9[019])|7(?:0[35-8]|2[3-7]|3\\\\d|4[0149]|5[0-2]|6[016-9]|7[5-9]|8[037]|90)|8(?:00|61|7[0-3]|8\\\\d|9[0-4])|9(?:1[1-3]|[2-5]\\\\d|6[1-4689]|8[89]|9[0-689]))|9(?:0(?:1[0-289]|2[15]|5[014-9]|7[04-68]|8[0-256])|1(?:0[0-3568]|3[0-49]|4[015]|7[0-59]|9[15])|2(?:0[0-25-7]|12|2[1-6]|3[1256]|7[14]|8\\\\d)|3[68]8|41[01]|5(?:14|2[01]|4[03-9]|6[5-79]|7[0-2569])))\\\\d|4(?:2(?:0[01]|1[07-9]|2[02-46-9]|38|4[0-28]|5[0-589]|6[0-47-9]|8[0-389]|9[0-38])\\\\d|3(?:0[5-9]|[12][034]|3[0-37]|47|5[168]|6[7-9]|7[0135-8]|8\\\\d|9[0-27-9])\\\\d|4(?:[02-9]\\\\d{2}|1(?:[02-9]\\\\d|10))|5(?:[07]\\\\d{2}|1[0-358]\\\\d|2[1246]\\\\d|3[06-9]\\\\d|4[0589]\\\\d|5[12457-9]\\\\d|6[0-689]\\\\d|8(?:[0-57-9]\\\\d|60)|9(?:[2-57-9]\\\\d|60))|6(?:0[79]|1[0-689]|2[0135-9]|[3-5]\\\\d|6[07-9]|7[23]|8[03-9]|99)\\\\d|7(?:0[0-59]\\\\d|1[04679]\\\\d|2(?:[02-9]\\\\d|10)|[37]\\\\d{2}|4(?:[0178]\\\\d|5[0-6])|5(?:[0-57-9]\\\\d|60)|6[024-689]\\\\d|8[0-79]\\\\d|9(?:[0479]\\\\d|3[01]))|8(?:1[0189]\\\\d|2[046-9]\\\\d|3[058]\\\\d|5[029]\\\\d|6(?:[0689]\\\\d|40)|8[14568]\\\\d|9[0-389]\\\\d)|9(?:0[1368]\\\\d|1[13-9]\\\\d|[27]\\\\d{2}|3(?:[0-368]\\\\d|7[0-3])|4[013-79]\\\\d|5[0-35689]\\\\d|6[0-46-9]\\\\d|8[0-24-9]\\\\d|97\\\\d))|5(?:2(?:0[13589]\\\\d|1[0-2]\\\\d|2[056]\\\\d|3(?:[067]\\\\d|2[01])|4[0-69]\\\\d|5[3-6]\\\\d|8[0-25-9]\\\\d|9[0-469]\\\\d)|3(?:[12][0-38]|3[0-37]|4[89]|5[01346-9]|[67]\\\\d|8[01589]|95)\\\\d|4(?:0[1346]\\\\d|1[02-35-9]\\\\d|2[1379]\\\\d|3[0-46-9]\\\\d|4[013689]\\\\d|[59]\\\\d{2}|6(?:[15-9]\\\\d|20)|7[036-9]\\\\d|8[015-8]\\\\d)|5(?:0[167]\\\\d|17\\\\d|2[025-9]\\\\d|3[035-7]\\\\d|4[0-35-9]\\\\d|8[13]\\\\d|9(?:[124-9]\\\\d|31))|6(?:0[89]\\\\d|1[02-46-8]\\\\d|2[0-69]\\\\d|3(?:[1-367]\\\\d|40)|4[0-689]\\\\d|5(?:[0-24-9]\\\\d|30)|6[1457-9]\\\\d|7\\\\d{2}|8[0-57-9]\\\\d|9[0-389]\\\\d)|7(?:1(?:[024679]\\\\d|80)|2[0-35-8]\\\\d|3[23]\\\\d|4[34]\\\\d|5[0-36-9]\\\\d|6[356-9]\\\\d|7\\\\d{2}|8(?:[23]\\\\d|[01]1)|9(?:[1-689]\\\\d|70))|8(?:0[145-9]\\\\d|1[0-2]\\\\d|2[09]\\\\d|3(?:[058]\\\\d|0[017])|4[016-9]\\\\d|5[02-9]\\\\d|7(?:10|2\\\\d)|8[013589]\\\\d|9[0-57-9]\\\\d)|9[23]0\\\\d)|6(?:2(?:2[1246-9]\\\\d|3[0-5]\\\\d|4[02]\\\\d|5[1-3]\\\\d|[68]\\\\d{2}|7(?:[04-8]\\\\d|10)|9[2-5]\\\\d)|3(?:1(?:[125-9]\\\\d|3[01])|3[0-7]\\\\d|5[0-478]\\\\d|79\\\\d|8[3-578]\\\\d|9[018]\\\\d)|4(?:1[015]|[2-689]\\\\d|7[1-79])\\\\d|5(?:09\\\\d|1(?:10|[2479]\\\\d)|2[1-579]\\\\d|3(?:[0-467]\\\\d|50)|4[0-24-9]\\\\d|5\\\\d{2}|60\\\\d)|6(?:0[13]\\\\d|1[0-57]\\\\d|2[03]\\\\d|3[0-478]\\\\d|4[0-8]\\\\d|5[013-689]\\\\d|6[0-467]\\\\d|[78]\\\\d{2}|9(?:[13-9]\\\\d|20))|7(?:01|2[06-9]|3[367]|5[7-9]|6\\\\d|7[0156]|8[12]|9[0-47-9])\\\\d|85[0-26]\\\\d|9(?:0[167]|10|[57]\\\\d|6[02-9]|8[013-9])\\\\d)|7(?:2(?:0[7-9]|1[016-9]|2[0-8]|[39]\\\\d|4[014]|5[0-79]|6[125-8]|7[1246-9]|8[37-9])\\\\d|3(?:0[0-5]|[35]\\\\d|40|5[0-478]|6[0-5]|8[0-26-8])\\\\d|4(?:0[07-9]|[1-35]\\\\d|6[7-9]|7[57]|8[1-68])\\\\d|5(?:0[04-9]|1[0-68]|2[0-378]|3[0-3]|5\\\\d|6[0-2]|7[018]|8[5-7]|9[05-9])\\\\d|6(?:5[0-24-9]|6[0-3568]|7[0457-9]|8[02-9]|9\\\\d)\\\\d|7(?:0[25-8]\\\\d|1(?:[01]\\\\d|20)|2[0-2]\\\\d|3[489]\\\\d|[457-9]\\\\d{2}|6(?:[0-8]\\\\d|90))|8(?:01[01]|10\\\\d|[289]\\\\d{2}|3(?:[028]\\\\d|10)|50\\\\d|6[0-357-9]\\\\d|7(?:[0235-9]\\\\d|[14]0))|9(?:0(?:[0246-8]\\\\d|10)|[1-4]\\\\d{2}|50\\\\d|6[014589]\\\\d|[7-9]0\\\\d))|8(?:2(?:2(?:[013-5]\\\\d|[28][0-8]|6[016]|7[0-589]|9[0-49])|3(?:[02][0-689]|1[1-59]|[3-7]\\\\d|8[0-389]|9[13])|4(?:0[1-3]|[1-8]\\\\d|9[1-359])|5(?:0[1-7]|[17]\\\\d|20|3[0-26-9]|4[1-9]|5[0-35]|8[0-689]|9[02367])|6(?:[147]\\\\d|2[0-25-9]|39|5[014-9]|6[1-9]|8[1-8]|9[089])|7(?:0[017-9]|1[1-356]|20|3[01457-9]|4[15]|5[0-25]|6[0-6]|70|8[0-2]|9[01378])|8(?:0[3-57-9]|[15]0|2[124-9]|3[01]|4[02-6]|6[02-578]|7\\\\d|8[25-8]|9[04-689]))|3(?:220|3(?:0[089]|10|2[0-7]|3[7-9]|4[0-48])|4(?:0[68]|1[0-478]|2[5-79]|3[024-9]|50|6\\\\d|7[0-57]|8[05]|96)|5(?:4[4578]|55|6[2-9]|70|8[459]|92))|4(?:2(?:[15]\\\\d|2[0-489]|3[124-9])|3(?:0[1-8]|[1-4]\\\\d|5[0-3]|6[1-7]|7[56]|8[0-4]|9[1-578])|4(?:05|80)|555|6(?:1[0-3]|20|3[1-4]|4[0-24-7]|5\\\\d|6[0-2]|71|8[0-47-9]|9[0-689])|7(02|1[79]|21|3[0-2468]|5[0-5]|6[0256]|7[0-8]|8[01589]|9[026-9])|8(?:0[1-9]|1[0-3568]|2[0138]|3[0-4]|4[046-9]|5[06]|6\\\\d|7[0-579]|80|9[0-8]))|5(?:2(?:0[0-26]|1\\\\d|2[0-5]|3[18]|4[0-2]|6[3-68]|70|8[025-9]|9[05-9])|3(?:10|2\\\\d|31|95)|4(?:0[1-7]|[1-4]\\\\d|5[02-6]|6[0-3]|7[0-245]|8[125]|9[1-6])|5(?:40|55)|6(?:0[1459]|1[0-8]|2[0-36-8]|3[0-35-8]|[45]\\\\d|6[0-8]|80)|7(?:1[07-9]|20|3[3-9]|4[02-4]|5[05689]|6[015-9]|7\\\\d|8[045]|9[0-6]))|6(?:2(?:01|3[12]|5[1-7]|60|8[1-6]|9[0-8])|3(?:0[0137]|[134]\\\\d|2[0-8]|[59][01]|60|[78]1)|4(?:2[2-4]|49|5[17]|6\\\\d|7[0-46-9]|8[0-689])|5(?:0[6-8]|55|8[0149]|90)|8(?:5\\\\d|[68]0)|9(?:5[12]|81))|7(?:2(?:0[189]|[12][1-9]|3[0-47]|50)|3(?:[01][1-9]|3\\\\d|4[0-245]|6[4-9]|7[237-9]|9[12])|4(?:[0-2]\\\\d|3[167-9]|[45][0-3]|6[0-8]|7[25-9]|8[0-6]|90)|5(?:0[1-9]|[89]\\\\d)|7(?:1[89]|[27]\\\\d|3[013-9]|4[0-8]|50|6[01568]|82)|8(?:[03][1-3]|1[0-28]|2[0-38]|48|5[0-4]|6[1-3]|7[124]|8[013-57-9]|9[07]))|8(?:2(?:0[13-7]|[1-9]\\\\d)|3(?:0[1-47-9]|[128]\\\\d|3[0-4]|4[1-9]|5[0-35-7]|6[0-46-9]|9[3-7])|4(?:0[1-58]|1[1-5]|[2-57-9]\\\\d|69)|5(?:1[1-35-9]|2\\\\d|3[2-8]|52)|6(?:0[2-9]|1[1-8]|[23]\\\\d|41|5[12367]|6[1-9]|7[14-9]|8[02-8]|9[05])|7(?:0[1-589]|[1-35-8]\\\\d|4[0-7]|9[0-46-9])|8(?:01|30|5[0-48]|6[13]|7\\\\d|8[013-689]|9[24-9])|9(?:0[2-4689]|1\\\\d|2[08]|3[18]|4[03]|59|6[0-36-9]|7[0-35-79]|8[1235]))|9(?:2(?:[057][1-9]|[1-3]\\\\d|4[0-8]|6[1-5]|8[015-9]|9[04-6])|300|4(?:01|36|6[1-6]|[89][12])|5(?:0[25689]|1\\\\d|2[0134]|3[1-8]|5[17]|6[0-35-9]|7[0-7]|91)|6(?:1[1-9]|2[23]|3[0-4]|6[03-9]|7[0-7])|7(?:0[1-68]|1[1-8]|2[25-9]|3[056]|4[4-9]|[5-8]\\\\d|9[0-46-9])|8(?:0[1-7]|[189]\\\\d|2[1-46]|4[1-689]|5[0-79]|6[1-9]|71)|9(?:0[1-3]|1\\\\d|2[0-35-7]|3[67]|4[12]|5[0-249]|6[5-9]|75|8[1-6])))|9(?:2(?:0[458]\\\\d|1[2-57]\\\\d|2[0-589]\\\\d|[39]\\\\d{2}|4(?:[02-9]\\\\d|10)|5(?:[024-6]\\\\d|[7-9]0)|6(?:[03-9]\\\\d|20)|7[0-26-9]\\\\d|8(?:[0-24-68]\\\\d|7[01]))|3(?:0[0-2689]\\\\d|1(?:[0235]\\\\d|1[0-2]|4[01])|2(?:0[01]|[1-57-9]\\\\d|6[0-2])|3(?:00|1[0-4]|2\\\\d)|4[05]\\\\d|5[0-3568]\\\\d|6(?:[1-357-9]\\\\d|60)|[78]0\\\\d)|4(?:0[24578]\\\\d|1[02-57-9]\\\\d|2\\\\d{2}|3(?:[0278]\\\\d|1[01]|60)|4[013579]\\\\d|5[0-8]\\\\d|6[0678]\\\\d|7[013-9]\\\\d|8[01569]\\\\d)|5(0(?:[589]\\\\d|7[01])|1\\\\d{2}|2[0159]\\\\d|3[14689]\\\\d|4[0-46-9]\\\\d|5[0-35-9]\\\\d|6[0156-8]\\\\d|7[0-35]\\\\d|8[0-7]\\\\d|9[0-3589]\\\\d)|6(?:0[269]\\\\d|[12]\\\\d{2}|3[0-57-9]\\\\d|44[0-2]|5[01379]\\\\d|6[02-9]\\\\d|7[69]\\\\d|8(?:[0-24-8]\\\\d|30)|9(?:[0-24-9]\\\\d|3[01]))|7(?:0[0136-8]|1[02-4]|2[156]|3[258]|[489]\\\\d|5[0-589]|6[024-9]|7[0-689])\\\\d|8(?:0(?:0[01]|1\\\\d)|1[3-9]\\\\d|[23]\\\\d{2}|4[0-24-689]\\\\d|5[0-689]\\\\d|6[02-9]\\\\d|7(?:[01]0|[2-4]\\\\d)|888)|9(?:00\\\\d|1[2-57-9]\\\\d|2(?:00|1[01]|[238]\\\\d)|3(?:[2-467]\\\\d|50)|4[4-9]\\\\d|5(?:[0-2457-9]\\\\d|60)|6[0156]\\\\d|7[04-9]\\\\d|8[01]\\\\d)))\\\\d{3}\", \r\n, , , \"323856789\", , , [8, 9], [6, 7]], [, , \"1(?:0(?:[23568]\\\\d|4[0-6]|7[016-9]|9[0-8])\\\\d|1(?:[1-5]\\\\d{2}|6(?:0[5-9]|[1-9]\\\\d))\\\\d|[23679][2-9]\\\\d{2}|4(?:[235-9]\\\\d{2}|400)|59\\\\d{3}|8(?:1[23]\\\\d|[236]\\\\d{2}|4(?:[06]\\\\d|7[0-4])|5[7-9]\\\\d|7[016-9]\\\\d|8(?:[01]\\\\d|[27][0-4])|9[0-8]\\\\d))\\\\d{4}\", , , , \"123456789\", , , [9, 10]], [, , \"1[378]00\\\\d{6}\", , , , \"1300123456\", , , [10]], [, , \"1600\\\\d{6}\", , , , \"1600123456\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"154(?:6(?:0\\\\d|1[0-3])|8(?:[25]1|4[0189]|7[0-4679]))\\\\d{4}\", \r\n, , , \"1546012345\", , , [10]], \"MY\", 60, \"00\", \"0\", , , \"0\", , , , [[, \"([4-79])(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"[4-79]\"], \"0$1\"], [, \"(3)(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"3\"], \"0$1\"], [, \"([18]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1-$2 $3\", [\"1[02-46-9][1-9]|8\"], \"0$1\"], [, \"(1)([36-8]00)(\\\\d{2})(\\\\d{4})\", \"$1-$2-$3-$4\", [\"1[36-8]0\", \"1[36-8]00\"]], [, \"(11)(\\\\d{4})(\\\\d{4})\", \"$1-$2 $3\", [\"11\"], \"0$1\"], [, \"(15[49])(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"15[49]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , \r\n, , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], MZ:[, [, , \"[28]\\\\d{7,8}\", , , , , , , [8, 9]], [, , \"2(?:[1346]\\\\d|5[0-2]|[78][12]|93)\\\\d{5}\", , , , \"21123456\", , , [8]], [, , \"8[2-7]\\\\d{7}\", , , , \"821234567\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"MZ\", 258, \"00\", , , , , , , , [[, \"([28]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2|8[2-7]\"]], [, \"(80\\\\d)(\\\\d{3})(\\\\d{3})\", \r\n\"$1 $2 $3\", [\"80\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], NA:[, [, , \"[68]\\\\d{7,8}\", , , , , , , [8, 9]], [, , \"6(?:1(?:17|2(?:[0189]\\\\d|[2-6]|7\\\\d?)|3(?:[01378]|2\\\\d)|4(?:[024]|10?|3[15]?)|69|7[014])|2(?:17|5(?:[0-36-8]|4\\\\d?)|69|70)|3(?:17|2(?:[0237]\\\\d?|[14-689])|34|6[289]|7[01]|81)|4(?:17|2(?:[012]|7\\\\d?)|4(?:[06]|1\\\\d?)|5(?:[01357]|[25]\\\\d?)|69|7[01])|5(?:17|2(?:[0459]|[23678]\\\\d?)|69|7[01])|6(?:17|2(?:5|6\\\\d?)|38|42|69|7[01])|7(?:17|2(?:[569]|[234]\\\\d?)|3(?:0\\\\d?|[13])|6[89]|7[01]))\\\\d{4}\", \r\n, , , \"61221234\"], [, , \"(?:60|8[125])\\\\d{7}\", , , , \"811234567\", , , [9]], [, , , , , , , , , [-1]], [, , \"8701\\\\d{5}\", , , , \"870123456\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"8(?:3\\\\d{2}|86)\\\\d{5}\", , , , \"88612345\"], \"NA\", 264, \"00\", \"0\", , , \"0\", , , , [[, \"(8\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"8[1-35]\"], \"0$1\"], [, \"(6\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"6\"], \"0$1\"], [, \"(88)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"88\"], \"0$1\"], [, \"(870)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", \r\n[\"870\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], NC:[, [, , \"[2-57-9]\\\\d{5}\", , , , , , , [6]], [, , \"(?:2[03-9]|3[0-5]|4[1-7]|88)\\\\d{4}\", , , , \"201234\"], [, , \"(?:5[0-4]|[79]\\\\d|8[0-79])\\\\d{4}\", , , , \"751234\"], [, , , , , , , , , [-1]], [, , \"36\\\\d{4}\", , , , \"366711\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NC\", 687, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1.$2.$3\", \r\n[\"[2-46-9]|5[0-4]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], NE:[, [, , \"[0289]\\\\d{7}\", , , , , , , [8]], [, , \"2(?:0(?:20|3[1-7]|4[134]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\\\d{4}\", , , , \"20201234\"], [, , \"(?:8[04589]|9\\\\d)\\\\d{6}\", , , , \"93123456\"], [, , \"08\\\\d{6}\", , , , \"08123456\"], [, , \"09\\\\d{6}\", , , , \"09123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \r\n\"NE\", 227, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"09|[289]\"]], [, \"(08)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"08\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], NF:[, [, , \"[13]\\\\d{5}\", , , , , , , [6], [5]], [, , \"(?:1(?:06|17|28|39)|3[012]\\\\d)\\\\d{3}\", , , , \"106609\", , , , [5]], [, , \"3[58]\\\\d{4}\", , , , \"381234\", , , , [5]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , \r\n, , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NF\", 672, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"1\"]], [, \"(\\\\d)(\\\\d{5})\", \"$1 $2\", [\"3\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], NG:[, [, , \"[1-6]\\\\d{5,8}|9\\\\d{5,9}|[78]\\\\d{5,13}\", , , , , , , [7, 8, 10, 11, 12, 13, 14], [5, 6]], [, , \"[12]\\\\d{6,7}|9(?:0[3-9]|[1-9]\\\\d)\\\\d{5}|(?:3\\\\d|4[023568]|5[02368]|6[02-469]|7[4-69]|8[2-9])\\\\d{6}|(?:4[47]|5[14579]|6[1578]|7[0-357])\\\\d{5,6}|(?:78|41)\\\\d{5}\", \r\n, , , \"12345678\", , , [7, 8], [5, 6]], [, , \"(?:1(?:7[34]\\\\d|8(?:04|[124579]\\\\d|8[0-3])|95\\\\d)|287[0-7]|3(?:18[1-8]|88[0-7]|9(?:8[5-9]|6[1-5]))|4(?:28[0-2]|6(?:7[1-9]|8[02-47])|88[0-2])|5(?:2(?:7[7-9]|8\\\\d)|38[1-79]|48[0-7]|68[4-7])|6(?:2(?:7[7-9]|8\\\\d)|4(?:3[7-9]|[68][129]|7[04-69]|9[1-8])|58[0-2]|98[7-9])|7(?:38[0-7]|69[1-8]|78[2-4])|8(?:28[3-9]|38[0-2]|4(?:2[12]|3[147-9]|5[346]|7[4-9]|8[014-689]|90)|58[1-8]|78[2-9]|88[5-7])|98[07]\\\\d)\\\\d{4}|(?:70(?:[1-689]\\\\d|7[0-3])|8(?:0(?:1[01]|[2-9]\\\\d)|1(?:[0-8]\\\\d|9[01]))|90[235-9]\\\\d)\\\\d{6}\", \r\n, , , \"8021234567\", , , [8, 10]], [, , \"800\\\\d{7,11}\", , , , \"80017591759\", , , [10, 11, 12, 13, 14]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NG\", 234, \"009\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[12]|9(?:0[3-9]|[1-9])\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-6]|7(?:0[1-9]|[1-79])|8[2-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"70|8[01]|90[235-9]\"], \"0$1\"], [, \"([78]00)(\\\\d{4})(\\\\d{4,5})\", \r\n\"$1 $2 $3\", [\"[78]00\"], \"0$1\"], [, \"([78]00)(\\\\d{5})(\\\\d{5,6})\", \"$1 $2 $3\", [\"[78]00\"], \"0$1\"], [, \"(78)(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"78\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"700\\\\d{7,11}\", , , , \"7001234567\", , , [10, 11, 12, 13, 14]], , , [, , , , , , , , , [-1]]], NI:[, [, , \"[125-8]\\\\d{7}\", , , , , , , [8]], [, , \"2\\\\d{7}\", , , , \"21234567\"], [, , \"(?:5(?:5[0-7]|[78]\\\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|7[5-8]\\\\d|8\\\\d{2})\\\\d{5}\", , , , \"81234567\"], \r\n[, , \"1800\\\\d{4}\", , , , \"18001234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NI\", 505, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], NL:[, [, , \"1\\\\d{4,8}|[2-7]\\\\d{8}|[89]\\\\d{6,9}\", , , , , , , [5, 6, 7, 8, 9, 10]], [, , \"(?:1(?:[035]\\\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\\\d{2}|8[478]\\\\d)\\\\d{6}\", \r\n, , , \"101234567\", , , [9]], [, , \"6[1-58]\\\\d{7}\", , , , \"612345678\", , , [9]], [, , \"800\\\\d{4,7}\", , , , \"8001234\", , , [7, 8, 9, 10]], [, , \"90[069]\\\\d{4,7}\", , , , \"9061234\", , , [7, 8, 9, 10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:6760|85\\\\d{2})\\\\d{5}\", , , , \"851234567\", , , [9]], \"NL\", 31, \"00\", \"0\", , , \"0\", , , , [[, \"([1-578]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1[035]|2[0346]|3[03568]|4[0356]|5[0358]|7|8[4578]\"], \"0$1\"], [, \"([1-5]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", \r\n[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"], \"0$1\"], [, \"(6)(\\\\d{8})\", \"$1 $2\", [\"6[0-57-9]\"], \"0$1\"], [, \"(66)(\\\\d{7})\", \"$1 $2\", [\"66\"], \"0$1\"], [, \"(14)(\\\\d{3,4})\", \"$1 $2\", [\"14\"], \"$1\"], [, \"([89]0\\\\d)(\\\\d{4,7})\", \"$1 $2\", [\"[89]0\"], \"0$1\"]], , [, , \"66\\\\d{7}\", , , , \"662345678\", , , [9]], , , [, , \"140(?:1(?:[035]|[16-8]\\\\d)|2(?:[0346]|[259]\\\\d)|3(?:[03568]|[124]\\\\d)|4(?:[0356]|[17-9]\\\\d)|5(?:[0358]|[124679]\\\\d)|7\\\\d|8[458])\", , , , \"14023\", , , [5, 6]], [, , \"140(?:1(?:[035]|[16-8]\\\\d)|2(?:[0346]|[259]\\\\d)|3(?:[03568]|[124]\\\\d)|4(?:[0356]|[17-9]\\\\d)|5(?:[0358]|[124679]\\\\d)|7\\\\d|8[458])\", \r\n, , , \"14020\", , , [5, 6]], , , [, , , , , , , , , [-1]]], NO:[, [, , \"0\\\\d{4}|[2-9]\\\\d{7}\", , , , , , , [5, 8]], [, , \"(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\\\d{6}\", , , , \"21234567\", , , [8]], [, , \"(?:4[015-8]|5[89]|87|9\\\\d)\\\\d{6}\", , , , \"40612345\", , , [8]], [, , \"80[01]\\\\d{5}\", , , , \"80012345\", , , [8]], [, , \"82[09]\\\\d{5}\", , , , \"82012345\", , , [8]], [, , \"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\", , , , \"81021234\", , , [8]], [, , \"880\\\\d{5}\", , , , \"88012345\", , , [8]], [, , \"85[0-5]\\\\d{5}\", \r\n, , , \"85012345\", , , [8]], \"NO\", 47, \"00\", , , , , , , , [[, \"([489]\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"[489]\"]], [, \"([235-7]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[235-7]\"]]], , [, , , , , , , , , [-1]], 1, , [, , , , , , , , , [-1]], [, , \"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\", , , , \"01234\"], , , [, , \"81[23]\\\\d{5}\", , , , \"81212345\", , , [8]]], NP:[, [, , \"[1-8]\\\\d{7}|9(?:[1-69]\\\\d{6,8}|7[2-6]\\\\d{5,7}|8\\\\d{8})\", , , , , , , [8, 10], [6, 7]], [, , \"(?:1[0-6]\\\\d|2[13-79][2-6]|3[135-8][2-6]|4[146-9][2-6]|5[135-7][2-6]|6[13-9][2-6]|7[15-9][2-6]|8[1-46-9][2-6]|9[1-79][2-6])\\\\d{5}\", \r\n, , , \"14567890\", , , [8], [6, 7]], [, , \"9(?:6[0-3]|7[245]|8[0-24-68])\\\\d{7}\", , , , \"9841234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NP\", 977, \"00\", \"0\", , , \"0\", , , , [[, \"(1)(\\\\d{7})\", \"$1-$2\", [\"1[2-6]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1-$2\", [\"1[01]|[2-8]|9(?:[1-69]|7[15-9])\"], \"0$1\"], [, \"(9\\\\d{2})(\\\\d{7})\", \"$1-$2\", [\"9(?:6[013]|7[245]|8)\"], \"$1\"]], , [, , , , , , , , , [-1]], , , \r\n[, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], NR:[, [, , \"[458]\\\\d{6}\", , , , , , , [7]], [, , \"(?:444|888)\\\\d{4}\", , , , \"4441234\"], [, , \"55[4-9]\\\\d{4}\", , , , \"5551234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NR\", 674, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , \r\n, , , , , , [-1]]], NU:[, [, , \"[1-5]\\\\d{3}\", , , , , , , [4]], [, , \"[34]\\\\d{3}\", , , , \"4002\"], [, , \"[125]\\\\d{3}\", , , , \"1234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"NU\", 683, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], NZ:[, [, , \"6[235-9]\\\\d{6}|[2-57-9]\\\\d{7,9}\", , , , , , , [8, 9, 10], [7]], [, , \"(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\\\d{6}|24099\\\\d{3}\", \r\n, , , \"32345678\", , , [8], [7]], [, , \"2(?:[028]\\\\d{7,8}|1\\\\d{6,8}|[79]\\\\d{7})\", , , , \"211234567\"], [, , \"508\\\\d{6,7}|80\\\\d{6,8}\", , , , \"800123456\"], [, , \"90\\\\d{6,7}\", , , , \"900123456\", , , [8, 9]], [, , , , , , , , , [-1]], [, , \"70\\\\d{7}\", , , , \"701234567\", , , [9]], [, , , , , , , , , [-1]], \"NZ\", 64, \"0(?:0|161)\", \"0\", , , \"0\", , \"00\", , [[, \"(\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1-$2 $3\", [\"240|[346]|7[2-57-9]|9[1-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"21\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\", \r\n\"$1 $2 $3\", [\"2(?:1[1-9]|[69]|7[0-35-9])|70|86\"], \"0$1\"], [, \"(2\\\\d)(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[028]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"90\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:10|74)|5|[89]0\"], \"0$1\"]], , [, , \"[28]6\\\\d{6,7}\", , , , \"26123456\", , , [8, 9]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], OM:[, [, , \"(?:5|[279]\\\\d)\\\\d{6}|800\\\\d{5,6}\", , , , , , , [7, 8, 9]], [, , \"2[2-6]\\\\d{6}\", , , , \"23123456\", \r\n, , [8]], [, , \"7[19]\\\\d{6}|9(?:0[1-9]|[1-9]\\\\d)\\\\d{5}\", , , , \"92123456\", , , [8]], [, , \"8007\\\\d{4,5}|500\\\\d{4}\", , , , \"80071234\"], [, , \"900\\\\d{5}\", , , , \"90012345\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"OM\", 968, \"00\", , , , , , , , [[, \"(2\\\\d)(\\\\d{6})\", \"$1 $2\", [\"2\"]], [, \"([79]\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[79]\"]], [, \"([58]00)(\\\\d{4,6})\", \"$1 $2\", [\"[58]00\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , \r\n[-1]], , , [, , , , , , , , , [-1]]], PA:[, [, , \"[1-9]\\\\d{6,7}\", , , , , , , [7, 8]], [, , \"(?:1(?:0\\\\d|1[479]|2[37]|3[0137]|4[147]|5[05]|[68][58]|7[0167]|9[139])|2(?:[0235-79]\\\\d|1[0-7]|4[013-9]|8[026-9])|3(?:[089]\\\\d|1[014-7]|2[0-35]|3[03]|4[0-579]|55|6[068]|7[06-8])|4(?:00|3[0-79]|4\\\\d|7[0-57-9])|5(?:[01]\\\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[036]|4[04]|5[05-9]|6[05]|7[0-24-9]|8[7-9]|90)|8(?:09|2[89]|[34]\\\\d|5[0134]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\\\d))\\\\d{4}\", \r\n, , , \"2001234\", , , [7]], [, , \"(?:1[16]1|21[89]|8(?:1[01]|7[23]))\\\\d{4}|6(?:[02-9]\\\\d|1[0-5])\\\\d{5}\", , , , \"61234567\"], [, , \"800\\\\d{4}\", , , , \"8001234\", , , [7]], [, , \"(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\\\d{4}\", , , , \"8601234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PA\", 507, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[1-57-9]\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1-$2\", [\"6\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], \r\n[, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], PE:[, [, , \"[14-9]\\\\d{7,8}\", , , , , , , [8, 9], [6, 7]], [, , \"(?:1\\\\d|4[1-4]|5[1-46]|6[1-7]|7[2-46]|8[2-4])\\\\d{6}\", , , , \"11234567\", , , [8], [6, 7]], [, , \"9\\\\d{8}\", , , , \"912345678\", , , [9]], [, , \"800\\\\d{5}\", , , , \"80012345\", , , [8]], [, , \"805\\\\d{5}\", , , , \"80512345\", , , [8]], [, , \"801\\\\d{5}\", , , , \"80112345\", , , [8]], [, , \"80[24]\\\\d{5}\", , , , \"80212345\", , , [8]], [, , , , , , , , , [-1]], \"PE\", 51, \"19(?:1[124]|77|90)00\", \r\n\"0\", \" Anexo \", , \"0\", , , , [[, \"(1)(\\\\d{7})\", \"$1 $2\", [\"1\"], \"(0$1)\"], [, \"([4-8]\\\\d)(\\\\d{6})\", \"$1 $2\", [\"[4-7]|8[2-4]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"80\"], \"(0$1)\"], [, \"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], PF:[, [, , \"4\\\\d{5,7}|8\\\\d{7}\", , , , , , , [6, 8]], [, , \"4(?:[09][45689]\\\\d|4)\\\\d{4}\", , , , \"40412345\"], [, , \"8[79]\\\\d{6}\", , , , \"87123456\", \r\n, , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PF\", 689, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"4[09]|8[79]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"44\"]]], , [, , , , , , , , , [-1]], , , [, , \"44\\\\d{4}\", , , , \"441234\", , , [6]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], PG:[, [, , \"[1-9]\\\\d{6,7}\", , , , , , , [7, 8]], [, , \"(?:3[0-2]\\\\d|4[257]\\\\d|5[34]\\\\d|64[1-9]|77(?:[0-24]\\\\d|30)|85[02-46-9]|9[78]\\\\d)\\\\d{4}\", \r\n, , , \"3123456\", , , [7]], [, , \"7(?:[0-689]\\\\d|75)\\\\d{5}\", , , , \"70123456\", , , [8]], [, , \"180\\\\d{4}\", , , , \"1801234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"2(?:0[0-47]|7[568])\\\\d{4}\", , , , \"2751234\", , , [7]], \"PG\", 675, \"140[1-3]|00\", , , , , , \"00\", , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[13-689]|27\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"20|7\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, \r\n, , , , , , , , [-1]]], PH:[, [, , \"1\\\\d{10,12}|2\\\\d{5,7}|[3-7]\\\\d{8}|8\\\\d{7,9}|9\\\\d{9}\", , , , , , , [6, 8, 9, 10, 11, 12, 13], [5, 7]], [, , \"2\\\\d{5}(?:\\\\d{2})?|(?:3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578]|8[2-8])\\\\d{7}|88(?:22\\\\d{6}|42\\\\d{4})\", , , , \"21234567\", , , [6, 8, 9, 10], [5, 7]], [, , \"(?:81[37]|9(?:0[5-9]|1[024-9]|2[0-35-9]|3[02-9]|4[235-9]|5[056]|6[5-7]|7[34-79]|89|9[4-9]))\\\\d{7}\", , , , \"9051234567\", , , [10]], [, , \"1800\\\\d{7,9}\", , , , \"180012345678\", , , [11, 12, 13]], [, , , , , \r\n, , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PH\", 63, \"00\", \"0\", , , \"0\", , , , [[, \"(2)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"(0$1)\"], [, \"(2)(\\\\d{5})\", \"$1 $2\", [\"2\"], \"(0$1)\"], [, \"(\\\\d{4})(\\\\d{4,6})\", \"$1 $2\", [\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])\", \"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"], \"(0$1)\"], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"346|4(?:27|9[35])|883\", \r\n\"3469|4(?:279|9(?:30|56))|8834\"], \"(0$1)\"], [, \"([3-8]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[3-8]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"81|9\"], \"0$1\"], [, \"(1800)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"180\", \"1800\"]], [, \"(1800)(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3 $4\", [\"180\", \"1800\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], PK:[, [, , \"1\\\\d{8}|[2-8]\\\\d{5,11}|9(?:[013-9]\\\\d{4,10}|2\\\\d(?:111\\\\d{6}|\\\\d{3,7}))\", \r\n, , , , , , [8, 9, 10, 11, 12], [6, 7]], [, , \"(?:21|42)[2-9]\\\\d{7}|(?:2[25]|4[0146-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\\\\d{6}|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8]))[2-9]\\\\d{5,6}|58[126]\\\\d{7}\", , , , \"2123456789\", , , [9, 10], [6, 7, 8]], [, , \"3(?:[014]\\\\d|2[0-5]|3[0-7]|55|64)\\\\d{7}\", , , , \"3012345678\", , , [10]], [, , \"800\\\\d{5}\", , , , \"80012345\", , , [8]], [, , \"900\\\\d{5}\", , , , \r\n\"90012345\", , , [8]], [, , , , , , , , , [-1]], [, , \"122\\\\d{6}\", , , , \"122044444\", , , [9]], [, , , , , , , , , [-1]], \"PK\", 92, \"00\", \"0\", , , \"0\", , , , [[, \"([89]00)(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"[89]00\"], \"0$1\"], [, \"(1\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"1\"], \"$1\"], [, \"(\\\\d{2})(\\\\d{7,8})\", \"$1 $2\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{6,7})\", \"$1 $2\", [\"2[349]|45|54|60|72|8[2-5]|9[2-469]\", \"(?:2[349]|45|54|60|72|8[2-5]|9[2-469])\\\\d[2-9]\"], \"(0$1)\"], \r\n[, \"(58\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"58[126]\"], \"(0$1)\"], [, \"(3\\\\d{2})(\\\\d{7})\", \"$1 $2\", [\"3\"], \"0$1\"], [, \"(\\\\d{2})(111)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)1\", \"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)11\", \"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)111\"], \"(0$1)\"], [, \"(\\\\d{3})(111)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"2[349]|45|54|60|72|8[2-5]|9[2-9]\", \"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d1\", \"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d11\", \r\n\"(?:2[349]|45|54|60|72|8[2-5]|9[2-9])\\\\d111\"], \"(0$1)\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:[1-8]|0[468])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\\\d{6}\", , , , \"21111825888\", , , [11, 12]], , , [, , , , , , , , , [-1]]], PL:[, [, , \"[1-57-9]\\\\d{6,8}|6\\\\d{5,8}\", , , , , , , [6, 7, 8, 9]], [, , \"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])(?:\\\\d{7}|19\\\\d{3})\", \r\n, , , \"123456789\", , , [7, 9]], [, , \"(?:45|5[0137]|6[069]|7[2389]|88)\\\\d{7}\", , , , \"512345678\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"70[01346-8]\\\\d{6}\", , , , \"701234567\", , , [9]], [, , \"801\\\\d{6}\", , , , \"801234567\", , , [9]], [, , , , , , , , , [-1]], [, , \"39\\\\d{7}\", , , , \"391234567\", , , [9]], \"PL\", 48, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{3})\", \"$1 $2\", [\"11[68]|64\"]], [, \"(\\\\d{5})\", \"$1\", [\"19\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3\", [\"1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]\"]], \r\n[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"64\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"26|39|45|5[0137]|6[0469]|7[02389]|8[08]\"]], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[14]|2[0-57-9]|3[2-4]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]\"]]], , [, , \"64\\\\d{4,7}\", , , , \"641234567\"], , , [, , , , , , , , , [-1]], [, , \"804\\\\d{6}\", , , , \"804123456\", , , [9]], , , [, , , , , , , , , [-1]]], PM:[, [, , \"[45]\\\\d{5}\", , , , , , , [6]], [, , \"(?:4[1-3]|50)\\\\d{4}\", , , , \"411234\"], \r\n[, , \"(?:4[02-4]|5[05])\\\\d{4}\", , , , \"551234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PM\", 508, \"00\", \"0\", , , \"0\", , , , [[, \"([45]\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"[45]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], PR:[, [, , \"[5789]\\\\d{9}\", , , , , , , [10], [7]], [, , \"(?:787|939)[2-9]\\\\d{6}\", , , , \"7872345678\", , , \r\n, [7]], [, , \"(?:787|939)[2-9]\\\\d{6}\", , , , \"7872345678\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"PR\", 1, \"011\", \"1\", , , \"1\", , , 1, , , [, , , , , , , , , [-1]], , \"787|939\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], PS:[, [, , \"1\\\\d{9}|[24589]\\\\d{7,8}\", \r\n, , , , , , [8, 9, 10], [7]], [, , \"(?:22[234789]|42[45]|82[01458]|92[369])\\\\d{5}\", , , , \"22234567\", , , [8], [7]], [, , \"5[69]\\\\d{7}\", , , , \"599123456\", , , [9]], [, , \"1800\\\\d{6}\", , , , \"1800123456\", , , [10]], [, , , , , , , , , [-1]], [, , \"1700\\\\d{6}\", , , , \"1700123456\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PS\", 970, \"00\", \"0\", , , \"0\", , , , [[, \"([2489])(2\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[2489]2\"], \"0$1\"], [, \"(5[69]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"5[69]\"], \r\n\"0$1\"], [, \"(1[78]00)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[78]0\", \"1[78]00\"], \"$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], PT:[, [, , \"[2-46-9]\\\\d{8}\", , , , , , , [9]], [, , \"2(?:[12]\\\\d|[35][1-689]|4[1-59]|6[1-35689]|7[1-9]|8[1-69]|9[1256])\\\\d{6}\", , , , \"212345678\"], [, , \"9(?:[1236]\\\\d{2}|480)\\\\d{5}\", , , , \"912345678\"], [, , \"80[02]\\\\d{6}\", , , , \"800123456\"], [, , \"6(?:0[178]|4[68])\\\\d{6}|76(?:0[1-57]|1[2-47]|2[237])\\\\d{5}\", \r\n, , , \"760123456\"], [, , \"80(?:8\\\\d|9[1579])\\\\d{5}\", , , , \"808123456\"], [, , \"884[0-4689]\\\\d{5}\", , , , \"884123456\"], [, , \"30\\\\d{7}\", , , , \"301234567\"], \"PT\", 351, \"00\", , , , , , , , [[, \"(2\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2[12]\"]], [, \"([2-46-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2[3-9]|[346-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"7(?:0(?:7\\\\d|8[17]))\\\\d{5}\", , , , \"707123456\"], , , [, , \"600\\\\d{6}\", , , , \"600110000\"]], PW:[, [, , \"[2-9]\\\\d{6}\", , , , \r\n, , , [7]], [, , \"(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\\\d{4}\", , , , \"2771234\"], [, , \"(?:6[234689]0|77\\\\d|88[0-4])\\\\d{4}\", , , , \"6201234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"PW\", 680, \"01[12]\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], PY:[, \r\n[, , \"5[0-5]\\\\d{4,7}|[2-46-9]\\\\d{5,8}\", , , , , , , [6, 7, 8, 9], [5]], [, , \"(?:[26]1|3[289]|4[124678]|7[123]|8[1236])\\\\d{5,7}|(?:2(?:2[4568]|7[15]|9[1-5])|3(?:18|3[167]|4[2357]|51)|4(?:18|2[45]|3[12]|5[13]|64|71|9[1-47])|5(?:[1-4]\\\\d|5[0234])|6(?:3[1-3]|44|7[1-4678])|7(?:17|4[0-4]|6[1-578]|75|8[0-8])|858)\\\\d{5,6}\", , , , \"212345678\", , , [7, 8, 9], [5, 6]], [, , \"9(?:51|6[129]|[78][1-6]|9[1-5])\\\\d{6}\", , , , \"961456789\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , \r\n, , , [-1]], [, , , , , , , , , [-1]], [, , \"8700[0-4]\\\\d{4}\", , , , \"870012345\", , , [9]], \"PY\", 595, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"], \"(0$1)\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3,6})\", \"$1 $2\", [\"[2-9]0\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"9[1-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"870\", \"8700\"]], [, \"(\\\\d{3})(\\\\d{4,5})\", \r\n\"$1 $2\", [\"[2-8][1-9]\"], \"(0$1)\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[2-8][1-9]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"[2-9]0\\\\d{4,7}\", , , , \"201234567\"], , , [, , , , , , , , , [-1]]], QA:[, [, , \"[2-8]\\\\d{6,7}\", , , , , , , [7, 8]], [, , \"4[04]\\\\d{6}\", , , , \"44123456\", , , [8]], [, , \"[3567]\\\\d{7}\", , , , \"33123456\", , , [8]], [, , \"800\\\\d{4}\", , , , \"8001234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \r\n[, , , , , , , , , [-1]], \"QA\", 974, \"00\", , , , , , , , [[, \"([28]\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"[28]\"]], [, \"([3-7]\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[3-7]\"]]], , [, , \"2(?:[12]\\\\d|61)\\\\d{4}\", , , , \"2123456\", , , [7]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], RE:[, [, , \"[268]\\\\d{8}\", , , , , , , [9]], [, , \"262\\\\d{6}\", , , , \"262161234\"], [, , \"69(?:2\\\\d{2}|3(?:0[0-46]|1[013]|2[0-2]|3[0139]|4[0-7]|5[05]|6[0-26]|7[0-27]|8[0-38]|9[0-479]))\\\\d{4}\", , , , \"692123456\"], \r\n[, , \"80\\\\d{7}\", , , , \"801234567\"], [, , \"89[1-37-9]\\\\d{6}\", , , , \"891123456\"], [, , \"8(?:1[019]|2[0156]|84|90)\\\\d{6}\", , , , \"810123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"RE\", 262, \"00\", \"0\", , , \"0\", , , , [[, \"([268]\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[268]\"], \"0$1\"]], , [, , , , , , , , , [-1]], 1, \"262|69|8\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], RO:[, [, , \"[23]\\\\d{5,8}|[7-9]\\\\d{8}\", , , , , , , [6, 9]], [, , \r\n\"2(?:1(?:\\\\d{7}|9\\\\d{3})|[3-6](?:\\\\d{7}|\\\\d9\\\\d{2}))|3(?:1\\\\d{4}(?:\\\\d{3})?|[3-6]\\\\d{7})\", , , , \"211234567\"], [, , \"7(?:[02-7]\\\\d{2}|1(?:[01]\\\\d|20)|8[03-8]\\\\d|99\\\\d)\\\\d{5}\", , , , \"712034567\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"90[036]\\\\d{6}\", , , , \"900123456\", , , [9]], [, , \"801\\\\d{6}\", , , , \"801123456\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"RO\", 40, \"00\", \"0\", \" int \", , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[23]1\"], \"0$1\"], \r\n[, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", [\"[23]1\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[23][3-7]|[7-9]\"], \"0$1\"], [, \"(2\\\\d{2})(\\\\d{3})\", \"$1 $2\", [\"2[3-6]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"37\\\\d{7}\", , , , \"372123456\", , , [9]], , , [, , , , , , , , , [-1]]], RS:[, [, , \"[126-9]\\\\d{4,11}|3(?:[0-79]\\\\d{3,10}|8[2-9]\\\\d{2,9})\", , , , , , , [6, 7, 8, 9, 10, 11, 12], [5]], [, , \"(?:1(?:[02-9][2-9]|1[1-9])\\\\d|2(?:[0-24-7][2-9]\\\\d|[389](?:0[2-9]|[2-9]\\\\d))|3(?:[0-8][2-9]\\\\d|9(?:[2-9]\\\\d|0[2-9])))\\\\d{3,8}\", \r\n, , , \"10234567\", , , [7, 8, 9, 10, 11, 12], [5, 6]], [, , \"6(?:[0-689]|7\\\\d)\\\\d{6,7}\", , , , \"601234567\", , , [8, 9, 10]], [, , \"800\\\\d{3,9}\", , , , \"80012345\"], [, , \"(?:90[0169]|78\\\\d)\\\\d{3,7}\", , , , \"90012345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"RS\", 381, \"00\", \"0\", , , \"0\", , , , [[, \"([23]\\\\d{2})(\\\\d{4,9})\", \"$1 $2\", [\"(?:2[389]|39)0\"], \"0$1\"], [, \"([1-3]\\\\d)(\\\\d{5,10})\", \"$1 $2\", [\"1|2(?:[0-24-7]|[389][1-9])|3(?:[0-8]|9[1-9])\"], \"0$1\"], [, \"(6\\\\d)(\\\\d{6,8})\", \r\n\"$1 $2\", [\"6\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{3,9})\", \"$1 $2\", [\"[89]\"], \"0$1\"], [, \"(7[26])(\\\\d{4,9})\", \"$1 $2\", [\"7[26]\"], \"0$1\"], [, \"(7[08]\\\\d)(\\\\d{4,9})\", \"$1 $2\", [\"7[08]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"7[06]\\\\d{4,10}\", , , , \"700123456\"], , , [, , , , , , , , , [-1]]], RU:[, [, , \"[347-9]\\\\d{9}\", , , , , , , [10]], [, , \"(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\\\d{7}\", \r\n, , , \"3011234567\"], [, , \"9\\\\d{9}\", , , , \"9123456789\"], [, , \"80[04]\\\\d{7}\", , , , \"8001234567\"], [, , \"80[39]\\\\d{7}\", , , , \"8091234567\"], [, , , , , , , , , [-1]], [, , \"808\\\\d{7}\", , , , \"8081234567\"], [, , , , , , , , , [-1]], \"RU\", 7, \"810\", \"8\", , , \"8\", , \"8~10\", , [[, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"[1-79]\"], \"$1\", , 1], [, \"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[3489]\"], \"8 ($1)\", , 1], [, \"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\", , 1]], [[, \r\n\"([3489]\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"[3489]\"], \"8 ($1)\", , 1], [, \"(7\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"8 ($1)\", , 1]], [, , , , , , , , , [-1]], 1, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], RW:[, [, , \"[027-9]\\\\d{7,8}\", , , , , , , [8, 9]], [, , \"2[258]\\\\d{7}|06\\\\d{6}\", , , , \"250123456\"], [, , \"7[238]\\\\d{7}\", , , , \"720123456\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"900\\\\d{6}\", , , , \"900123456\", \r\n, , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"RW\", 250, \"00\", \"0\", , , \"0\", , , , [[, \"(2\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"2\"]], [, \"([7-9]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[7-9]\"], \"0$1\"], [, \"(0\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"0\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SA:[, [, , \"[15]\\\\d{8}|8\\\\d{9}|92\\\\d{7}\", , , , , , , [9, 10], [7]], [, , \"1(?:1\\\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\\\d{6}\", \r\n, , , \"112345678\", , , [9], [7]], [, , \"(?:5(?:[013-689]\\\\d|7[0-36-8])|811\\\\d)\\\\d{6}\", , , , \"512345678\"], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , , , , , , , , [-1]], [, , \"92[05]\\\\d{6}\", , , , \"920012345\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SA\", 966, \"00\", \"0\", , , \"0\", , , , [[, \"(1\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1[1-467]\"], \"0$1\"], [, \"(5\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"5\"], \"0$1\"], [, \"(92\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"92\"], \"$1\"], [, \"(800)(\\\\d{3})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"800\"], \"$1\"], [, \"(811)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"811\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SB:[, [, , \"[1-9]\\\\d{4,6}\", , , , , , , [5, 7]], [, , \"(?:1[4-79]|[23]\\\\d|4[0-2]|5[03]|6[0-37])\\\\d{3}\", , , , \"40123\", , , [5]], [, , \"48\\\\d{3}|7(?:30|[46-8]\\\\d|5[025-9]|9[0-5])\\\\d{4}|8[4-9]\\\\d{5}|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8])\\\\d{4}\", , , , \"7421234\"], [, , \r\n\"1[38]\\\\d{3}\", , , , \"18123\", , , [5]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"5[12]\\\\d{3}\", , , , \"51123\", , , [5]], \"SB\", 677, \"0[01]\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"[7-9]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SC:[, [, , \"[24689]\\\\d{5,6}\", , , , , , , [7]], [, , \"4[2-46]\\\\d{5}\", , , , \"4217123\"], [, , \"2[5-8]\\\\d{5}\", , , , \"2510123\"], [, , \"8000\\\\d{3}\", \r\n, , , \"8000000\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:64\\\\d|971)\\\\d{4}\", , , , \"6412345\"], \"SC\", 248, \"0(?:[02]|10?)\", , , , , , \"00\", , [[, \"(\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[246]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SD:[, [, , \"[19]\\\\d{8}\", , , , , , , [9]], [, , \"1(?:[0-25]\\\\d|8[3567])\\\\d{6}\", , , , \"121231234\"], [, , \"9[0-3569]\\\\d{7}\", , , , \"911231234\"], \r\n[, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SD\", 249, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", , \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SE:[, [, , \"[1-35-9]\\\\d{5,11}|4\\\\d{6,8}\", , , , , , , [6, 7, 8, 9, 10, 12]], [, , \"1(?:0[1-8]\\\\d{6}|[136]\\\\d{5,7}|(?:2[0-35]|4[0-4]|5[0-25-9]|7[13-6]|[89]\\\\d)\\\\d{5,6})|2(?:[136]\\\\d{5,7}|(?:2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])\\\\d{5,6})|3(?:[356]\\\\d{5,7}|(?:0[0-4]|1\\\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])\\\\d{5,6})|4(?:[0246]\\\\d{5,7}|(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])\\\\d{5,6})|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\\\d|6[03-5]|7[013]|8[0-79]|9[01])\\\\d{5,6}|6(?:[03]\\\\d{5,7}|(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])\\\\d{5,6})|8\\\\d{6,8}|9(?:0[1-9]\\\\d{4,6}|(?:1[0-68]|2\\\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8])\\\\d{5,6})\", \r\n, , , \"8123456\", , , [7, 8, 9]], [, , \"7[02369]\\\\d{7}\", , , , \"701234567\", , , [9]], [, , \"20\\\\d{4,7}\", , , , \"20123456\", , , [6, 7, 8, 9]], [, , \"649\\\\d{6}|9(?:00|39|44)[1-8]\\\\d{3,6}\", , , , \"9001234567\", , , [7, 8, 9, 10]], [, , \"77(?:0\\\\d{3}(?:\\\\d{3})?|[1-7]\\\\d{6})\", , , , \"771234567\", , , [6, 9]], [, , \"75[1-8]\\\\d{6}\", , , , \"751234567\", , , [9]], [, , , , , , , , , [-1]], \"SE\", 46, \"00\", \"0\", , , \"0\", , , , [[, \"(8)(\\\\d{2,3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"8\"], \"0$1\"], [, \"([1-69]\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \r\n\"$1-$2 $3 $4\", [\"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90\"], \"0$1\"], [, \"([1-469]\\\\d)(\\\\d{3})(\\\\d{2})\", \"$1-$2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"], \r\n\"0$1\"], [, \"(7\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4\", [\"7\"], \"0$1\"], [, \"(77)(\\\\d{2})(\\\\d{2})\", \"$1-$2$3\", [\"77\"], \"0$1\"], [, \"(20)(\\\\d{2,3})(\\\\d{2})\", \"$1-$2 $3\", [\"20\"], \"0$1\"], [, \"(9[034]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1-$2 $3 $4\", [\"9[034]\"], \"0$1\"], [, \"(9[034]\\\\d)(\\\\d{4})\", \"$1-$2\", [\"9[034]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1-$2 $3 $4 $5\", [\"25[245]|67[3-6]\"], \"0$1\"]], [[, \"(8)(\\\\d{2,3})(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]], [, \"([1-69]\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3 $4\", [\"1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90\"]], [, \"([1-469]\\\\d)(\\\\d{3})(\\\\d{2})\", \"$1 $2 $3\", [\"[12][136]|3[356]|4[0246]|6[03]|90\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"]], [, \"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3\", [\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[0-5]|4[0-3])\"]], [, \"(7\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \r\n\"$1 $2 $3 $4\", [\"7\"]], [, \"(77)(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\", [\"77\"]], [, \"(20)(\\\\d{2,3})(\\\\d{2})\", \"$1 $2 $3\", [\"20\"]], [, \"(9[034]\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"9[034]\"]], [, \"(9[034]\\\\d)(\\\\d{4})\", \"$1 $2\", [\"9[034]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4 $5\", [\"25[245]|67[3-6]\"]]], [, , \"74[02-9]\\\\d{6}\", , , , \"740123456\", , , [9]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , \"(?:25[245]|67[3-6])\\\\d{9}\", , , , \"254123456789\", , , [12]]], \r\nSG:[, [, , \"[36]\\\\d{7}|[17-9]\\\\d{7,10}\", , , , , , , [8, 10, 11]], [, , \"6[1-9]\\\\d{6}\", , , , \"61234567\", , , [8]], [, , \"(?:8[1-8]|9[0-8])\\\\d{6}\", , , , \"81234567\", , , [8]], [, , \"1?800\\\\d{7}\", , , , \"18001234567\", , , [10, 11]], [, , \"1900\\\\d{7}\", , , , \"19001234567\", , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"3[12]\\\\d{6}\", , , , \"31234567\", , , [8]], \"SG\", 65, \"0[0-3]\\\\d\", , , , , , , , [[, \"([3689]\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[369]|8[1-9]\"]], [, \"(1[89]00)(\\\\d{3})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"1[89]0\", \"1[89]00\"]], [, \"(7000)(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"700\", \"7000\"]], [, \"(800)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"800\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"7000\\\\d{7}\", , , , \"70001234567\", , , [11]], , , [, , , , , , , , , [-1]]], SH:[, [, , \"[256]\\\\d{4}|8\\\\d{3}\", , , , , , , [4, 5]], [, , \"2(?:[0-57-9]\\\\d|6[4-9])\\\\d{2}\", , , , \"22158\"], [, , \"[56]\\\\d{4}\", , , , \"51234\", , , [5]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , \r\n, , , , [-1]], [, , , , , , , , , [-1]], [, , \"262\\\\d{2}\", , , , \"26212\", , , [5]], \"SH\", 290, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], 1, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SI:[, [, , \"[1-7]\\\\d{6,7}|[89]\\\\d{4,7}\", , , , , , , [5, 6, 7, 8]], [, , \"(?:1\\\\d|[25][2-8]|3[24-8]|4[24-8]|7[3-8])\\\\d{6}\", , , , \"11234567\", , , [8], [7]], [, , \"(?:[37][01]\\\\d|4[0139]\\\\d|51\\\\d|6(?:[48]\\\\d|5[15-7]|9[69]))\\\\d{5}\", , , , \"31234567\", , , [8]], [, , \"80\\\\d{4,6}\", \r\n, , , \"80123456\", , , [6, 7, 8]], [, , \"90\\\\d{4,6}|89[1-3]\\\\d{2,5}\", , , , \"90123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"(?:59|8[1-3])\\\\d{6}\", , , , \"59012345\", , , [8]], \"SI\", 386, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[12]|[34][24-8]|5[2-8]|7[3-8]\"], \"(0$1)\"], [, \"([3-7]\\\\d)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[37][01]|4[0139]|51|6\"], \"0$1\"], [, \"([89][09])(\\\\d{3,6})\", \"$1 $2\", [\"[89][09]\"], \"0$1\"], [, \"([58]\\\\d{2})(\\\\d{5})\", \"$1 $2\", \r\n[\"59|8[1-3]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SJ:[, [, , \"0\\\\d{4}|[45789]\\\\d{7}\", , , , , , , [5, 8]], [, , \"79\\\\d{6}\", , , , \"79123456\", , , [8]], [, , \"(?:4[015-8]|5[89]|9\\\\d)\\\\d{6}\", , , , \"41234567\", , , [8]], [, , \"80[01]\\\\d{5}\", , , , \"80012345\", , , [8]], [, , \"82[09]\\\\d{5}\", , , , \"82012345\", , , [8]], [, , \"810(?:0[0-6]|[2-8]\\\\d)\\\\d{3}\", , , , \"81021234\", , , [8]], [, , \"880\\\\d{5}\", , , , \"88012345\", \r\n, , [8]], [, , \"85[0-5]\\\\d{5}\", , , , \"85012345\", , , [8]], \"SJ\", 47, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"0\\\\d{4}|81(?:0(?:0[7-9]|1\\\\d)|5\\\\d{2})\\\\d{3}\", , , , \"01234\"], , , [, , \"81[23]\\\\d{5}\", , , , \"81212345\", , , [8]]], SK:[, [, , \"(?:[2-68]\\\\d{5,8}|9\\\\d{6,8})\", , , , , , , [6, 7, 9]], [, , \"2(?:1(?:6\\\\d{3,4}|7\\\\d{3})|[2-9]\\\\d{7})|[3-5][1-8](?:1(?:6\\\\d{2,3}|7\\\\d{3})|\\\\d{7})\", , , , \"221234567\"], [, , \"9(?:0(?:[1-8]\\\\d|9[1-9])|(?:1[0-24-9]|[45]\\\\d)\\\\d)\\\\d{5}\", \r\n, , , \"912123456\", , , [9]], [, , \"800\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"9(?:[78]\\\\d{7}|00\\\\d{6})\", , , , \"900123456\", , , [9]], [, , \"8[5-9]\\\\d{7}\", , , , \"850123456\", , , [9]], [, , , , , , , , , [-1]], [, , \"6(?:02|5[0-4]|9[0-6])\\\\d{6}\", , , , \"690123456\", , , [9]], \"SK\", 421, \"00\", \"0\", , , \"0\", , , , [[, \"(2)(1[67])(\\\\d{3,4})\", \"$1 $2 $3\", [\"21[67]\"], \"0$1\"], [, \"([3-5]\\\\d)(\\\\d{2})(\\\\d{2,3})\", \"$1 $2 $3\", [\"[3-5]\"], \"0$1\"], [, \"(2)(\\\\d{3})(\\\\d{3})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"2\"], \"0$1\"], \r\n[, \"([3-5]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1/$2 $3 $4\", [\"[3-5]\"], \"0$1\"], [, \"([689]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[689]\"], \"0$1\"], [, \"(9090)(\\\\d{3})\", \"$1 $2\", [\"909\", \"9090\"], \"0$1\"]], , [, , \"9090\\\\d{3}\", , , , \"9090123\", , , [7]], , , [, , \"(?:602|8(?:00|[5-9]\\\\d)|9(?:00|[78]\\\\d))\\\\d{6}|9090\\\\d{3}\", , , , \"800123456\", , , [7, 9]], [, , \"96\\\\d{7}\", , , , \"961234567\", , , [9]], , , [, , , , , , , , , [-1]]], SL:[, [, , \"[2-9]\\\\d{7}\", , , , , , , [8], [6]], [, , \"[235]2[2-4][2-9]\\\\d{4}\", \r\n, , , \"22221234\", , , , [6]], [, , \"(?:2[15]|3[03-5]|4[04]|5[05]|66|7[5-9]|8[08]|99)\\\\d{6}\", , , , \"25123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SL\", 232, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", , \"(0$1)\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SM:[, [, , \"[05-7]\\\\d{7,9}\", , , , , , , [8, 10], [6]], [, , \r\n\"0549(?:8[0157-9]|9\\\\d)\\\\d{4}\", , , , \"0549886377\", , , [10], [6]], [, , \"6[16]\\\\d{6}\", , , , \"66661212\", , , [8]], [, , , , , , , , , [-1]], [, , \"7[178]\\\\d{6}\", , , , \"71123456\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"5[158]\\\\d{6}\", , , , \"58001110\", , , [8]], \"SM\", 378, \"00\", , , , \"([89]\\\\d{5})\", \"0549$1\", , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [, \"(0549)(\\\\d{6})\", \"$1 $2\", [\"054\", \"0549\"]], [, \"(\\\\d{6})\", \"0549 $1\", [\"[89]\"]]], [[, \r\n\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[5-7]\"]], [, \"(0549)(\\\\d{6})\", \"($1) $2\", [\"054\", \"0549\"]], [, \"(\\\\d{6})\", \"(0549) $1\", [\"[89]\"]]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SN:[, [, , \"[3789]\\\\d{8}\", , , , , , , [9]], [, , \"3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\\\d{5}\", , , , \"301012345\"], [, , \"7(?:[06-8]\\\\d|21|90)\\\\d{6}\", , , , \"701234567\"], [, , \"800\\\\d{6}\", , , , \"800123456\"], [, , \"88[4689]\\\\d{6}\", \r\n, , , \"884123456\"], [, , \"81[02468]\\\\d{6}\", , , , \"810123456\"], [, , , , , , , , , [-1]], [, , \"39[01]\\\\d{6}|3392\\\\d{5}|93330\\\\d{4}\", , , , \"933301234\"], \"SN\", 221, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[379]\"]], [, \"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SO:[, [, , \"[1-9]\\\\d{5,8}\", , , , , , , [6, 7, 8, 9]], [, , \"(?:1\\\\d{1,2}|2[0-79]\\\\d|3[0-46-8]?\\\\d|4[0-7]?\\\\d|59\\\\d|8[125])\\\\d{4}\", \r\n, , , \"4012345\", , , [6, 7]], [, , \"(?:15\\\\d|2(?:4\\\\d|8)|3[59]\\\\d{2}|4[89]\\\\d{2}|6[1-9]?\\\\d{2}|7(?:[1-8]\\\\d|9\\\\d{1,2})|8[08]\\\\d{2}|9(?:0[67]|[2-9])\\\\d)\\\\d{5}\", , , , \"71123456\", , , [7, 8, 9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SO\", 252, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{6})\", \"$1\", [\"[134]\"]], [, \"(\\\\d)(\\\\d{6})\", \"$1 $2\", [\"[13-5]|2[0-79]\"]], [, \"(\\\\d)(\\\\d{7})\", \"$1 $2\", [\"24|[67]\"]], [, \"(\\\\d{2})(\\\\d{4})\", \r\n\"$1 $2\", [\"8[125]\"]], [, \"(\\\\d{2})(\\\\d{5,7})\", \"$1 $2\", [\"15|28|6[1-35-9]|799|9[2-9]\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"3[59]|4[89]|6[24-6]|79|8[08]|90\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SR:[, [, , \"[2-8]\\\\d{5,6}\", , , , , , , [6, 7]], [, , \"(?:2[1-3]|3[0-7]|4\\\\d|5[2-58]|68\\\\d)\\\\d{4}\", , , , \"211234\"], [, , \"(?:7[124-7]|8[125-9])\\\\d{5}\", , , , \"7412345\", , , [7]], [, , , , , , , , , [-1]], [, , , , \r\n, , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"56\\\\d{4}\", , , , \"561234\", , , [6]], \"SR\", 597, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{3})\", \"$1-$2\", [\"[2-4]|5[2-58]\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1-$2-$3\", [\"56\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", [\"[6-8]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SS:[, [, , \"[19]\\\\d{8}\", , , , , , , [9]], [, , \"18\\\\d{7}\", , , , \"181234567\"], [, , \"(?:12|9[1257])\\\\d{7}\", \r\n, , , \"977123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SS\", 211, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", , \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], ST:[, [, , \"[29]\\\\d{6}\", , , , , , , [7]], [, , \"22\\\\d{5}\", , , , \"2221234\"], [, , \"9(?:0(?:0[5-9]|[1-9]\\\\d)|[89]\\\\d{2})\\\\d{3}\", , , , \"9812345\"], \r\n[, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ST\", 239, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SV:[, [, , \"[267]\\\\d{7}|[89]\\\\d{6}(?:\\\\d{4})?\", , , , , , , [7, 8, 11]], [, , \"2[1-6]\\\\d{6}\", , , , \"21234567\", , , [8]], [, , \"[67]\\\\d{7}\", , , , \"70123456\", , , [8]], [, , \"800\\\\d{4}(?:\\\\d{4})?\", \r\n, , , \"8001234\", , , [7, 11]], [, , \"900\\\\d{4}(?:\\\\d{4})?\", , , , \"9001234\", , , [7, 11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SV\", 503, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[267]\"]], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SX:[, [, , \"[5789]\\\\d{9}\", , , , , , , [10], \r\n[7]], [, , \"7215(?:4[2-8]|8[239]|9[056])\\\\d{4}\", , , , \"7215425678\", , , , [7]], [, , \"7215(?:1[02]|2\\\\d|5[034679]|8[014-8])\\\\d{4}\", , , , \"7215205678\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002123456\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002123456\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"SX\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"721\", [, , , , , , , , , [-1]], \r\n[, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SY:[, [, , \"[1-59]\\\\d{7,8}\", , , , , , , [8, 9], [6, 7]], [, , \"(?:1(?:1\\\\d?|4\\\\d|[2356])|2(?:1\\\\d?|[235])|3(?:[13]\\\\d|4)|4[13]|5[1-3])\\\\d{6}\", , , , \"112345678\", , , , [6, 7]], [, , \"9(?:22|[3-589]\\\\d|6[024-9])\\\\d{6}\", , , , \"944567890\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"SY\", 963, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\", \r\n\"$1 $2 $3\", [\"[1-5]\"], \"0$1\", , 1], [, \"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\", , 1]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], SZ:[, [, , \"[0237]\\\\d{7}|900\\\\d{6}\", , , , , , , [8, 9]], [, , \"[23][2-5]\\\\d{6}\", , , , \"22171234\", , , [8]], [, , \"7[6-9]\\\\d{6}\", , , , \"76123456\", , , [8]], [, , \"0800\\\\d{4}\", , , , \"08001234\", , , [8]], [, , \"900\\\\d{6}\", , , , \"900012345\", , , [9]], [, , , , , , , , , [-1]], [, , , \r\n, , , , , , [-1]], [, , \"70\\\\d{6}\", , , , \"70012345\", , , [8]], \"SZ\", 268, \"00\", , , , , , , , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[0237]\"]], [, \"(\\\\d{5})(\\\\d{4})\", \"$1 $2\", [\"900\"]]], , [, , , , , , , , , [-1]], , , [, , \"0800\\\\d{4}\", , , , \"08001234\", , , [8]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TA:[, [, , \"8\\\\d{3}\", , , , , , , [4]], [, , \"8\\\\d{3}\", , , , \"8999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , \r\n, , , , , , [-1]], [, , , , , , , , , [-1]], \"TA\", 290, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TC:[, [, , \"[5689]\\\\d{9}\", , , , , , , [10], [7]], [, , \"649(?:712|9(?:4\\\\d|50))\\\\d{4}\", , , , \"6497121234\", , , , [7]], [, , \"649(?:2(?:3[129]|4[1-7])|3(?:3[1-389]|4[1-8])|4[34][1-3])\\\\d{4}\", , , , \"6492311234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}\", \r\n, , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , \"64971[01]\\\\d{4}\", , , , \"6497101234\", , , , [7]], \"TC\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"649\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TD:[, [, , \"[2679]\\\\d{7}\", , , , , , , [8]], [, , \"22(?:[3789]0|5[0-5]|6[89])\\\\d{4}\", , , , \"22501234\"], [, , \"(?:6[023568]\\\\d|77\\\\d|9\\\\d{2})\\\\d{5}\", , , , \"63012345\"], \r\n[, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TD\", 235, \"00|16\", , , , , , \"00\", , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TG:[, [, , \"[279]\\\\d{7}\", , , , , , , [8]], [, , \"2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\\\d{5}\", , , , \"22212345\"], [, , \"(?:7[09]|9[0-36-9])\\\\d{6}\", , , , \"90112345\"], \r\n[, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TG\", 228, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[279]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TH:[, [, , \"1\\\\d{8,9}|[2-9]\\\\d{7,8}\", , , , , , , [8, 9, 10]], [, , \"(?:2\\\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\\\d{6}\", , , , \"21234567\", , , [8]], [, , \"(?:14|6[1-6]|[89]\\\\d)\\\\d{7}\", \r\n, , , \"812345678\", , , [9]], [, , \"1800\\\\d{6}\", , , , \"1800123456\", , , [10]], [, , \"1900\\\\d{6}\", , , , \"1900123456\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"6[08]\\\\d{7}\", , , , \"601234567\", , , [9]], \"TH\", 66, \"00\", \"0\", , , \"0\", , , , [[, \"(2)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"2\"], \"0$1\"], [, \"([13-9]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"14|[3-9]\"], \"0$1\"], [, \"(1[89]00)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"1[89]0\", \"1[89]00\"], \"$1\"]], , [, , , , , , , , , [-1]], , , [, , \r\n, , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TJ:[, [, , \"[3-57-9]\\\\d{8}\", , , , , , , [9], [3, 5, 7]], [, , \"(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\\\d{6}\", , , , \"372123456\", , , , [3, 5, 7]], [, , \"(?:41[18]|(?:5[05]|77|88|9[0-35-9])\\\\d)\\\\d{6}\", , , , \"917123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TJ\", 992, \"810\", \"8\", , , \"8\", , \"8~10\", , [[, \"([349]\\\\d{2})(\\\\d{2})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"[34]7|91[78]\"], , , 1], [, \"([457-9]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"4[148]|[578]|9(?:[0235-9]|1[59])\"], , , 1], [, \"(331700)(\\\\d)(\\\\d{2})\", \"$1 $2 $3\", [\"331\", \"3317\", \"33170\", \"331700\"], , , 1], [, \"(\\\\d{4})(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"3[1-5]\", \"3(?:[1245]|3(?:[02-9]|1[0-589]))\"], , , 1]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TK:[, [, , \"[2-47]\\\\d{3,6}\", , , , , , , [4, 5, 6, 7]], [, , \"(?:2[2-4]|[34]\\\\d)\\\\d{2,5}\", \r\n, , , \"3101\"], [, , \"7[2-4]\\\\d{2,5}\", , , , \"7290\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TK\", 690, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TL:[, [, , \"[2-489]\\\\d{6}|7\\\\d{6,7}\", , , , , , , [7, 8]], [, , \"(?:2[1-5]|3[1-9]|4[1-4])\\\\d{5}\", , , , \"2112345\", , , [7]], [, , \"7[3-8]\\\\d{6}\", , , , \"77212345\", , , [8]], \r\n[, , \"80\\\\d{5}\", , , , \"8012345\", , , [7]], [, , \"90\\\\d{5}\", , , , \"9012345\", , , [7]], [, , , , , , , , , [-1]], [, , \"70\\\\d{5}\", , , , \"7012345\", , , [7]], [, , , , , , , , , [-1]], \"TL\", 670, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[2-489]|70\"]], [, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"7[3-8]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TM:[, [, , \"[1-6]\\\\d{7}\", , , , , , , [8]], [, , \"(?:1(?:2\\\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\\\d{5}\", \r\n, , , \"12345678\"], [, , \"6[1-9]\\\\d{6}\", , , , \"66123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TM\", 993, \"810\", \"8\", , , \"8\", , \"8~10\", , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"12\"], \"(8 $1)\"], [, \"(\\\\d{2})(\\\\d{6})\", \"$1 $2\", [\"6\"], \"8 $1\"], [, \"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\", \"$1 $2-$3-$4\", [\"13|[2-5]\"], \"(8 $1)\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , \r\n, , , , [-1]], , , [, , , , , , , , , [-1]]], TN:[, [, , \"[2-57-9]\\\\d{7}\", , , , , , , [8]], [, , \"3(?:[012]\\\\d|6[0-4]|91)\\\\d{5}|7\\\\d{7}|81200\\\\d{3}\", , , , \"71234567\"], [, , \"(?:[259]\\\\d|4[0-6])\\\\d{6}\", , , , \"20123456\"], [, , \"8010\\\\d{4}\", , , , \"80101234\"], [, , \"88\\\\d{6}\", , , , \"88123456\"], [, , \"8[12]10\\\\d{4}\", , , , \"81101234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TN\", 216, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, \r\n, , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TO:[, [, , \"[02-8]\\\\d{4,6}\", , , , , , , [5, 7]], [, , \"(?:2\\\\d|3[1-8]|4[1-4]|[56]0|7[0149]|8[05])\\\\d{3}\", , , , \"20123\", , , [5]], [, , \"(?:7[578]|8[46-9])\\\\d{5}\", , , , \"7715123\", , , [7]], [, , \"0800\\\\d{3}\", , , , \"0800222\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TO\", 676, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{3})\", \"$1-$2\", [\"[1-6]|7[0-4]|8[05]\"]], \r\n[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"7[5-9]|8[46-9]\"]], [, \"(\\\\d{4})(\\\\d{3})\", \"$1 $2\", [\"0\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TR:[, [, , \"[2-589]\\\\d{9}|444\\\\d{4}\", , , , , , , [7, 10]], [, , \"(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\\\d{7}\", , , , \"2123456789\", , , [10]], [, , \"5(?:(?:0[1-7]|22|[34]\\\\d|5[1-59]|9[246])\\\\d{2}|1616|6161)\\\\d{5}\", \r\n, , , \"5012345678\", , , [10]], [, , \"800\\\\d{7}\", , , , \"8001234567\", , , [10]], [, , \"(?:8[89]8|900)\\\\d{7}\", , , , \"9001234567\", , , [10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TR\", 90, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[23]|4(?:[0-35-9]|4[0-35-9])\"], \"(0$1)\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"5(?:[02-69]|16)\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"51|[89]\"], \r\n\"0$1\", , 1], [, \"(444)(\\\\d{1})(\\\\d{3})\", \"$1 $2 $3\", [\"444\"], , , 1]], , [, , \"512\\\\d{7}\", , , , \"5123456789\", , , [10]], , , [, , \"444\\\\d{4}\", , , , \"4441444\", , , [7]], [, , \"444\\\\d{4}|850\\\\d{7}\", , , , \"4441444\"], , , [, , , , , , , , , [-1]]], TT:[, [, , \"[589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"868(?:2(?:01|[23]\\\\d)|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\\\d|7[0-79])|82[124])\\\\d{4}\", , , , \"8682211234\", , , , [7]], [, , \"868(?:2(?:6[6-9]|[789]\\\\d)|3(?:0[1-9]|1[02-9]|[2-9]\\\\d)|4[6-9]\\\\d|6(?:20|78|8\\\\d)|7(?:0[1-9]|1[02-9]|[2-9]\\\\d))\\\\d{4}\", \r\n, , , \"8682911234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"TT\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"868\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , \"868619\\\\d{4}\", , , , \"8686191234\", , , , [7]]], TV:[, [, , \"[279]\\\\d{4,6}\", , , , , , , [5, 6, \r\n7]], [, , \"2[02-9]\\\\d{3}\", , , , \"20123\", , , [5]], [, , \"(?:7[01]\\\\d|90)\\\\d{4}\", , , , \"901234\", , , [6, 7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"TV\", 688, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], TW:[, [, , \"2\\\\d{6,8}|[3-689]\\\\d{7,8}|7\\\\d{7,9}\", , , , , , , [7, 8, 9, 10]], [, , \"(?:2(?:[235-8]\\\\d{3}|4\\\\d{2,3})|3[2-9]\\\\d{2}|4(?:[239]\\\\d|[78])\\\\d{2}|5[2-8]\\\\d{2}|6[235-79]\\\\d{2}|7[1-9]\\\\d{2}|8(?:2(?:3\\\\d|66)|[7-9]\\\\d{2}))\\\\d{4}\", \r\n, , , \"221234567\", , , [8, 9]], [, , \"9[0-8]\\\\d{7}\", , , , \"912345678\", , , [9]], [, , \"80[0-79]\\\\d{6}\", , , , \"800123456\", , , [9]], [, , \"20(?:2|[013-9]\\\\d{2})\\\\d{4}\", , , , \"203123456\", , , [7, 9]], [, , , , , , , , , [-1]], [, , \"99\\\\d{7}\", , , , \"990123456\", , , [9]], [, , \"70\\\\d{8}\", , , , \"7012345678\", , , [10]], \"TW\", 886, \"0(?:0[25679]|19)\", \"0\", \"#\", , \"0\", , , , [[, \"(20)(\\\\d)(\\\\d{4})\", \"$1 $2 $3\", [\"202\"], \"0$1\"], [, \"([258]0)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"20[013-9]|50[0-46-9]|80[0-79]\"], \r\n\"0$1\"], [, \"([2-8])(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"[25][2-8]|[346]|[78][1-9]\"], \"0$1\"], [, \"(9\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9\"], \"0$1\"], [, \"(70)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"70\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"50[0-46-9]\\\\d{6}\", , , , \"500123456\", , , [9]], , , [, , , , , , , , , [-1]]], TZ:[, [, , \"\\\\d{9}\", , , , , , , [7, 9]], [, , \"2[2-8]\\\\d{7}\", , , , \"222345678\"], [, , \"(?:6[2-9]|7[13-9])\\\\d{7}\", , , , \"621234567\", , , [9]], [, , \"80[08]\\\\d{6}\", \r\n, , , \"800123456\", , , [9]], [, , \"90\\\\d{7}\", , , , \"900123456\", , , [9]], [, , \"8(?:40|6[01])\\\\d{6}\", , , , \"840123456\", , , [9]], [, , , , , , , , , [-1]], [, , \"41\\\\d{7}\", , , , \"412345678\", , , [9]], \"TZ\", 255, \"00[056]\", \"0\", , , \"0\", , , , [[, \"([24]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[24]\"], \"0$1\"], [, \"([67]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[67]\"], \"0$1\"], [, \"([89]\\\\d{2})(\\\\d{2})(\\\\d{4})\", \"$1 $2 $3\", [\"[89]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , \"(?:8(?:[04]0|6[01])|90\\\\d)\\\\d{6}\", \r\n, , , \"800123456\", , , [9]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], UA:[, [, , \"[3-9]\\\\d{8}\", , , , , , , [9], [5, 6, 7]], [, , \"(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\\\d{7}\", , , , \"311234567\", , , , [5, 6, 7]], [, , \"(?:39|50|6[36-8]|7[1-3]|9[1-9])\\\\d{7}\", , , , \"391234567\"], [, , \"800\\\\d{6}\", , , , \"800123456\"], [, , \"900[2-49]\\\\d{5}\", , , , \"900212345\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"89[1-579]\\\\d{6}\", , , , \"891234567\"], \"UA\", 380, \"00\", \"0\", , , \"0\", \r\n, \"0~0\", , [[, \"([3-9]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[38]9|4(?:[45][0-5]|87)|5(?:0|[67][37])|6[36-8]|7|9[1-9]\", \"[38]9|4(?:[45][0-5]|87)|5(?:0|6(?:3[14-7]|7)|7[37])|6[36-8]|7|9[1-9]\"], \"0$1\"], [, \"([3-689]\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"(?:3[1-8]|4[136-8])2|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|8[0-8]|90\", \"3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|8[0-8]|90\"], \"0$1\"], [, \"([3-6]\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"3(?:[1-46-8]|5[013-9])|4(?:[137][013-9]|[45][6-9]|6|8[4-6])|5(?:[1245][013-9]|3|6[0135689]|7[4-6])|6(?:[12][13-8]|[49][013-9]|5[0135-9])\", \r\n\"3(?:[1-46-8](?:[013-9]|22)|5[013-9])|4(?:[137][013-9]|[45][6-9]|6(?:[013-9]|22)|8[4-6])|5(?:[1245][013-9]|3|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][13-8]|[49][013-9]|5[0135-9])\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], UG:[, [, , \"\\\\d{9}\", , , , , , , [9], [5, 6, 7]], [, , \"20(?:[0147]\\\\d{3}|2(?:40|[5-9]\\\\d)\\\\d|3(?:0[0-4]|[2367]\\\\d)\\\\d|5[0-4]\\\\d{2}|6(?:00[0-2]|30[0-4]|[5-9]\\\\d{2})|8[0-2]\\\\d{2})\\\\d{3}|[34]\\\\d{8}\", \r\n, , , \"312345678\", , , , [5, 6, 7]], [, , \"7(?:0[0-7]\\\\d|[1578]\\\\d{2}|2(?:[03]\\\\d|60)|30\\\\d|4[0-4]\\\\d|9(?:[0-6]\\\\d|74))\\\\d{5}\", , , , \"712345678\"], [, , \"800[123]\\\\d{5}\", , , , \"800123456\"], [, , \"90[123]\\\\d{6}\", , , , \"901123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"UG\", 256, \"00[057]\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"20[0-8]|4(?:6[45]|[7-9])|[7-9]\", \"20(?:[013-8]|2[5-9])|4(?:6[45]|[7-9])|[7-9]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{7})\", \"$1 $2\", \r\n[\"3|4(?:[1-5]|6[0-36-9])\"], \"0$1\"], [, \"(2024)(\\\\d{5})\", \"$1 $2\", [\"202\", \"2024\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], US:[, [, , \"[2-9]\\\\d{9}\", , , , , , , [10], [7]], [, , \"(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[012])|7(?:0[1-46-8]|1[02-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-258]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[014678]|4[0179]|5[12469]|7[0-3589]|8[04-69]))[2-9]\\\\d{6}\", \r\n, , , \"2015550123\", , , , [7]], [, , \"(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[16]|5[017]|6[0-279]|78|8[012])|7(?:0[1-46-8]|1[02-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|28|3[0-258]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[014678]|4[0179]|5[12469]|7[0-3589]|8[04-69]))[2-9]\\\\d{6}\", \r\n, , , \"2015550123\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"US\", 1, \"011\", \"1\", , , \"1\", , , 1, [[, \"(\\\\d{3})(\\\\d{4})\", \"$1-$2\", , , , 1], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"($1) $2-$3\", , , , 1]], [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{4})\", \"$1-$2-$3\"]], [, , , , , , , , , [-1]], 1, , [, , , , , , , , \r\n, [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], UY:[, [, , \"[2489]\\\\d{6,7}\", , , , , , , [7, 8]], [, , \"2\\\\d{7}|4[2-7]\\\\d{6}\", , , , \"21231234\", , , [8], [7]], [, , \"9[1-9]\\\\d{6}\", , , , \"94231234\", , , [8]], [, , \"80[05]\\\\d{4}\", , , , \"8001234\", , , [7]], [, , \"90[0-8]\\\\d{4}\", , , , \"9001234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"UY\", 598, \"0(?:1[3-9]\\\\d|0)\", \"0\", \" int. \", , \"0\", , \"00\", , [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\", [\"[24]\"]], \r\n[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"9[1-9]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[89]0\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], UZ:[, [, , \"[679]\\\\d{8}\", , , , , , , [9], [7]], [, , \"(?:6(?:1(?:22|3[124]|4[1-4]|5[123578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|6\\\\d{2}|7(?:[23]\\\\d|7[69])|9(?:22|4[1-8]|6[135]))|7(?:0(?:5[4-9]|6[0146]|7[12456]|9[135-8])|1[12]\\\\d|2(?:22|3[1345789]|4[123579]|5[14])|3(?:2\\\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|6(?:22|3[12457]|4[13-8])|9(?:22|5[1-9])))\\\\d{5}\", \r\n, , , \"662345678\", , , , [7]], [, , \"6(?:1(?:2(?:98|2[01])|35[0-4]|50\\\\d|61[23]|7(?:[01][017]|4\\\\d|55|9[5-9]))|2(?:11\\\\d|2(?:[12]1|9[01379])|5(?:[126]\\\\d|3[0-4])|7\\\\d{2})|5(?:19[01]|2(?:27|9[26])|30\\\\d|59\\\\d|7\\\\d{2})|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|3[79]\\\\d|4(?:56|83)|7(?:[07]\\\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79])|9[0-3]\\\\d)|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\\\d|[39][07])|9(?:0\\\\d|7[079]))|9(?:2(?:1[1267]|5\\\\d|3[01]|7[0-4])|5[67]\\\\d|6(?:2[0-26]|8\\\\d)|7\\\\d{2}))\\\\d{4}|7(?:0\\\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\\\d|7(?:0\\\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|33\\\\d|5(?:0[0-4]|5[579]|9\\\\d)|7(?:[0-3579]\\\\d|4[0467]|6[67]|8[078])|9[4-6]\\\\d)|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\\\d|9[5-9])|7(?:0\\\\d|1[024589]|2[0127]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\\\d))|5(?:112|2(?:0\\\\d|2[29]|[49]4)|3[1568]\\\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\\\d|8[78]|9[079]))|6(?:2(?:2[1245]|4[2-4])|39\\\\d|41[179]|5(?:[349]\\\\d|5[0-2])|7(?:0[017]|[13]\\\\d|22|44|55|67|88))|9(?:22[128]|3(?:2[0-4]|7\\\\d)|57[05629]|7(?:2[05-9]|3[37]|4\\\\d|60|7[2579]|87|9[07])))\\\\d{4}|9[0-57-9]\\\\d{7}\", \r\n, , , \"912345678\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"UZ\", 998, \"810\", \"8\", , , \"8\", , \"8~10\", , [[, \"([679]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"[679]\"], \"8 $1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], VA:[, [, , \"(?:0(?:878\\\\d{5}|6698\\\\d{5})|[1589]\\\\d{5,10}|3(?:[12457-9]\\\\d{8}|[36]\\\\d{7,9}))\", , , , , , , [6, 8, 9, \r\n10, 11]], [, , \"06698\\\\d{5}\", , , , \"0669812345\", , , [10]], [, , \"3(?:[12457-9]\\\\d{8}|6\\\\d{7,8}|3\\\\d{7,9})\", , , , \"3123456789\", , , [9, 10, 11]], [, , \"80(?:0\\\\d{6}|3\\\\d{3})\", , , , \"800123456\", , , [6, 9]], [, , \"0878\\\\d{5}|1(?:44|6[346])\\\\d{6}|89(?:2\\\\d{3}|4(?:[0-4]\\\\d{2}|[5-9]\\\\d{4})|5(?:[0-4]\\\\d{2}|[5-9]\\\\d{6})|9\\\\d{6})\", , , , \"899123456\", , , [6, 8, 9, 10]], [, , \"84(?:[08]\\\\d{6}|[17]\\\\d{3})\", , , , \"848123456\", , , [6, 9]], [, , \"1(?:78\\\\d|99)\\\\d{6}\", , , , \"1781234567\", , , [9, 10]], [, \r\n, \"55\\\\d{8}\", , , , \"5512345678\", , , [10]], \"VA\", 39, \"00\", , , , , , , , , , [, , , , , , , , , [-1]], , , [, , \"848\\\\d{6}\", , , , \"848123456\", , , [9]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], VC:[, [, , \"[5789]\\\\d{9}\", , , , , , , [10], [7]], [, , \"784(?:266|3(?:6[6-9]|7\\\\d|8[0-24-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\\\d{4}\", , , , \"7842661234\", , , , [7]], [, , \"784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4]))\\\\d{4}\", , , , \"7844301234\", , , , [7]], [, \r\n, \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"VC\", 1, \"011\", \"1\", , , \"1\", , , , , , [, , , , , , , , , [-1]], , \"784\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], VE:[, [, , \"[24589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"(?:2(?:12|3[457-9]|[58][1-9]|[467]\\\\d|9[1-6])|50[01])\\\\d{7}\", \r\n, , , \"2121234567\", , , , [7]], [, , \"4(?:1[24-8]|2[46])\\\\d{7}\", , , , \"4121234567\"], [, , \"800\\\\d{7}\", , , , \"8001234567\"], [, , \"900\\\\d{7}\", , , , \"9001234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"VE\", 58, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{3})(\\\\d{7})\", \"$1-$2\", , \"0$1\", \"$CC $1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], VG:[, [, , \"[2589]\\\\d{9}\", , , , , , , [10], [7]], [, \r\n, \"284(?:(?:229|4(?:22|9[45])|774|8(?:52|6[459]))\\\\d{4}|496[0-5]\\\\d{3})\", , , , \"2842291234\", , , , [7]], [, , \"284(?:(?:3(?:0[0-3]|4[0-7]|68|9[34])|4(?:4[0-6]|68|99)|54[0-57])\\\\d{4}|496[6-9]\\\\d{3})\", , , , \"2843001234\", , , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"VG\", 1, \"011\", \"1\", , , \"1\", \r\n, , , , , [, , , , , , , , , [-1]], , \"284\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], VI:[, [, , \"[3589]\\\\d{9}\", , , , , , , [10], [7]], [, , \"340(?:2(?:01|2[0678]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-589]|27|7\\\\d)|884|998)\\\\d{4}\", , , , \"3406421234\", , , , [7]], [, , \"340(?:2(?:01|2[0678]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-589]|27|7\\\\d)|884|998)\\\\d{4}\", , , , \"3406421234\", \r\n, , , [7]], [, , \"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\", , , , \"8002345678\"], [, , \"900[2-9]\\\\d{6}\", , , , \"9002345678\"], [, , , , , , , , , [-1]], [, , \"5(?:(?:00|22|33|44|66|77|88)[2-9]|21[23])\\\\d{6}\", , , , \"5002345678\"], [, , , , , , , , , [-1]], \"VI\", 1, \"011\", \"1\", , , \"1\", , , 1, , , [, , , , , , , , , [-1]], , \"340\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], VN:[, [, , \"1\\\\d{6,9}|2\\\\d{9}|6\\\\d{6,7}|7\\\\d{6}|8\\\\d{6,8}|9\\\\d{8}\", , , , , , , [7, 8, 9, 10]], \r\n[, , \"2(?:0[3-9]|1[0-689]|2[0-25-9]|3[2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|8[2-7]|9[0-4679])\\\\d{7}\", , , , \"2101234567\", , , [10]], [, , \"(?:9\\\\d|1(?:2\\\\d|6[2-9]|8[68]|99))\\\\d{7}|8(?:6[89]|8\\\\d|9[89])\\\\d{6}\", , , , \"912345678\", , , [9, 10]], [, , \"1800\\\\d{4,6}\", , , , \"1800123456\", , , [8, 9, 10]], [, , \"1900\\\\d{4,6}\", , , , \"1900123456\", , , [8, 9, 10]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"VN\", 84, \"00\", \"0\", , , \"0\", , , , [[, \"([17]99)(\\\\d{4})\", \"$1 $2\", \r\n[\"[17]99\"], \"0$1\", , 1], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"2[48]\"], \"0$1\", , 1], [, \"(80)(\\\\d{5})\", \"$1 $2\", [\"80\"], \"0$1\", , 1], [, \"(69\\\\d)(\\\\d{4,5})\", \"$1 $2\", [\"69\"], \"0$1\", , 1], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"2[0-35-79]\"], \"0$1\", , 1], [, \"([89]\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3 $4\", [\"8(?:8|9[89])|9\"], \"0$1\", , 1], [, \"(1[2689]\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"1(?:[26]|8[68]|99)\"], \"0$1\", , 1], [, \"(86[89])(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"86[89]\"], \"0$1\", \r\n, 1], [, \"(1[89]00)(\\\\d{4,6})\", \"$1 $2\", [\"1[89]0\", \"1[89]00\"], \"$1\", , 1]], , [, , , , , , , , , [-1]], , , [, , \"[17]99\\\\d{4}|69\\\\d{5,6}\", , , , \"1992000\", , , [7, 8]], [, , \"[17]99\\\\d{4}|69\\\\d{5,6}|80\\\\d{5}\", , , , \"1992000\", , , [7, 8]], , , [, , , , , , , , , [-1]]], VU:[, [, , \"[2-57-9]\\\\d{4,6}\", , , , , , , [5, 7]], [, , \"(?:2[02-9]\\\\d|3(?:[5-7]\\\\d|8[0-8])|48[4-9]|88\\\\d)\\\\d{2}\", , , , \"22123\", , , [5]], [, , \"(?:5(?:7[2-5]|[0-689]\\\\d)|7[013-7]\\\\d)\\\\d{4}\", , , , \"5912345\", , , [7]], [, , , \r\n, , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"VU\", 678, \"00\", , , , , , , , [[, \"(\\\\d{3})(\\\\d{4})\", \"$1 $2\", [\"[579]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"3[03]\\\\d{3}|900\\\\d{4}\", , , , \"30123\"], , , [, , , , , , , , , [-1]]], WF:[, [, , \"[4-8]\\\\d{5}\", , , , , , , [6]], [, , \"(?:50|68|72)\\\\d{4}\", , , , \"501234\"], [, , \"(?:50|68|72|8[23])\\\\d{4}\", , , , \"501234\"], [, , , , , , , , , [-1]], [, \r\n, , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"WF\", 681, \"00\", , , , , , , , [[, \"(\\\\d{2})(\\\\d{2})(\\\\d{2})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , \"[48]0\\\\d{4}\", , , , \"401234\"]], WS:[, [, , \"[2-8]\\\\d{4,6}\", , , , , , , [5, 6, 7]], [, , \"(?:[2-5]\\\\d|6[1-9]|84\\\\d{2})\\\\d{3}\", , , , \"22123\", , , [5, 7]], [, , \"(?:60|7[25-7]\\\\d)\\\\d{4}\", , , , \"601234\", , , [6, 7]], [, , \"800\\\\d{3}\", \r\n, , , \"800123\", , , [6]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"WS\", 685, \"0\", , , , , , , , [[, \"(8\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8\"]], [, \"(7\\\\d)(\\\\d{5})\", \"$1 $2\", [\"7\"]], [, \"(\\\\d{5})\", \"$1\", [\"[2-6]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], XK:[, [, , \"[23][89]\\\\d{6,7}|4[3-79]\\\\d{6}|[89]00\\\\d{5}\", , , , , , , [8, 9]], [, , \"(?:2[89]0?|3(?:8|90?))\\\\d{6}\", \r\n, , , \"28012345\"], [, , \"4[3-79]\\\\d{6}\", , , , \"43201234\", , , [8]], [, , \"800\\\\d{5}\", , , , \"80001234\", , , [8]], [, , \"900\\\\d{5}\", , , , \"90001234\", , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"XK\", 383, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"[23][89]|4[3-79]\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{5})\", \"$1 $2\", [\"[89]00\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", , \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , \r\n, , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], YE:[, [, , \"[1-7]\\\\d{6,8}\", , , , , , , [7, 8, 9], [6]], [, , \"(?:1(?:7\\\\d|[2-68])|2[2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-68])\\\\d{5}\", , , , \"1234567\", , , [7, 8], [6]], [, , \"7[0137]\\\\d{7}\", , , , \"712345678\", , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"YE\", 967, \"00\", \"0\", , , \"0\", , , , [[, \"([1-7])(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", \r\n[\"[1-6]|7[24-68]\"], \"0$1\"], [, \"(7\\\\d{2})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"7[0137]\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], YT:[, [, , \"[268]\\\\d{8}\", , , , , , , [9]], [, , \"269(?:0[67]|5[01]|6\\\\d|[78]0)\\\\d{4}\", , , , \"269601234\"], [, , \"639(?:0[0-79]|1[019]|[26]\\\\d|3[09]|[45]0|7[06-9]|9[04-79])\\\\d{4}\", , , , \"639012345\"], [, , \"80\\\\d{7}\", , , , \"801234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, \r\n, , , , , , , , [-1]], [, , , , , , , , , [-1]], \"YT\", 262, \"00\", \"0\", , , \"0\", , , , , , [, , , , , , , , , [-1]], , \"269|63\", [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], ZA:[, [, , \"[1-79]\\\\d{8}|8\\\\d{4,8}\", , , , , , , [5, 6, 7, 8, 9]], [, , \"(?:1[0-8]|2[1-378]|3[1-69]|4\\\\d|5[1346-8])\\\\d{7}\", , , , \"101234567\", , , [9]], [, , \"(?:6\\\\d|7[0-46-9])\\\\d{7}|8(?:[1-4]\\\\d{1,5}|5\\\\d{5})\\\\d{2}\", , , , \"711234567\"], [, , \"80\\\\d{7}\", , , , \"801234567\", , , [9]], [, , \r\n\"86[2-9]\\\\d{6}|9[0-2]\\\\d{7}\", , , , \"862345678\", , , [9]], [, , \"860\\\\d{6}\", , , , \"860123456\", , , [9]], [, , , , , , , , , [-1]], [, , \"87\\\\d{7}\", , , , \"871234567\", , , [9]], \"ZA\", 27, \"00\", \"0\", , , \"0\", , , , [[, \"(860)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"860\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3,4})\", \"$1 $2\", [\"8[1-4]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\", \"$1 $2 $3\", [\"8[1-4]\"], \"0$1\"], [, \"(\\\\d{2})(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"[1-79]|8(?:[0-57]|6[1-9])\"], \"0$1\"]], , [, , , , , , , , , [-1]], \r\n, , [, , , , , , , , , [-1]], [, , \"861\\\\d{6}\", , , , \"861123456\", , , [9]], , , [, , , , , , , , , [-1]]], ZM:[, [, , \"[289]\\\\d{8}\", , , , , , , [9], [6, 7]], [, , \"21[1-8]\\\\d{6}\", , , , \"211234567\", , , , [6, 7]], [, , \"9[4-9]\\\\d{7}\", , , , \"955123456\"], [, , \"800\\\\d{6}\", , , , \"800123456\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"ZM\", 260, \"00\", \"0\", , , \"0\", , , , [[, \"(\\\\d{2})(\\\\d{4})\", \"$1 $2\", , \"$1\"], [, \"([1-8])(\\\\d{2})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"[1-8]\"], \"$1\"], [, \"([29]\\\\d)(\\\\d{7})\", \"$1 $2\", [\"[29]\"], \"0$1\"], [, \"(800)(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"800\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], ZW:[, [, , \"2(?:[0-57-9]\\\\d{3,8}|6(?:[14]\\\\d{7}|\\\\d{4}))|[13-69]\\\\d{4,9}|7\\\\d{8}|8[06]\\\\d{5,8}\", , , , , , , [5, 6, 7, 8, 9, 10], [3, 4]], [, , \"(?:2(?:0(?:4\\\\d|5\\\\d{2})|2[278]\\\\d|48\\\\d|7(?:[1-7]\\\\d|[089]\\\\d{2})|8(?:[2-57-9]|[146]\\\\d{2})|98)|3(?:08|17|3[78]|7(?:[19]|[56]\\\\d)|8[37]|98)|5[15][78]|6(?:28\\\\d{2}|37|6[78]|75\\\\d|98|8(?:7\\\\d|8)))\\\\d{3}|(?:2(?:1[39]|2[0157]|31|[56][14]|7[35]|84)|329)\\\\d{7}|(?:1(?:3\\\\d{2}|[4-8]|9\\\\d)|2(?:0\\\\d{2}|12|292|[569]\\\\d)|3(?:[26]|[013459]\\\\d)|5(?:0|1[2-4]|26|[37]2|5\\\\d{2}|[689]\\\\d)|6(?:[39]|[01246]\\\\d|[78]\\\\d{2}))\\\\d{3}|(?:29\\\\d|39|54)\\\\d{6}|(?:(?:25|54)83\\\\d|2582\\\\d{2}|65[2-8])\\\\d{2}|(?:4\\\\d{6,7}|9[2-9]\\\\d{4,5})\", \r\n, , , \"1312345\", , , , [3, 4]], [, , \"(?:7(?:1\\\\d|3[2-9]|7[1-9]|8[2-5])|8644)\\\\d{6}\", , , , \"712345678\", , , [9, 10]], [, , \"80(?:[01]\\\\d|20|8[0-8])\\\\d{3}\", , , , \"8001234\", , , [7]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"86(?:1[12]|30|55|77|8[368])\\\\d{6}\", , , , \"8686123456\", , , [10]], \"ZW\", 263, \"00\", \"0\", , , \"0\", , , , [[, \"([49])(\\\\d{3})(\\\\d{2,4})\", \"$1 $2 $3\", [\"4|9[2-9]\"], \"0$1\"], [, \"(7\\\\d)(\\\\d{3})(\\\\d{4})\", \"$1 $2 $3\", [\"7\"], \"0$1\"], [, \"(86\\\\d{2})(\\\\d{3})(\\\\d{3})\", \r\n\"$1 $2 $3\", [\"86[24]\"], \"0$1\"], [, \"([2356]\\\\d{2})(\\\\d{3,5})\", \"$1 $2\", [\"2(?:0[45]|2[278]|[49]8|[78])|3(?:[09]8|17|3[78]|7[1569]|8[37])|5[15][78]|6(?:[29]8|37|[68][78]|75)\"], \"0$1\"], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"2(?:1[39]|2[0157]|31|[56][14]|7[35]|84)|329\"], \"0$1\"], [, \"([1-356]\\\\d)(\\\\d{3,5})\", \"$1 $2\", [\"1[3-9]|2[02569]|3[0-69]|5[05689]|6\"], \"0$1\"], [, \"([235]\\\\d)(\\\\d{3})(\\\\d{3,4})\", \"$1 $2 $3\", [\"[23]9|54\"], \"0$1\"], [, \"([25]\\\\d{3})(\\\\d{3,5})\", \"$1 $2\", [\"(?:25|54)8\", \"258[23]|5483\"], \r\n\"0$1\"], [, \"(8\\\\d{3})(\\\\d{6})\", \"$1 $2\", [\"86\"], \"0$1\"], [, \"(80\\\\d)(\\\\d{4})\", \"$1 $2\", [\"80\"], \"0$1\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], 800:[, [, , \"\\\\d{8}\", , , , , , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"\\\\d{8}\", , , , \"12345678\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"001\", 800, , , , , , , , 1, [[, \"(\\\\d{4})(\\\\d{4})\", \r\n\"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], 808:[, [, , \"\\\\d{8}\", , , , , , , [8]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"\\\\d{8}\", , , , \"12345678\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"001\", 808, , , , , , , , 1, [[, \"(\\\\d{4})(\\\\d{4})\", \"$1 $2\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \r\n, , [, , , , , , , , , [-1]]], 870:[, [, , \"[35-7]\\\\d{8}\", , , , , , , [9]], [, , , , , , , , , [-1]], [, , \"(?:[356]\\\\d|7[6-8])\\\\d{7}\", , , , \"301234567\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"001\", 870, , , , , , , , , [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], 878:[, [, , \"1\\\\d{11}\", , \r\n, , , , , [12]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"10\\\\d{10}\", , , , \"101234567890\"], \"001\", 878, , , , , , , , 1, [[, \"(\\\\d{2})(\\\\d{5})(\\\\d{5})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], 881:[, [, , \"[67]\\\\d{8}\", , , , , , , [9]], [, , , , , , , , , [-1]], [, , \"[67]\\\\d{8}\", , , , \"612345678\"], \r\n[, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"001\", 881, , , , , , , , , [[, \"(\\\\d)(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\", [\"[67]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], 882:[, [, , \"[13]\\\\d{6,11}\", , , , , , , [7, 8, 9, 10, 11, 12]], [, , , , , , , , , [-1]], [, , \"3(?:2\\\\d{3}|37\\\\d{2}|4(?:2|7\\\\d{3}))\\\\d{4}\", , , , \"3421234\", , , [7, 9, 10]], \r\n[, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15678]|9[0689])\\\\d{4}|6\\\\d{5,10})|3(?:45|9\\\\d{3})\\\\d{7}\", , , , \"390123456789\"], \"001\", 882, , , , , , , , , [[, \"(\\\\d{2})(\\\\d{4})(\\\\d{3})\", \"$1 $2 $3\", [\"3[23]\"]], [, \"(\\\\d{2})(\\\\d{5})\", \"$1 $2\", [\"16|342\"]], [, \"(\\\\d{2})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"34[57]\"]], [, \"(\\\\d{3})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"348\"]], [, \"(\\\\d{2})(\\\\d{2})(\\\\d{4})\", \r\n\"$1 $2 $3\", [\"1\"]], [, \"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\", \"$1 $2 $3\", [\"16\"]], [, \"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\", \"$1 $2 $3\", [\"16|39\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , \"348[57]\\\\d{7}\", , , , \"34851234567\", , , [11]]], 883:[, [, , \"51\\\\d{7}(?:\\\\d{3})?\", , , , , , , [9, 12]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"51(?:00\\\\d{5}(?:\\\\d{3})?|[13]0\\\\d{8})\", \r\n, , , \"510012345\"], \"001\", 883, , , , , , , , 1, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3\", [\"510\"]], [, \"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\", \"$1 $2 $3 $4\", [\"510\"]], [, \"(\\\\d{4})(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\", [\"51[13]\"]]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]], 888:[, [, , \"\\\\d{11}\", , , , , , , [11]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , \r\n, [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"001\", 888, , , , , , , , 1, [[, \"(\\\\d{3})(\\\\d{3})(\\\\d{5})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , \"\\\\d{11}\", , , , \"12345678901\"], , , [, , , , , , , , , [-1]]], 979:[, [, , \"\\\\d{9}\", , , , , , , [9]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , \"\\\\d{9}\", , , , \"123456789\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \"001\", \r\n979, , , , , , , , 1, [[, \"(\\\\d)(\\\\d{4})(\\\\d{4})\", \"$1 $2 $3\"]], , [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , [, , , , , , , , , [-1]]]};\r\n/*\r\n\r\n Copyright (C) 2010 The Libphonenumber Authors.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n*/\r\ni18n.phonenumbers.PhoneNumberUtil = function() {\r\n  this.regionToMetadataMap = {};\r\n};\r\ngoog.addSingletonGetter(i18n.phonenumbers.PhoneNumberUtil);\r\ni18n.phonenumbers.Error = {INVALID_COUNTRY_CODE:\"Invalid country calling code\", NOT_A_NUMBER:\"The string supplied did not seem to be a phone number\", TOO_SHORT_AFTER_IDD:\"Phone number too short after IDD\", TOO_SHORT_NSN:\"The string supplied is too short to be a phone number\", TOO_LONG:\"The string supplied is too long to be a phone number\"};\r\ni18n.phonenumbers.PhoneNumberUtil.NANPA_COUNTRY_CODE_ = 1;\r\ni18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_ = 2;\r\ni18n.phonenumbers.PhoneNumberUtil.MAX_LENGTH_FOR_NSN_ = 17;\r\ni18n.phonenumbers.PhoneNumberUtil.MAX_LENGTH_COUNTRY_CODE_ = 3;\r\ni18n.phonenumbers.PhoneNumberUtil.MAX_INPUT_STRING_LENGTH_ = 250;\r\ni18n.phonenumbers.PhoneNumberUtil.UNKNOWN_REGION_ = \"ZZ\";\r\ni18n.phonenumbers.PhoneNumberUtil.COLOMBIA_MOBILE_TO_FIXED_LINE_PREFIX_ = \"3\";\r\ni18n.phonenumbers.PhoneNumberUtil.MOBILE_TOKEN_MAPPINGS_ = {52:\"1\", 54:\"9\"};\r\ni18n.phonenumbers.PhoneNumberUtil.GEO_MOBILE_COUNTRIES_ = [52, 54, 55];\r\ni18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN = \"+\";\r\ni18n.phonenumbers.PhoneNumberUtil.STAR_SIGN_ = \"*\";\r\ni18n.phonenumbers.PhoneNumberUtil.RFC3966_EXTN_PREFIX_ = \";ext=\";\r\ni18n.phonenumbers.PhoneNumberUtil.RFC3966_PREFIX_ = \"tel:\";\r\ni18n.phonenumbers.PhoneNumberUtil.RFC3966_PHONE_CONTEXT_ = \";phone-context=\";\r\ni18n.phonenumbers.PhoneNumberUtil.RFC3966_ISDN_SUBADDRESS_ = \";isub=\";\r\ni18n.phonenumbers.PhoneNumberUtil.DIGIT_MAPPINGS = {0:\"0\", 1:\"1\", 2:\"2\", 3:\"3\", 4:\"4\", 5:\"5\", 6:\"6\", 7:\"7\", 8:\"8\", 9:\"9\", \"\\uff10\":\"0\", \"\\uff11\":\"1\", \"\\uff12\":\"2\", \"\\uff13\":\"3\", \"\\uff14\":\"4\", \"\\uff15\":\"5\", \"\\uff16\":\"6\", \"\\uff17\":\"7\", \"\\uff18\":\"8\", \"\\uff19\":\"9\", \"\\u0660\":\"0\", \"\\u0661\":\"1\", \"\\u0662\":\"2\", \"\\u0663\":\"3\", \"\\u0664\":\"4\", \"\\u0665\":\"5\", \"\\u0666\":\"6\", \"\\u0667\":\"7\", \"\\u0668\":\"8\", \"\\u0669\":\"9\", \"\\u06f0\":\"0\", \"\\u06f1\":\"1\", \"\\u06f2\":\"2\", \"\\u06f3\":\"3\", \"\\u06f4\":\"4\", \"\\u06f5\":\"5\", \"\\u06f6\":\"6\", \"\\u06f7\":\"7\", \r\n\"\\u06f8\":\"8\", \"\\u06f9\":\"9\"};\r\ni18n.phonenumbers.PhoneNumberUtil.DIALLABLE_CHAR_MAPPINGS_ = {0:\"0\", 1:\"1\", 2:\"2\", 3:\"3\", 4:\"4\", 5:\"5\", 6:\"6\", 7:\"7\", 8:\"8\", 9:\"9\", \"+\":i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN, \"*\":\"*\", \"#\":\"#\"};\r\ni18n.phonenumbers.PhoneNumberUtil.ALPHA_MAPPINGS_ = {A:\"2\", B:\"2\", C:\"2\", D:\"3\", E:\"3\", F:\"3\", G:\"4\", H:\"4\", I:\"4\", J:\"5\", K:\"5\", L:\"5\", M:\"6\", N:\"6\", O:\"6\", P:\"7\", Q:\"7\", R:\"7\", S:\"7\", T:\"8\", U:\"8\", V:\"8\", W:\"9\", X:\"9\", Y:\"9\", Z:\"9\"};\r\ni18n.phonenumbers.PhoneNumberUtil.ALL_NORMALIZATION_MAPPINGS_ = {0:\"0\", 1:\"1\", 2:\"2\", 3:\"3\", 4:\"4\", 5:\"5\", 6:\"6\", 7:\"7\", 8:\"8\", 9:\"9\", \"\\uff10\":\"0\", \"\\uff11\":\"1\", \"\\uff12\":\"2\", \"\\uff13\":\"3\", \"\\uff14\":\"4\", \"\\uff15\":\"5\", \"\\uff16\":\"6\", \"\\uff17\":\"7\", \"\\uff18\":\"8\", \"\\uff19\":\"9\", \"\\u0660\":\"0\", \"\\u0661\":\"1\", \"\\u0662\":\"2\", \"\\u0663\":\"3\", \"\\u0664\":\"4\", \"\\u0665\":\"5\", \"\\u0666\":\"6\", \"\\u0667\":\"7\", \"\\u0668\":\"8\", \"\\u0669\":\"9\", \"\\u06f0\":\"0\", \"\\u06f1\":\"1\", \"\\u06f2\":\"2\", \"\\u06f3\":\"3\", \"\\u06f4\":\"4\", \"\\u06f5\":\"5\", \"\\u06f6\":\"6\", \r\n\"\\u06f7\":\"7\", \"\\u06f8\":\"8\", \"\\u06f9\":\"9\", A:\"2\", B:\"2\", C:\"2\", D:\"3\", E:\"3\", F:\"3\", G:\"4\", H:\"4\", I:\"4\", J:\"5\", K:\"5\", L:\"5\", M:\"6\", N:\"6\", O:\"6\", P:\"7\", Q:\"7\", R:\"7\", S:\"7\", T:\"8\", U:\"8\", V:\"8\", W:\"9\", X:\"9\", Y:\"9\", Z:\"9\"};\r\ni18n.phonenumbers.PhoneNumberUtil.ALL_PLUS_NUMBER_GROUPING_SYMBOLS_ = {0:\"0\", 1:\"1\", 2:\"2\", 3:\"3\", 4:\"4\", 5:\"5\", 6:\"6\", 7:\"7\", 8:\"8\", 9:\"9\", A:\"A\", B:\"B\", C:\"C\", D:\"D\", E:\"E\", F:\"F\", G:\"G\", H:\"H\", I:\"I\", J:\"J\", K:\"K\", L:\"L\", M:\"M\", N:\"N\", O:\"O\", P:\"P\", Q:\"Q\", R:\"R\", S:\"S\", T:\"T\", U:\"U\", V:\"V\", W:\"W\", X:\"X\", Y:\"Y\", Z:\"Z\", a:\"A\", b:\"B\", c:\"C\", d:\"D\", e:\"E\", f:\"F\", g:\"G\", h:\"H\", i:\"I\", j:\"J\", k:\"K\", l:\"L\", m:\"M\", n:\"N\", o:\"O\", p:\"P\", q:\"Q\", r:\"R\", s:\"S\", t:\"T\", u:\"U\", v:\"V\", w:\"W\", x:\"X\", y:\"Y\", z:\"Z\", \r\n\"-\":\"-\", \"\\uff0d\":\"-\", \"\\u2010\":\"-\", \"\\u2011\":\"-\", \"\\u2012\":\"-\", \"\\u2013\":\"-\", \"\\u2014\":\"-\", \"\\u2015\":\"-\", \"\\u2212\":\"-\", \"/\":\"/\", \"\\uff0f\":\"/\", \" \":\" \", \"\\u3000\":\" \", \"\\u2060\":\" \", \".\":\".\", \"\\uff0e\":\".\"};\r\ni18n.phonenumbers.PhoneNumberUtil.SINGLE_INTERNATIONAL_PREFIX_ = /[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?/;\r\ni18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION = \"-x\\u2010-\\u2015\\u2212\\u30fc\\uff0d-\\uff0f \\u00a0\\u00ad\\u200b\\u2060\\u3000()\\uff08\\uff09\\uff3b\\uff3d.\\\\[\\\\]/~\\u2053\\u223c\\uff5e\";\r\ni18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ = \"0-9\\uff10-\\uff19\\u0660-\\u0669\\u06f0-\\u06f9\";\r\ni18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_ = \"A-Za-z\";\r\ni18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_ = \"+\\uff0b\";\r\ni18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_PATTERN = new RegExp(\"[\" + i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_ + \"]+\");\r\ni18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN = new RegExp(\"^[\" + i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_ + \"]+\");\r\ni18n.phonenumbers.PhoneNumberUtil.SEPARATOR_PATTERN_ = \"[\" + i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION + \"]+\";\r\ni18n.phonenumbers.PhoneNumberUtil.CAPTURING_DIGIT_PATTERN = new RegExp(\"([\" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + \"])\");\r\ni18n.phonenumbers.PhoneNumberUtil.VALID_START_CHAR_PATTERN_ = new RegExp(\"[\" + i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_ + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + \"]\");\r\ni18n.phonenumbers.PhoneNumberUtil.SECOND_NUMBER_START_PATTERN_ = /[\\\\\\/] *x/;\r\ni18n.phonenumbers.PhoneNumberUtil.UNWANTED_END_CHAR_PATTERN_ = new RegExp(\"[^\" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + i18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_ + \"#]+$\");\r\ni18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_PHONE_PATTERN_ = /(?:.*?[A-Za-z]){3}.*/;\r\ni18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_PHONE_NUMBER_PATTERN_ = \"[\" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + \"]{\" + i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_ + \"}\";\r\ni18n.phonenumbers.PhoneNumberUtil.VALID_PHONE_NUMBER_ = \"[\" + i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_ + \"]*(?:[\" + i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION + i18n.phonenumbers.PhoneNumberUtil.STAR_SIGN_ + \"]*[\" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + \"]){3,}[\" + i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION + i18n.phonenumbers.PhoneNumberUtil.STAR_SIGN_ + i18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_ + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + \"]*\";\r\ni18n.phonenumbers.PhoneNumberUtil.DEFAULT_EXTN_PREFIX_ = \" ext. \";\r\ni18n.phonenumbers.PhoneNumberUtil.CAPTURING_EXTN_DIGITS_ = \"([\" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + \"]{1,7})\";\r\ni18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERNS_FOR_PARSING_ = i18n.phonenumbers.PhoneNumberUtil.RFC3966_EXTN_PREFIX_ + i18n.phonenumbers.PhoneNumberUtil.CAPTURING_EXTN_DIGITS_ + \"|[ \\u00a0\\\\t,]*(?:e?xt(?:ensi(?:o\\u0301?|\\u00f3))?n?|\\uff45?\\uff58\\uff54\\uff4e?|[;,x\\uff58#\\uff03~\\uff5e]|int|anexo|\\uff49\\uff4e\\uff54)[:\\\\.\\uff0e]?[ \\u00a0\\\\t,-]*\" + i18n.phonenumbers.PhoneNumberUtil.CAPTURING_EXTN_DIGITS_ + \"#?|[- ]+([\" + i18n.phonenumbers.PhoneNumberUtil.VALID_DIGITS_ + \"]{1,5})#\";\r\ni18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERN_ = new RegExp(\"(?:\" + i18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERNS_FOR_PARSING_ + \")$\", \"i\");\r\ni18n.phonenumbers.PhoneNumberUtil.VALID_PHONE_NUMBER_PATTERN_ = new RegExp(\"^\" + i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_PHONE_NUMBER_PATTERN_ + \"$|^\" + i18n.phonenumbers.PhoneNumberUtil.VALID_PHONE_NUMBER_ + \"(?:\" + i18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERNS_FOR_PARSING_ + \")?$\", \"i\");\r\ni18n.phonenumbers.PhoneNumberUtil.NON_DIGITS_PATTERN_ = /\\D+/;\r\ni18n.phonenumbers.PhoneNumberUtil.FIRST_GROUP_PATTERN_ = /(\\$\\d)/;\r\ni18n.phonenumbers.PhoneNumberUtil.NP_PATTERN_ = /\\$NP/;\r\ni18n.phonenumbers.PhoneNumberUtil.FG_PATTERN_ = /\\$FG/;\r\ni18n.phonenumbers.PhoneNumberUtil.CC_PATTERN_ = /\\$CC/;\r\ni18n.phonenumbers.PhoneNumberUtil.FIRST_GROUP_ONLY_PREFIX_PATTERN_ = /^\\(?\\$1\\)?$/;\r\ni18n.phonenumbers.PhoneNumberUtil.REGION_CODE_FOR_NON_GEO_ENTITY = \"001\";\r\ni18n.phonenumbers.PhoneNumberFormat = {E164:0, INTERNATIONAL:1, NATIONAL:2, RFC3966:3};\r\ni18n.phonenumbers.PhoneNumberType = {FIXED_LINE:0, MOBILE:1, FIXED_LINE_OR_MOBILE:2, TOLL_FREE:3, PREMIUM_RATE:4, SHARED_COST:5, VOIP:6, PERSONAL_NUMBER:7, PAGER:8, UAN:9, VOICEMAIL:10, UNKNOWN:-1};\r\ni18n.phonenumbers.PhoneNumberUtil.MatchType = {NOT_A_NUMBER:0, NO_MATCH:1, SHORT_NSN_MATCH:2, NSN_MATCH:3, EXACT_MATCH:4};\r\ni18n.phonenumbers.PhoneNumberUtil.ValidationResult = {IS_POSSIBLE:0, IS_POSSIBLE_LOCAL_ONLY:4, INVALID_COUNTRY_CODE:1, TOO_SHORT:2, INVALID_LENGTH:5, TOO_LONG:3};\r\ni18n.phonenumbers.PhoneNumberUtil.extractPossibleNumber = function(a) {\r\n  var b = a.search(i18n.phonenumbers.PhoneNumberUtil.VALID_START_CHAR_PATTERN_);\r\n  0 <= b ? (a = a.substring(b), a = a.replace(i18n.phonenumbers.PhoneNumberUtil.UNWANTED_END_CHAR_PATTERN_, \"\"), b = a.search(i18n.phonenumbers.PhoneNumberUtil.SECOND_NUMBER_START_PATTERN_), 0 <= b && (a = a.substring(0, b))) : a = \"\";\r\n  return a;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.isViablePhoneNumber = function(a) {\r\n  return a.length < i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_ ? !1 : i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(i18n.phonenumbers.PhoneNumberUtil.VALID_PHONE_NUMBER_PATTERN_, a);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.normalize = function(a) {\r\n  return i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(i18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_PHONE_PATTERN_, a) ? i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_(a, i18n.phonenumbers.PhoneNumberUtil.ALL_NORMALIZATION_MAPPINGS_, !0) : i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly(a);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.normalizeSB_ = function(a) {\r\n  var b = i18n.phonenumbers.PhoneNumberUtil.normalize(a.toString());\r\n  a.clear();\r\n  a.append(b);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly = function(a) {\r\n  return i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_(a, i18n.phonenumbers.PhoneNumberUtil.DIGIT_MAPPINGS, !0);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.normalizeDiallableCharsOnly = function(a) {\r\n  return i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_(a, i18n.phonenumbers.PhoneNumberUtil.DIALLABLE_CHAR_MAPPINGS_, !0);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.convertAlphaCharactersInNumber = function(a) {\r\n  return i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_(a, i18n.phonenumbers.PhoneNumberUtil.ALL_NORMALIZATION_MAPPINGS_, !1);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getLengthOfGeographicalAreaCode = function(a) {\r\n  var b = this.getMetadataForRegion(this.getRegionCodeForNumber(a));\r\n  return null != b && (b.hasNationalPrefix() || a.hasItalianLeadingZero()) && this.isNumberGeographical(a) ? this.getLengthOfNationalDestinationCode(a) : 0;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getLengthOfNationalDestinationCode = function(a) {\r\n  if (a.hasExtension()) {\r\n    var b = a.clone();\r\n    b.clearExtension();\r\n  } else {\r\n    b = a;\r\n  }\r\n  b = this.format(b, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL).split(i18n.phonenumbers.PhoneNumberUtil.NON_DIGITS_PATTERN_);\r\n  0 == b[0].length && b.shift();\r\n  return 2 >= b.length ? 0 : this.getNumberType(a) == i18n.phonenumbers.PhoneNumberType.MOBILE && (a = i18n.phonenumbers.PhoneNumberUtil.getCountryMobileToken(a.getCountryCodeOrDefault()), \"\" != a) ? b[2].length + a.length : b[1].length;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.getCountryMobileToken = function(a) {\r\n  return i18n.phonenumbers.PhoneNumberUtil.MOBILE_TOKEN_MAPPINGS_[a] || \"\";\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getSupportedRegions = function() {\r\n  return goog.array.filter(Object.keys(i18n.phonenumbers.metadata.countryToMetadata), function(a) {\r\n    return isNaN(a);\r\n  });\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getSupportedGlobalNetworkCallingCodes = function() {\r\n  var a = goog.array.filter(Object.keys(i18n.phonenumbers.metadata.countryToMetadata), function(a) {\r\n    return !isNaN(a);\r\n  });\r\n  return goog.array.map(a, function(a) {\r\n    return parseInt(a, 10);\r\n  });\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getSupportedCallingCodes = function() {\r\n  var a = Object.keys(i18n.phonenumbers.metadata.countryCodeToRegionCodeMap);\r\n  return goog.array.join(this.getSupportedGlobalNetworkCallingCodes(), goog.array.map(a, function(a) {\r\n    return parseInt(a, 10);\r\n  }));\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.descHasPossibleNumberData_ = function(a) {\r\n  return null != a && (1 != a.possibleLengthCount() || -1 != a.possibleLengthArray()[0]);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.descHasData_ = function(a) {\r\n  return null != a && (a.hasExampleNumber() || i18n.phonenumbers.PhoneNumberUtil.descHasPossibleNumberData_(a) || a.hasNationalNumberPattern());\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.getSupportedTypesForMetadata_ = function(a) {\r\n  var b = [];\r\n  goog.object.forEach(i18n.phonenumbers.PhoneNumberType, function(c) {\r\n    if (c != i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE && c != i18n.phonenumbers.PhoneNumberType.UNKNOWN) {\r\n      var d = i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_(a, c);\r\n      i18n.phonenumbers.PhoneNumberUtil.descHasData_(d) && b.push(c);\r\n    }\r\n  });\r\n  return b;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getSupportedTypesForRegion = function(a) {\r\n  return this.isValidRegionCode_(a) ? i18n.phonenumbers.PhoneNumberUtil.getSupportedTypesForMetadata_(this.getMetadataForRegion(a)) : [];\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getSupportedTypesForNonGeoEntity = function(a) {\r\n  a = this.getMetadataForNonGeographicalRegion(a);\r\n  return null == a ? [] : i18n.phonenumbers.PhoneNumberUtil.getSupportedTypesForMetadata_(a);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.normalizeHelper_ = function(a, b, c) {\r\n  for (var d = new goog.string.StringBuffer, e, f, g = a.length, h = 0; h < g; ++h) {\r\n    e = a.charAt(h), f = b[e.toUpperCase()], null != f ? d.append(f) : c || d.append(e);\r\n  }\r\n  return d.toString();\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.formattingRuleHasFirstGroupOnly = function(a) {\r\n  return 0 == a.length || i18n.phonenumbers.PhoneNumberUtil.FIRST_GROUP_ONLY_PREFIX_PATTERN_.test(a);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isNumberGeographical = function(a) {\r\n  var b = this.getNumberType(a);\r\n  return b == i18n.phonenumbers.PhoneNumberType.FIXED_LINE || b == i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE || goog.array.contains(i18n.phonenumbers.PhoneNumberUtil.GEO_MOBILE_COUNTRIES_, a.getCountryCodeOrDefault()) && b == i18n.phonenumbers.PhoneNumberType.MOBILE;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isValidRegionCode_ = function(a) {\r\n  return null != a && isNaN(a) && a.toUpperCase() in i18n.phonenumbers.metadata.countryToMetadata;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.hasValidCountryCallingCode_ = function(a) {\r\n  return a in i18n.phonenumbers.metadata.countryCodeToRegionCodeMap;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.format = function(a, b) {\r\n  if (0 == a.getNationalNumber() && a.hasRawInput()) {\r\n    var c = a.getRawInputOrDefault();\r\n    if (0 < c.length) {\r\n      return c;\r\n    }\r\n  }\r\n  c = a.getCountryCodeOrDefault();\r\n  var d = this.getNationalSignificantNumber(a);\r\n  if (b == i18n.phonenumbers.PhoneNumberFormat.E164) {\r\n    return this.prefixNumberWithCountryCallingCode_(c, i18n.phonenumbers.PhoneNumberFormat.E164, d, \"\");\r\n  }\r\n  if (!this.hasValidCountryCallingCode_(c)) {\r\n    return d;\r\n  }\r\n  var e = this.getRegionCodeForCountryCode(c), f = this.getMetadataForRegionOrCallingCode_(c, e);\r\n  e = this.maybeGetFormattedExtension_(a, f, b);\r\n  d = this.formatNsn_(d, f, b);\r\n  return this.prefixNumberWithCountryCallingCode_(c, b, d, e);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.formatByPattern = function(a, b, c) {\r\n  var d = a.getCountryCodeOrDefault(), e = this.getNationalSignificantNumber(a);\r\n  if (!this.hasValidCountryCallingCode_(d)) {\r\n    return e;\r\n  }\r\n  var f = this.getRegionCodeForCountryCode(d);\r\n  f = this.getMetadataForRegionOrCallingCode_(d, f);\r\n  var g = this.chooseFormattingPatternForNumber_(c, e);\r\n  if (null != g) {\r\n    c = g.clone();\r\n    g = g.getNationalPrefixFormattingRuleOrDefault();\r\n    if (0 < g.length) {\r\n      var h = f.getNationalPrefixOrDefault();\r\n      0 < h.length ? (g = g.replace(i18n.phonenumbers.PhoneNumberUtil.NP_PATTERN_, h).replace(i18n.phonenumbers.PhoneNumberUtil.FG_PATTERN_, \"$1\"), c.setNationalPrefixFormattingRule(g)) : c.clearNationalPrefixFormattingRule();\r\n    }\r\n    e = this.formatNsnUsingPattern_(e, c, b);\r\n  }\r\n  a = this.maybeGetFormattedExtension_(a, f, b);\r\n  return this.prefixNumberWithCountryCallingCode_(d, b, e, a);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.formatNationalNumberWithCarrierCode = function(a, b) {\r\n  var c = a.getCountryCodeOrDefault(), d = this.getNationalSignificantNumber(a);\r\n  if (!this.hasValidCountryCallingCode_(c)) {\r\n    return d;\r\n  }\r\n  var e = this.getRegionCodeForCountryCode(c), f = this.getMetadataForRegionOrCallingCode_(c, e);\r\n  e = this.maybeGetFormattedExtension_(a, f, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);\r\n  d = this.formatNsn_(d, f, i18n.phonenumbers.PhoneNumberFormat.NATIONAL, b);\r\n  return this.prefixNumberWithCountryCallingCode_(c, i18n.phonenumbers.PhoneNumberFormat.NATIONAL, d, e);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getMetadataForRegionOrCallingCode_ = function(a, b) {\r\n  return i18n.phonenumbers.PhoneNumberUtil.REGION_CODE_FOR_NON_GEO_ENTITY == b ? this.getMetadataForNonGeographicalRegion(a) : this.getMetadataForRegion(b);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.formatNationalNumberWithPreferredCarrierCode = function(a, b) {\r\n  return this.formatNationalNumberWithCarrierCode(a, 0 < a.getPreferredDomesticCarrierCodeOrDefault().length ? a.getPreferredDomesticCarrierCodeOrDefault() : b);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.formatNumberForMobileDialing = function(a, b, c) {\r\n  var d = a.getCountryCodeOrDefault();\r\n  if (!this.hasValidCountryCallingCode_(d)) {\r\n    return a.hasRawInput() ? a.getRawInputOrDefault() : \"\";\r\n  }\r\n  var e = \"\";\r\n  a = a.clone();\r\n  a.clearExtension();\r\n  var f = this.getRegionCodeForCountryCode(d), g = this.getNumberType(a), h = g != i18n.phonenumbers.PhoneNumberType.UNKNOWN;\r\n  if (b == f) {\r\n    e = g == i18n.phonenumbers.PhoneNumberType.FIXED_LINE || g == i18n.phonenumbers.PhoneNumberType.MOBILE || g == i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE, \"CO\" == f && g == i18n.phonenumbers.PhoneNumberType.FIXED_LINE ? e = this.formatNationalNumberWithCarrierCode(a, i18n.phonenumbers.PhoneNumberUtil.COLOMBIA_MOBILE_TO_FIXED_LINE_PREFIX_) : \"BR\" == f && e ? e = 0 < a.getPreferredDomesticCarrierCodeOrDefault().length ? this.formatNationalNumberWithPreferredCarrierCode(a, \"\") : \"\" : \r\n    h && \"HU\" == f ? e = this.getNddPrefixForRegion(f, !0) + \" \" + this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL) : d == i18n.phonenumbers.PhoneNumberUtil.NANPA_COUNTRY_CODE_ ? (b = this.getMetadataForRegion(b), e = this.canBeInternationallyDialled(a) && this.testNumberLength_(this.getNationalSignificantNumber(a), b) != i18n.phonenumbers.PhoneNumberUtil.ValidationResult.TOO_SHORT ? this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL) : this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL)) : \r\n    e = (f == i18n.phonenumbers.PhoneNumberUtil.REGION_CODE_FOR_NON_GEO_ENTITY || (\"MX\" == f || \"CL\" == f || \"UZ\" == f) && e) && this.canBeInternationallyDialled(a) ? this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL) : this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);\r\n  } else {\r\n    if (h && this.canBeInternationallyDialled(a)) {\r\n      return c ? this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL) : this.format(a, i18n.phonenumbers.PhoneNumberFormat.E164);\r\n    }\r\n  }\r\n  return c ? e : i18n.phonenumbers.PhoneNumberUtil.normalizeDiallableCharsOnly(e);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.formatOutOfCountryCallingNumber = function(a, b) {\r\n  if (!this.isValidRegionCode_(b)) {\r\n    return this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL);\r\n  }\r\n  var c = a.getCountryCodeOrDefault(), d = this.getNationalSignificantNumber(a);\r\n  if (!this.hasValidCountryCallingCode_(c)) {\r\n    return d;\r\n  }\r\n  if (c == i18n.phonenumbers.PhoneNumberUtil.NANPA_COUNTRY_CODE_) {\r\n    if (this.isNANPACountry(b)) {\r\n      return c + \" \" + this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);\r\n    }\r\n  } else {\r\n    if (c == this.getCountryCodeForValidRegion_(b)) {\r\n      return this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);\r\n    }\r\n  }\r\n  var e = this.getMetadataForRegion(b), f = e.getInternationalPrefixOrDefault(), g = \"\";\r\n  i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(i18n.phonenumbers.PhoneNumberUtil.SINGLE_INTERNATIONAL_PREFIX_, f) ? g = f : e.hasPreferredInternationalPrefix() && (g = e.getPreferredInternationalPrefixOrDefault());\r\n  e = this.getRegionCodeForCountryCode(c);\r\n  e = this.getMetadataForRegionOrCallingCode_(c, e);\r\n  d = this.formatNsn_(d, e, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL);\r\n  e = this.maybeGetFormattedExtension_(a, e, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL);\r\n  return 0 < g.length ? g + \" \" + c + \" \" + d + e : this.prefixNumberWithCountryCallingCode_(c, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL, d, e);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.formatInOriginalFormat = function(a, b) {\r\n  if (a.hasRawInput() && !this.hasFormattingPatternForNumber_(a)) {\r\n    return a.getRawInputOrDefault();\r\n  }\r\n  if (!a.hasCountryCodeSource()) {\r\n    return this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);\r\n  }\r\n  switch(a.getCountryCodeSource()) {\r\n    case i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITH_PLUS_SIGN:\r\n      var c = this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL);\r\n      break;\r\n    case i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITH_IDD:\r\n      c = this.formatOutOfCountryCallingNumber(a, b);\r\n      break;\r\n    case i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITHOUT_PLUS_SIGN:\r\n      c = this.format(a, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL).substring(1);\r\n      break;\r\n    default:\r\n      var d = this.getRegionCodeForCountryCode(a.getCountryCodeOrDefault()), e = this.getNddPrefixForRegion(d, !0);\r\n      c = this.format(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);\r\n      if (null != e && 0 != e.length && !this.rawInputContainsNationalPrefix_(a.getRawInputOrDefault(), e, d) && (d = this.getMetadataForRegion(d), e = this.getNationalSignificantNumber(a), d = this.chooseFormattingPatternForNumber_(d.numberFormatArray(), e), null != d)) {\r\n        e = d.getNationalPrefixFormattingRuleOrDefault();\r\n        var f = e.indexOf(\"$1\");\r\n        0 >= f || (e = e.substring(0, f), e = i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly(e), 0 != e.length && (c = d.clone(), c.clearNationalPrefixFormattingRule(), c = this.formatByPattern(a, i18n.phonenumbers.PhoneNumberFormat.NATIONAL, [c])));\r\n      }\r\n  }\r\n  d = a.getRawInputOrDefault();\r\n  null != c && 0 < d.length && (e = i18n.phonenumbers.PhoneNumberUtil.normalizeDiallableCharsOnly(c), f = i18n.phonenumbers.PhoneNumberUtil.normalizeDiallableCharsOnly(d), e != f && (c = d));\r\n  return c;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.rawInputContainsNationalPrefix_ = function(a, b, c) {\r\n  a = i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly(a);\r\n  if (goog.string.startsWith(a, b)) {\r\n    try {\r\n      return this.isValidNumber(this.parse(a.substring(b.length), c));\r\n    } catch (d) {\r\n    }\r\n  }\r\n  return !1;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.hasFormattingPatternForNumber_ = function(a) {\r\n  var b = a.getCountryCodeOrDefault(), c = this.getRegionCodeForCountryCode(b);\r\n  b = this.getMetadataForRegionOrCallingCode_(b, c);\r\n  if (null == b) {\r\n    return !1;\r\n  }\r\n  a = this.getNationalSignificantNumber(a);\r\n  return null != this.chooseFormattingPatternForNumber_(b.numberFormatArray(), a);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.formatOutOfCountryKeepingAlphaChars = function(a, b) {\r\n  var c = a.getRawInputOrDefault();\r\n  if (0 == c.length) {\r\n    return this.formatOutOfCountryCallingNumber(a, b);\r\n  }\r\n  var d = a.getCountryCodeOrDefault();\r\n  if (!this.hasValidCountryCallingCode_(d)) {\r\n    return c;\r\n  }\r\n  c = i18n.phonenumbers.PhoneNumberUtil.normalizeHelper_(c, i18n.phonenumbers.PhoneNumberUtil.ALL_PLUS_NUMBER_GROUPING_SYMBOLS_, !0);\r\n  var e = this.getNationalSignificantNumber(a);\r\n  if (3 < e.length) {\r\n    var f = c.indexOf(e.substring(0, 3));\r\n    -1 != f && (c = c.substring(f));\r\n  }\r\n  f = this.getMetadataForRegion(b);\r\n  if (d == i18n.phonenumbers.PhoneNumberUtil.NANPA_COUNTRY_CODE_) {\r\n    if (this.isNANPACountry(b)) {\r\n      return d + \" \" + c;\r\n    }\r\n  } else {\r\n    if (null != f && d == this.getCountryCodeForValidRegion_(b)) {\r\n      d = this.chooseFormattingPatternForNumber_(f.numberFormatArray(), e);\r\n      if (null == d) {\r\n        return c;\r\n      }\r\n      d = d.clone();\r\n      d.setPattern(\"(\\\\d+)(.*)\");\r\n      d.setFormat(\"$1$2\");\r\n      return this.formatNsnUsingPattern_(c, d, i18n.phonenumbers.PhoneNumberFormat.NATIONAL);\r\n    }\r\n  }\r\n  e = \"\";\r\n  null != f && (e = f.getInternationalPrefixOrDefault(), e = i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(i18n.phonenumbers.PhoneNumberUtil.SINGLE_INTERNATIONAL_PREFIX_, e) ? e : f.getPreferredInternationalPrefixOrDefault());\r\n  f = this.getRegionCodeForCountryCode(d);\r\n  f = this.getMetadataForRegionOrCallingCode_(d, f);\r\n  f = this.maybeGetFormattedExtension_(a, f, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL);\r\n  return 0 < e.length ? e + \" \" + d + \" \" + c + f : this.prefixNumberWithCountryCallingCode_(d, i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL, c, f);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getNationalSignificantNumber = function(a) {\r\n  if (!a.hasNationalNumber()) {\r\n    return \"\";\r\n  }\r\n  var b = \"\" + a.getNationalNumber();\r\n  return a.hasItalianLeadingZero() && a.getItalianLeadingZero() && 0 < a.getNumberOfLeadingZerosOrDefault() ? Array(a.getNumberOfLeadingZerosOrDefault() + 1).join(\"0\") + b : b;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.prefixNumberWithCountryCallingCode_ = function(a, b, c, d) {\r\n  switch(b) {\r\n    case i18n.phonenumbers.PhoneNumberFormat.E164:\r\n      return i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN + a + c + d;\r\n    case i18n.phonenumbers.PhoneNumberFormat.INTERNATIONAL:\r\n      return i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN + a + \" \" + c + d;\r\n    case i18n.phonenumbers.PhoneNumberFormat.RFC3966:\r\n      return i18n.phonenumbers.PhoneNumberUtil.RFC3966_PREFIX_ + i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN + a + \"-\" + c + d;\r\n    default:\r\n      return c + d;\r\n  }\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.formatNsn_ = function(a, b, c, d) {\r\n  b = 0 == b.intlNumberFormatArray().length || c == i18n.phonenumbers.PhoneNumberFormat.NATIONAL ? b.numberFormatArray() : b.intlNumberFormatArray();\r\n  b = this.chooseFormattingPatternForNumber_(b, a);\r\n  return null == b ? a : this.formatNsnUsingPattern_(a, b, c, d);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.chooseFormattingPatternForNumber_ = function(a, b) {\r\n  for (var c, d = a.length, e = 0; e < d; ++e) {\r\n    c = a[e];\r\n    var f = c.leadingDigitsPatternCount();\r\n    if (0 == f || 0 == b.search(c.getLeadingDigitsPattern(f - 1))) {\r\n      if (f = new RegExp(c.getPattern()), i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(f, b)) {\r\n        return c;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.formatNsnUsingPattern_ = function(a, b, c, d) {\r\n  var e = b.getFormatOrDefault(), f = new RegExp(b.getPattern()), g = b.getDomesticCarrierCodeFormattingRuleOrDefault();\r\n  c == i18n.phonenumbers.PhoneNumberFormat.NATIONAL && null != d && 0 < d.length && 0 < g.length ? (b = g.replace(i18n.phonenumbers.PhoneNumberUtil.CC_PATTERN_, d), e = e.replace(i18n.phonenumbers.PhoneNumberUtil.FIRST_GROUP_PATTERN_, b), a = a.replace(f, e)) : (b = b.getNationalPrefixFormattingRuleOrDefault(), a = c == i18n.phonenumbers.PhoneNumberFormat.NATIONAL && null != b && 0 < b.length ? a.replace(f, e.replace(i18n.phonenumbers.PhoneNumberUtil.FIRST_GROUP_PATTERN_, b)) : a.replace(f, e));\r\n  c == i18n.phonenumbers.PhoneNumberFormat.RFC3966 && (a = a.replace(new RegExp(\"^\" + i18n.phonenumbers.PhoneNumberUtil.SEPARATOR_PATTERN_), \"\"), a = a.replace(new RegExp(i18n.phonenumbers.PhoneNumberUtil.SEPARATOR_PATTERN_, \"g\"), \"-\"));\r\n  return a;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getExampleNumber = function(a) {\r\n  return this.getExampleNumberForType(a, i18n.phonenumbers.PhoneNumberType.FIXED_LINE);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getExampleNumberForType = function(a, b) {\r\n  if (!this.isValidRegionCode_(a)) {\r\n    return null;\r\n  }\r\n  var c = i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_(this.getMetadataForRegion(a), b);\r\n  try {\r\n    if (c.hasExampleNumber()) {\r\n      return this.parse(c.getExampleNumber(), a);\r\n    }\r\n  } catch (d) {\r\n  }\r\n  return null;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getExampleNumberForNonGeoEntity = function(a) {\r\n  var b = this.getMetadataForNonGeographicalRegion(a);\r\n  if (null != b && (b = goog.array.find([b.getMobile(), b.getTollFree(), b.getSharedCost(), b.getVoip(), b.getVoicemail(), b.getUan(), b.getPremiumRate()], function(a, b) {\r\n    return a.hasExampleNumber();\r\n  }), null != b)) {\r\n    try {\r\n      return this.parse(\"+\" + a + b.getExampleNumber(), \"ZZ\");\r\n    } catch (c) {\r\n    }\r\n  }\r\n  return null;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.maybeGetFormattedExtension_ = function(a, b, c) {\r\n  return a.hasExtension() && 0 != a.getExtension().length ? c == i18n.phonenumbers.PhoneNumberFormat.RFC3966 ? i18n.phonenumbers.PhoneNumberUtil.RFC3966_EXTN_PREFIX_ + a.getExtension() : b.hasPreferredExtnPrefix() ? b.getPreferredExtnPrefix() + a.getExtensionOrDefault() : i18n.phonenumbers.PhoneNumberUtil.DEFAULT_EXTN_PREFIX_ + a.getExtensionOrDefault() : \"\";\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_ = function(a, b) {\r\n  switch(b) {\r\n    case i18n.phonenumbers.PhoneNumberType.PREMIUM_RATE:\r\n      return a.getPremiumRate();\r\n    case i18n.phonenumbers.PhoneNumberType.TOLL_FREE:\r\n      return a.getTollFree();\r\n    case i18n.phonenumbers.PhoneNumberType.MOBILE:\r\n      return a.getMobile();\r\n    case i18n.phonenumbers.PhoneNumberType.FIXED_LINE:\r\n    case i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE:\r\n      return a.getFixedLine();\r\n    case i18n.phonenumbers.PhoneNumberType.SHARED_COST:\r\n      return a.getSharedCost();\r\n    case i18n.phonenumbers.PhoneNumberType.VOIP:\r\n      return a.getVoip();\r\n    case i18n.phonenumbers.PhoneNumberType.PERSONAL_NUMBER:\r\n      return a.getPersonalNumber();\r\n    case i18n.phonenumbers.PhoneNumberType.PAGER:\r\n      return a.getPager();\r\n    case i18n.phonenumbers.PhoneNumberType.UAN:\r\n      return a.getUan();\r\n    case i18n.phonenumbers.PhoneNumberType.VOICEMAIL:\r\n      return a.getVoicemail();\r\n    default:\r\n      return a.getGeneralDesc();\r\n  }\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getNumberType = function(a) {\r\n  var b = this.getRegionCodeForNumber(a);\r\n  b = this.getMetadataForRegionOrCallingCode_(a.getCountryCodeOrDefault(), b);\r\n  if (null == b) {\r\n    return i18n.phonenumbers.PhoneNumberType.UNKNOWN;\r\n  }\r\n  a = this.getNationalSignificantNumber(a);\r\n  return this.getNumberTypeHelper_(a, b);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getNumberTypeHelper_ = function(a, b) {\r\n  return this.isNumberMatchingDesc_(a, b.getGeneralDesc()) ? this.isNumberMatchingDesc_(a, b.getPremiumRate()) ? i18n.phonenumbers.PhoneNumberType.PREMIUM_RATE : this.isNumberMatchingDesc_(a, b.getTollFree()) ? i18n.phonenumbers.PhoneNumberType.TOLL_FREE : this.isNumberMatchingDesc_(a, b.getSharedCost()) ? i18n.phonenumbers.PhoneNumberType.SHARED_COST : this.isNumberMatchingDesc_(a, b.getVoip()) ? i18n.phonenumbers.PhoneNumberType.VOIP : this.isNumberMatchingDesc_(a, b.getPersonalNumber()) ? i18n.phonenumbers.PhoneNumberType.PERSONAL_NUMBER : \r\n  this.isNumberMatchingDesc_(a, b.getPager()) ? i18n.phonenumbers.PhoneNumberType.PAGER : this.isNumberMatchingDesc_(a, b.getUan()) ? i18n.phonenumbers.PhoneNumberType.UAN : this.isNumberMatchingDesc_(a, b.getVoicemail()) ? i18n.phonenumbers.PhoneNumberType.VOICEMAIL : this.isNumberMatchingDesc_(a, b.getFixedLine()) ? b.getSameMobileAndFixedLinePattern() || this.isNumberMatchingDesc_(a, b.getMobile()) ? i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE : i18n.phonenumbers.PhoneNumberType.FIXED_LINE : \r\n  !b.getSameMobileAndFixedLinePattern() && this.isNumberMatchingDesc_(a, b.getMobile()) ? i18n.phonenumbers.PhoneNumberType.MOBILE : i18n.phonenumbers.PhoneNumberType.UNKNOWN : i18n.phonenumbers.PhoneNumberType.UNKNOWN;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getMetadataForRegion = function(a) {\r\n  if (null == a) {\r\n    return null;\r\n  }\r\n  a = a.toUpperCase();\r\n  var b = this.regionToMetadataMap[a];\r\n  if (null == b) {\r\n    b = new goog.proto2.PbLiteSerializer;\r\n    var c = i18n.phonenumbers.metadata.countryToMetadata[a];\r\n    if (null == c) {\r\n      return null;\r\n    }\r\n    b = b.deserialize(i18n.phonenumbers.PhoneMetadata.getDescriptor(), c);\r\n    this.regionToMetadataMap[a] = b;\r\n  }\r\n  return b;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getMetadataForNonGeographicalRegion = function(a) {\r\n  return this.getMetadataForRegion(\"\" + a);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isNumberMatchingDesc_ = function(a, b) {\r\n  var c = a.length;\r\n  return 0 < b.possibleLengthCount() && -1 == goog.array.indexOf(b.possibleLengthArray(), c) ? !1 : i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(b.getNationalNumberPatternOrDefault(), a);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isValidNumber = function(a) {\r\n  var b = this.getRegionCodeForNumber(a);\r\n  return this.isValidNumberForRegion(a, b);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isValidNumberForRegion = function(a, b) {\r\n  var c = a.getCountryCodeOrDefault(), d = this.getMetadataForRegionOrCallingCode_(c, b);\r\n  if (null == d || i18n.phonenumbers.PhoneNumberUtil.REGION_CODE_FOR_NON_GEO_ENTITY != b && c != this.getCountryCodeForValidRegion_(b)) {\r\n    return !1;\r\n  }\r\n  c = this.getNationalSignificantNumber(a);\r\n  return this.getNumberTypeHelper_(c, d) != i18n.phonenumbers.PhoneNumberType.UNKNOWN;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getRegionCodeForNumber = function(a) {\r\n  if (null == a) {\r\n    return null;\r\n  }\r\n  var b = a.getCountryCodeOrDefault();\r\n  b = i18n.phonenumbers.metadata.countryCodeToRegionCodeMap[b];\r\n  return null == b ? null : 1 == b.length ? b[0] : this.getRegionCodeForNumberFromRegionList_(a, b);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getRegionCodeForNumberFromRegionList_ = function(a, b) {\r\n  for (var c = this.getNationalSignificantNumber(a), d, e = b.length, f = 0; f < e; f++) {\r\n    d = b[f];\r\n    var g = this.getMetadataForRegion(d);\r\n    if (g.hasLeadingDigits()) {\r\n      if (0 == c.search(g.getLeadingDigits())) {\r\n        return d;\r\n      }\r\n    } else {\r\n      if (this.getNumberTypeHelper_(c, g) != i18n.phonenumbers.PhoneNumberType.UNKNOWN) {\r\n        return d;\r\n      }\r\n    }\r\n  }\r\n  return null;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getRegionCodeForCountryCode = function(a) {\r\n  a = i18n.phonenumbers.metadata.countryCodeToRegionCodeMap[a];\r\n  return null == a ? i18n.phonenumbers.PhoneNumberUtil.UNKNOWN_REGION_ : a[0];\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getRegionCodesForCountryCode = function(a) {\r\n  a = i18n.phonenumbers.metadata.countryCodeToRegionCodeMap[a];\r\n  return null == a ? [] : a;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getCountryCodeForRegion = function(a) {\r\n  return this.isValidRegionCode_(a) ? this.getCountryCodeForValidRegion_(a) : 0;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getCountryCodeForValidRegion_ = function(a) {\r\n  var b = this.getMetadataForRegion(a);\r\n  if (null == b) {\r\n    throw Error(\"Invalid region code: \" + a);\r\n  }\r\n  return b.getCountryCodeOrDefault();\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.getNddPrefixForRegion = function(a, b) {\r\n  var c = this.getMetadataForRegion(a);\r\n  if (null == c) {\r\n    return null;\r\n  }\r\n  c = c.getNationalPrefixOrDefault();\r\n  if (0 == c.length) {\r\n    return null;\r\n  }\r\n  b && (c = c.replace(\"~\", \"\"));\r\n  return c;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isNANPACountry = function(a) {\r\n  return null != a && goog.array.contains(i18n.phonenumbers.metadata.countryCodeToRegionCodeMap[i18n.phonenumbers.PhoneNumberUtil.NANPA_COUNTRY_CODE_], a.toUpperCase());\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isAlphaNumber = function(a) {\r\n  if (!i18n.phonenumbers.PhoneNumberUtil.isViablePhoneNumber(a)) {\r\n    return !1;\r\n  }\r\n  a = new goog.string.StringBuffer(a);\r\n  this.maybeStripExtension(a);\r\n  return i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(i18n.phonenumbers.PhoneNumberUtil.VALID_ALPHA_PHONE_PATTERN_, a.toString());\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isPossibleNumber = function(a) {\r\n  a = this.isPossibleNumberWithReason(a);\r\n  return a == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE || a == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE_LOCAL_ONLY;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isPossibleNumberForType = function(a, b) {\r\n  var c = this.isPossibleNumberForTypeWithReason(a, b);\r\n  return c == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE || c == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE_LOCAL_ONLY;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.testNumberLength_ = function(a, b) {\r\n  return this.testNumberLengthForType_(a, b, i18n.phonenumbers.PhoneNumberType.UNKNOWN);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.testNumberLengthForType_ = function(a, b, c) {\r\n  var d = i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_(b, c), e = 0 == d.possibleLengthCount() ? b.getGeneralDesc().possibleLengthArray() : d.possibleLengthArray();\r\n  d = d.possibleLengthLocalOnlyArray();\r\n  if (c == i18n.phonenumbers.PhoneNumberType.FIXED_LINE_OR_MOBILE) {\r\n    if (i18n.phonenumbers.PhoneNumberUtil.descHasPossibleNumberData_(i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_(b, i18n.phonenumbers.PhoneNumberType.FIXED_LINE))) {\r\n      c = i18n.phonenumbers.PhoneNumberUtil.getNumberDescByType_(b, i18n.phonenumbers.PhoneNumberType.MOBILE), i18n.phonenumbers.PhoneNumberUtil.descHasPossibleNumberData_(c) && (e = e.concat(0 == c.possibleLengthCount() ? b.getGeneralDesc().possibleLengthArray() : c.possibleLengthArray()), goog.array.sort(e), 0 == d.length ? d = c.possibleLengthLocalOnlyArray() : (d = d.concat(c.possibleLengthLocalOnlyArray()), goog.array.sort(d)));\r\n    } else {\r\n      return this.testNumberLengthForType_(a, b, i18n.phonenumbers.PhoneNumberType.MOBILE);\r\n    }\r\n  }\r\n  if (-1 == e[0]) {\r\n    return i18n.phonenumbers.PhoneNumberUtil.ValidationResult.INVALID_LENGTH;\r\n  }\r\n  a = a.length;\r\n  if (-1 < goog.array.indexOf(d, a)) {\r\n    return i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE_LOCAL_ONLY;\r\n  }\r\n  b = e[0];\r\n  return b == a ? i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE : b > a ? i18n.phonenumbers.PhoneNumberUtil.ValidationResult.TOO_SHORT : e[e.length - 1] < a ? i18n.phonenumbers.PhoneNumberUtil.ValidationResult.TOO_LONG : -1 < goog.array.indexOf(e, a, 1) ? i18n.phonenumbers.PhoneNumberUtil.ValidationResult.IS_POSSIBLE : i18n.phonenumbers.PhoneNumberUtil.ValidationResult.INVALID_LENGTH;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isPossibleNumberWithReason = function(a) {\r\n  return this.isPossibleNumberForTypeWithReason(a, i18n.phonenumbers.PhoneNumberType.UNKNOWN);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isPossibleNumberForTypeWithReason = function(a, b) {\r\n  var c = this.getNationalSignificantNumber(a), d = a.getCountryCodeOrDefault();\r\n  if (!this.hasValidCountryCallingCode_(d)) {\r\n    return i18n.phonenumbers.PhoneNumberUtil.ValidationResult.INVALID_COUNTRY_CODE;\r\n  }\r\n  var e = this.getRegionCodeForCountryCode(d);\r\n  d = this.getMetadataForRegionOrCallingCode_(d, e);\r\n  return this.testNumberLengthForType_(c, d, b);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isPossibleNumberString = function(a, b) {\r\n  try {\r\n    return this.isPossibleNumber(this.parse(a, b));\r\n  } catch (c) {\r\n    return !1;\r\n  }\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.truncateTooLongNumber = function(a) {\r\n  if (this.isValidNumber(a)) {\r\n    return !0;\r\n  }\r\n  var b = a.clone(), c = a.getNationalNumberOrDefault();\r\n  do {\r\n    if (c = Math.floor(c / 10), b.setNationalNumber(c), 0 == c || this.isPossibleNumberWithReason(b) == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.TOO_SHORT) {\r\n      return !1;\r\n    }\r\n  } while (!this.isValidNumber(b));\r\n  a.setNationalNumber(c);\r\n  return !0;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.extractCountryCode = function(a, b) {\r\n  var c = a.toString();\r\n  if (0 == c.length || \"0\" == c.charAt(0)) {\r\n    return 0;\r\n  }\r\n  for (var d, e = c.length, f = 1; f <= i18n.phonenumbers.PhoneNumberUtil.MAX_LENGTH_COUNTRY_CODE_ && f <= e; ++f) {\r\n    if (d = parseInt(c.substring(0, f), 10), d in i18n.phonenumbers.metadata.countryCodeToRegionCodeMap) {\r\n      return b.append(c.substring(f)), d;\r\n    }\r\n  }\r\n  return 0;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.maybeExtractCountryCode = function(a, b, c, d, e) {\r\n  if (0 == a.length) {\r\n    return 0;\r\n  }\r\n  a = new goog.string.StringBuffer(a);\r\n  var f;\r\n  null != b && (f = b.getInternationalPrefix());\r\n  null == f && (f = \"NonMatch\");\r\n  f = this.maybeStripInternationalPrefixAndNormalize(a, f);\r\n  d && e.setCountryCodeSource(f);\r\n  if (f != i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_DEFAULT_COUNTRY) {\r\n    if (a.getLength() <= i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_) {\r\n      throw Error(i18n.phonenumbers.Error.TOO_SHORT_AFTER_IDD);\r\n    }\r\n    b = this.extractCountryCode(a, c);\r\n    if (0 != b) {\r\n      return e.setCountryCode(b), b;\r\n    }\r\n    throw Error(i18n.phonenumbers.Error.INVALID_COUNTRY_CODE);\r\n  }\r\n  if (null != b) {\r\n    f = b.getCountryCodeOrDefault();\r\n    var g = \"\" + f, h = a.toString();\r\n    if (goog.string.startsWith(h, g) && (g = new goog.string.StringBuffer(h.substring(g.length)), h = b.getGeneralDesc(), h = new RegExp(h.getNationalNumberPatternOrDefault()), this.maybeStripNationalPrefixAndCarrierCode(g, b, null), g = g.toString(), !i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(h, a.toString()) && i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(h, g) || this.testNumberLength_(a.toString(), b) == i18n.phonenumbers.PhoneNumberUtil.ValidationResult.TOO_LONG)) {\r\n      return c.append(g), d && e.setCountryCodeSource(i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITHOUT_PLUS_SIGN), e.setCountryCode(f), f;\r\n    }\r\n  }\r\n  e.setCountryCode(0);\r\n  return 0;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.parsePrefixAsIdd_ = function(a, b) {\r\n  var c = b.toString();\r\n  if (0 == c.search(a)) {\r\n    var d = c.match(a)[0].length, e = c.substring(d).match(i18n.phonenumbers.PhoneNumberUtil.CAPTURING_DIGIT_PATTERN);\r\n    if (e && null != e[1] && 0 < e[1].length && \"0\" == i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly(e[1])) {\r\n      return !1;\r\n    }\r\n    b.clear();\r\n    b.append(c.substring(d));\r\n    return !0;\r\n  }\r\n  return !1;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.maybeStripInternationalPrefixAndNormalize = function(a, b) {\r\n  var c = a.toString();\r\n  if (0 == c.length) {\r\n    return i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_DEFAULT_COUNTRY;\r\n  }\r\n  if (i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN.test(c)) {\r\n    return c = c.replace(i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN, \"\"), a.clear(), a.append(i18n.phonenumbers.PhoneNumberUtil.normalize(c)), i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITH_PLUS_SIGN;\r\n  }\r\n  c = new RegExp(b);\r\n  i18n.phonenumbers.PhoneNumberUtil.normalizeSB_(a);\r\n  return this.parsePrefixAsIdd_(c, a) ? i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_NUMBER_WITH_IDD : i18n.phonenumbers.PhoneNumber.CountryCodeSource.FROM_DEFAULT_COUNTRY;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.maybeStripNationalPrefixAndCarrierCode = function(a, b, c) {\r\n  var d = a.toString(), e = d.length, f = b.getNationalPrefixForParsing();\r\n  if (0 == e || null == f || 0 == f.length) {\r\n    return !1;\r\n  }\r\n  var g = new RegExp(\"^(?:\" + f + \")\");\r\n  if (e = g.exec(d)) {\r\n    f = new RegExp(b.getGeneralDesc().getNationalNumberPatternOrDefault());\r\n    var h = i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(f, d), k = e.length - 1;\r\n    b = b.getNationalPrefixTransformRule();\r\n    if (null == b || 0 == b.length || null == e[k] || 0 == e[k].length) {\r\n      if (h && !i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(f, d.substring(e[0].length))) {\r\n        return !1;\r\n      }\r\n      null != c && 0 < k && null != e[k] && c.append(e[1]);\r\n      a.set(d.substring(e[0].length));\r\n    } else {\r\n      d = d.replace(g, b);\r\n      if (h && !i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(f, d)) {\r\n        return !1;\r\n      }\r\n      null != c && 0 < k && c.append(e[1]);\r\n      a.set(d);\r\n    }\r\n    return !0;\r\n  }\r\n  return !1;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.maybeStripExtension = function(a) {\r\n  var b = a.toString(), c = b.search(i18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERN_);\r\n  if (0 <= c && i18n.phonenumbers.PhoneNumberUtil.isViablePhoneNumber(b.substring(0, c))) {\r\n    for (var d = b.match(i18n.phonenumbers.PhoneNumberUtil.EXTN_PATTERN_), e = d.length, f = 1; f < e; ++f) {\r\n      if (null != d[f] && 0 < d[f].length) {\r\n        return a.clear(), a.append(b.substring(0, c)), d[f];\r\n      }\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.checkRegionForParsing_ = function(a, b) {\r\n  return this.isValidRegionCode_(b) || null != a && 0 < a.length && i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN.test(a);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.parse = function(a, b) {\r\n  return this.parseHelper_(a, b, !1, !0);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.parseAndKeepRawInput = function(a, b) {\r\n  if (!this.isValidRegionCode_(b) && 0 < a.length && a.charAt(0) != i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN) {\r\n    throw Error(i18n.phonenumbers.Error.INVALID_COUNTRY_CODE);\r\n  }\r\n  return this.parseHelper_(a, b, !0, !0);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.setItalianLeadingZerosForPhoneNumber_ = function(a, b) {\r\n  if (1 < a.length && \"0\" == a.charAt(0)) {\r\n    b.setItalianLeadingZero(!0);\r\n    for (var c = 1; c < a.length - 1 && \"0\" == a.charAt(c);) {\r\n      c++;\r\n    }\r\n    1 != c && b.setNumberOfLeadingZeros(c);\r\n  }\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.parseHelper_ = function(a, b, c, d) {\r\n  if (null == a) {\r\n    throw Error(i18n.phonenumbers.Error.NOT_A_NUMBER);\r\n  }\r\n  if (a.length > i18n.phonenumbers.PhoneNumberUtil.MAX_INPUT_STRING_LENGTH_) {\r\n    throw Error(i18n.phonenumbers.Error.TOO_LONG);\r\n  }\r\n  var e = new goog.string.StringBuffer;\r\n  this.buildNationalNumberForParsing_(a, e);\r\n  if (!i18n.phonenumbers.PhoneNumberUtil.isViablePhoneNumber(e.toString())) {\r\n    throw Error(i18n.phonenumbers.Error.NOT_A_NUMBER);\r\n  }\r\n  if (d && !this.checkRegionForParsing_(e.toString(), b)) {\r\n    throw Error(i18n.phonenumbers.Error.INVALID_COUNTRY_CODE);\r\n  }\r\n  d = new i18n.phonenumbers.PhoneNumber;\r\n  c && d.setRawInput(a);\r\n  a = this.maybeStripExtension(e);\r\n  0 < a.length && d.setExtension(a);\r\n  var f = this.getMetadataForRegion(b);\r\n  a = new goog.string.StringBuffer;\r\n  var g = 0, h = e.toString();\r\n  try {\r\n    g = this.maybeExtractCountryCode(h, f, a, c, d);\r\n  } catch (k) {\r\n    if (k.message == i18n.phonenumbers.Error.INVALID_COUNTRY_CODE && i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN.test(h)) {\r\n      if (h = h.replace(i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN, \"\"), g = this.maybeExtractCountryCode(h, f, a, c, d), 0 == g) {\r\n        throw k;\r\n      }\r\n    } else {\r\n      throw k;\r\n    }\r\n  }\r\n  0 != g ? (e = this.getRegionCodeForCountryCode(g), e != b && (f = this.getMetadataForRegionOrCallingCode_(g, e))) : (i18n.phonenumbers.PhoneNumberUtil.normalizeSB_(e), a.append(e.toString()), null != b ? (g = f.getCountryCodeOrDefault(), d.setCountryCode(g)) : c && d.clearCountryCodeSource());\r\n  if (a.getLength() < i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_) {\r\n    throw Error(i18n.phonenumbers.Error.TOO_SHORT_NSN);\r\n  }\r\n  null != f && (b = new goog.string.StringBuffer, e = new goog.string.StringBuffer(a.toString()), this.maybeStripNationalPrefixAndCarrierCode(e, f, b), f = this.testNumberLength_(e.toString(), f), g = i18n.phonenumbers.PhoneNumberUtil.ValidationResult, f != g.TOO_SHORT && f != g.IS_POSSIBLE_LOCAL_ONLY && f != g.INVALID_LENGTH && (a = e, c && 0 < b.toString().length && d.setPreferredDomesticCarrierCode(b.toString())));\r\n  c = a.toString();\r\n  a = c.length;\r\n  if (a < i18n.phonenumbers.PhoneNumberUtil.MIN_LENGTH_FOR_NSN_) {\r\n    throw Error(i18n.phonenumbers.Error.TOO_SHORT_NSN);\r\n  }\r\n  if (a > i18n.phonenumbers.PhoneNumberUtil.MAX_LENGTH_FOR_NSN_) {\r\n    throw Error(i18n.phonenumbers.Error.TOO_LONG);\r\n  }\r\n  i18n.phonenumbers.PhoneNumberUtil.setItalianLeadingZerosForPhoneNumber_(c, d);\r\n  d.setNationalNumber(parseInt(c, 10));\r\n  return d;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.buildNationalNumberForParsing_ = function(a, b) {\r\n  var c = a.indexOf(i18n.phonenumbers.PhoneNumberUtil.RFC3966_PHONE_CONTEXT_);\r\n  if (0 <= c) {\r\n    var d = c + i18n.phonenumbers.PhoneNumberUtil.RFC3966_PHONE_CONTEXT_.length;\r\n    if (a.charAt(d) == i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN) {\r\n      var e = a.indexOf(\";\", d);\r\n      0 < e ? b.append(a.substring(d, e)) : b.append(a.substring(d));\r\n    }\r\n    d = a.indexOf(i18n.phonenumbers.PhoneNumberUtil.RFC3966_PREFIX_);\r\n    b.append(a.substring(0 <= d ? d + i18n.phonenumbers.PhoneNumberUtil.RFC3966_PREFIX_.length : 0, c));\r\n  } else {\r\n    b.append(i18n.phonenumbers.PhoneNumberUtil.extractPossibleNumber(a));\r\n  }\r\n  c = b.toString();\r\n  d = c.indexOf(i18n.phonenumbers.PhoneNumberUtil.RFC3966_ISDN_SUBADDRESS_);\r\n  0 < d && (b.clear(), b.append(c.substring(0, d)));\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.copyCoreFieldsOnly_ = function(a) {\r\n  var b = new i18n.phonenumbers.PhoneNumber;\r\n  b.setCountryCode(a.getCountryCodeOrDefault());\r\n  b.setNationalNumber(a.getNationalNumberOrDefault());\r\n  0 < a.getExtensionOrDefault().length && b.setExtension(a.getExtensionOrDefault());\r\n  a.getItalianLeadingZero() && (b.setItalianLeadingZero(!0), b.setNumberOfLeadingZeros(a.getNumberOfLeadingZerosOrDefault()));\r\n  return b;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isNumberMatch = function(a, b) {\r\n  if (\"string\" == typeof a) {\r\n    try {\r\n      var c = this.parse(a, i18n.phonenumbers.PhoneNumberUtil.UNKNOWN_REGION_);\r\n    } catch (g) {\r\n      if (g.message != i18n.phonenumbers.Error.INVALID_COUNTRY_CODE) {\r\n        return i18n.phonenumbers.PhoneNumberUtil.MatchType.NOT_A_NUMBER;\r\n      }\r\n      if (\"string\" != typeof b) {\r\n        var d = this.getRegionCodeForCountryCode(b.getCountryCodeOrDefault());\r\n        if (d != i18n.phonenumbers.PhoneNumberUtil.UNKNOWN_REGION_) {\r\n          try {\r\n            c = this.parse(a, d);\r\n          } catch (h) {\r\n            return i18n.phonenumbers.PhoneNumberUtil.MatchType.NOT_A_NUMBER;\r\n          }\r\n          c = this.isNumberMatch(c, b);\r\n          return c == i18n.phonenumbers.PhoneNumberUtil.MatchType.EXACT_MATCH ? i18n.phonenumbers.PhoneNumberUtil.MatchType.NSN_MATCH : c;\r\n        }\r\n      }\r\n      try {\r\n        c = this.parseHelper_(a, null, !1, !1);\r\n      } catch (h) {\r\n        return i18n.phonenumbers.PhoneNumberUtil.MatchType.NOT_A_NUMBER;\r\n      }\r\n    }\r\n  } else {\r\n    c = a.clone();\r\n  }\r\n  if (\"string\" == typeof b) {\r\n    try {\r\n      var e = this.parse(b, i18n.phonenumbers.PhoneNumberUtil.UNKNOWN_REGION_);\r\n      return this.isNumberMatch(a, e);\r\n    } catch (g) {\r\n      return g.message != i18n.phonenumbers.Error.INVALID_COUNTRY_CODE ? i18n.phonenumbers.PhoneNumberUtil.MatchType.NOT_A_NUMBER : this.isNumberMatch(b, c);\r\n    }\r\n  } else {\r\n    e = b.clone();\r\n  }\r\n  c = i18n.phonenumbers.PhoneNumberUtil.copyCoreFieldsOnly_(c);\r\n  e = i18n.phonenumbers.PhoneNumberUtil.copyCoreFieldsOnly_(e);\r\n  if (c.hasExtension() && e.hasExtension() && c.getExtension() != e.getExtension()) {\r\n    return i18n.phonenumbers.PhoneNumberUtil.MatchType.NO_MATCH;\r\n  }\r\n  d = c.getCountryCodeOrDefault();\r\n  var f = e.getCountryCodeOrDefault();\r\n  if (0 != d && 0 != f) {\r\n    return c.equals(e) ? i18n.phonenumbers.PhoneNumberUtil.MatchType.EXACT_MATCH : d == f && this.isNationalNumberSuffixOfTheOther_(c, e) ? i18n.phonenumbers.PhoneNumberUtil.MatchType.SHORT_NSN_MATCH : i18n.phonenumbers.PhoneNumberUtil.MatchType.NO_MATCH;\r\n  }\r\n  c.setCountryCode(0);\r\n  e.setCountryCode(0);\r\n  return c.equals(e) ? i18n.phonenumbers.PhoneNumberUtil.MatchType.NSN_MATCH : this.isNationalNumberSuffixOfTheOther_(c, e) ? i18n.phonenumbers.PhoneNumberUtil.MatchType.SHORT_NSN_MATCH : i18n.phonenumbers.PhoneNumberUtil.MatchType.NO_MATCH;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.isNationalNumberSuffixOfTheOther_ = function(a, b) {\r\n  var c = \"\" + a.getNationalNumber(), d = \"\" + b.getNationalNumber();\r\n  return goog.string.endsWith(c, d) || goog.string.endsWith(d, c);\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.prototype.canBeInternationallyDialled = function(a) {\r\n  var b = this.getMetadataForRegion(this.getRegionCodeForNumber(a));\r\n  if (null == b) {\r\n    return !0;\r\n  }\r\n  a = this.getNationalSignificantNumber(a);\r\n  return !this.isNumberMatchingDesc_(a, b.getNoInternationalDialling());\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.matchesEntirely = function(a, b) {\r\n  var c = \"string\" == typeof a ? b.match(\"^(?:\" + a + \")$\") : b.match(a);\r\n  return c && c[0].length == b.length ? !0 : !1;\r\n};\r\ni18n.phonenumbers.PhoneNumberUtil.matchesPrefix = function(a, b) {\r\n  var c = \"string\" == typeof a ? b.match(\"^(?:\" + a + \")\") : b.match(a);\r\n  return c && goog.string.startsWith(b, c[0]) ? !0 : !1;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter = function(a) {\r\n  this.DIGIT_PLACEHOLDER_ = \"\\u2008\";\r\n  this.DIGIT_PATTERN_ = new RegExp(this.DIGIT_PLACEHOLDER_);\r\n  this.currentOutput_ = \"\";\r\n  this.formattingTemplate_ = new goog.string.StringBuffer;\r\n  this.currentFormattingPattern_ = \"\";\r\n  this.accruedInput_ = new goog.string.StringBuffer;\r\n  this.accruedInputWithoutFormatting_ = new goog.string.StringBuffer;\r\n  this.ableToFormat_ = !0;\r\n  this.isExpectingCountryCallingCode_ = this.isCompleteNumber_ = this.inputHasFormatting_ = !1;\r\n  this.phoneUtil_ = i18n.phonenumbers.PhoneNumberUtil.getInstance();\r\n  this.positionToRemember_ = this.originalPosition_ = this.lastMatchPosition_ = 0;\r\n  this.prefixBeforeNationalNumber_ = new goog.string.StringBuffer;\r\n  this.shouldAddSpaceAfterNationalPrefix_ = !1;\r\n  this.extractedNationalPrefix_ = \"\";\r\n  this.nationalNumber_ = new goog.string.StringBuffer;\r\n  this.possibleFormats_ = [];\r\n  this.defaultCountry_ = a;\r\n  this.defaultMetadata_ = this.currentMetadata_ = this.getMetadataForRegion_(this.defaultCountry_);\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_ = \" \";\r\ni18n.phonenumbers.AsYouTypeFormatter.EMPTY_METADATA_ = new i18n.phonenumbers.PhoneMetadata;\r\ni18n.phonenumbers.AsYouTypeFormatter.EMPTY_METADATA_.setInternationalPrefix(\"NA\");\r\ni18n.phonenumbers.AsYouTypeFormatter.CHARACTER_CLASS_PATTERN_ = /\\[([^\\[\\]])*\\]/g;\r\ni18n.phonenumbers.AsYouTypeFormatter.STANDALONE_DIGIT_PATTERN_ = /\\d(?=[^,}][^,}])/g;\r\ni18n.phonenumbers.AsYouTypeFormatter.ELIGIBLE_FORMAT_PATTERN_ = new RegExp(\"^[\" + i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION + \"]*(\\\\$\\\\d[\" + i18n.phonenumbers.PhoneNumberUtil.VALID_PUNCTUATION + \"]*)+$\");\r\ni18n.phonenumbers.AsYouTypeFormatter.NATIONAL_PREFIX_SEPARATORS_PATTERN_ = /[- ]/;\r\ni18n.phonenumbers.AsYouTypeFormatter.MIN_LEADING_DIGITS_LENGTH_ = 3;\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.getMetadataForRegion_ = function(a) {\r\n  a = this.phoneUtil_.getCountryCodeForRegion(a);\r\n  a = this.phoneUtil_.getRegionCodeForCountryCode(a);\r\n  a = this.phoneUtil_.getMetadataForRegion(a);\r\n  return null != a ? a : i18n.phonenumbers.AsYouTypeFormatter.EMPTY_METADATA_;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.maybeCreateNewTemplate_ = function() {\r\n  for (var a = this.possibleFormats_.length, b = 0; b < a; ++b) {\r\n    var c = this.possibleFormats_[b], d = c.getPatternOrDefault();\r\n    if (this.currentFormattingPattern_ == d) {\r\n      return !1;\r\n    }\r\n    if (this.createFormattingTemplate_(c)) {\r\n      return this.currentFormattingPattern_ = d, this.shouldAddSpaceAfterNationalPrefix_ = i18n.phonenumbers.AsYouTypeFormatter.NATIONAL_PREFIX_SEPARATORS_PATTERN_.test(c.getNationalPrefixFormattingRule()), this.lastMatchPosition_ = 0, !0;\r\n    }\r\n  }\r\n  return this.ableToFormat_ = !1;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.getAvailableFormats_ = function(a) {\r\n  for (var b = this.isCompleteNumber_ && 0 < this.currentMetadata_.intlNumberFormatCount() ? this.currentMetadata_.intlNumberFormatArray() : this.currentMetadata_.numberFormatArray(), c = b.length, d = 0; d < c; ++d) {\r\n    var e = b[d];\r\n    (!this.currentMetadata_.hasNationalPrefix() || this.isCompleteNumber_ || e.getNationalPrefixOptionalWhenFormatting() || this.phoneUtil_.formattingRuleHasFirstGroupOnly(e.getNationalPrefixFormattingRuleOrDefault())) && this.isFormatEligible_(e.getFormatOrDefault()) && this.possibleFormats_.push(e);\r\n  }\r\n  this.narrowDownPossibleFormats_(a);\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.isFormatEligible_ = function(a) {\r\n  return i18n.phonenumbers.AsYouTypeFormatter.ELIGIBLE_FORMAT_PATTERN_.test(a);\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.narrowDownPossibleFormats_ = function(a) {\r\n  for (var b = [], c = a.length - i18n.phonenumbers.AsYouTypeFormatter.MIN_LEADING_DIGITS_LENGTH_, d = this.possibleFormats_.length, e = 0; e < d; ++e) {\r\n    var f = this.possibleFormats_[e];\r\n    if (0 == f.leadingDigitsPatternCount()) {\r\n      b.push(this.possibleFormats_[e]);\r\n    } else {\r\n      var g = Math.min(c, f.leadingDigitsPatternCount() - 1);\r\n      f = f.getLeadingDigitsPattern(g);\r\n      0 == a.search(f) && b.push(this.possibleFormats_[e]);\r\n    }\r\n  }\r\n  this.possibleFormats_ = b;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.createFormattingTemplate_ = function(a) {\r\n  var b = a.getPatternOrDefault();\r\n  if (-1 != b.indexOf(\"|\")) {\r\n    return !1;\r\n  }\r\n  b = b.replace(i18n.phonenumbers.AsYouTypeFormatter.CHARACTER_CLASS_PATTERN_, \"\\\\d\");\r\n  b = b.replace(i18n.phonenumbers.AsYouTypeFormatter.STANDALONE_DIGIT_PATTERN_, \"\\\\d\");\r\n  this.formattingTemplate_.clear();\r\n  a = this.getFormattingTemplate_(b, a.getFormatOrDefault());\r\n  return 0 < a.length ? (this.formattingTemplate_.append(a), !0) : !1;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.getFormattingTemplate_ = function(a, b) {\r\n  var c = \"999999999999999\".match(a)[0];\r\n  if (c.length < this.nationalNumber_.getLength()) {\r\n    return \"\";\r\n  }\r\n  c = c.replace(new RegExp(a, \"g\"), b);\r\n  return c = c.replace(RegExp(\"9\", \"g\"), this.DIGIT_PLACEHOLDER_);\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.clear = function() {\r\n  this.currentOutput_ = \"\";\r\n  this.accruedInput_.clear();\r\n  this.accruedInputWithoutFormatting_.clear();\r\n  this.formattingTemplate_.clear();\r\n  this.lastMatchPosition_ = 0;\r\n  this.currentFormattingPattern_ = \"\";\r\n  this.prefixBeforeNationalNumber_.clear();\r\n  this.extractedNationalPrefix_ = \"\";\r\n  this.nationalNumber_.clear();\r\n  this.ableToFormat_ = !0;\r\n  this.inputHasFormatting_ = !1;\r\n  this.originalPosition_ = this.positionToRemember_ = 0;\r\n  this.isExpectingCountryCallingCode_ = this.isCompleteNumber_ = !1;\r\n  this.possibleFormats_ = [];\r\n  this.shouldAddSpaceAfterNationalPrefix_ = !1;\r\n  this.currentMetadata_ != this.defaultMetadata_ && (this.currentMetadata_ = this.getMetadataForRegion_(this.defaultCountry_));\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.inputDigit = function(a) {\r\n  return this.currentOutput_ = this.inputDigitWithOptionToRememberPosition_(a, !1);\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.inputDigitAndRememberPosition = function(a) {\r\n  return this.currentOutput_ = this.inputDigitWithOptionToRememberPosition_(a, !0);\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.inputDigitWithOptionToRememberPosition_ = function(a, b) {\r\n  this.accruedInput_.append(a);\r\n  b && (this.originalPosition_ = this.accruedInput_.getLength());\r\n  this.isDigitOrLeadingPlusSign_(a) ? a = this.normalizeAndAccrueDigitsAndPlusSign_(a, b) : (this.ableToFormat_ = !1, this.inputHasFormatting_ = !0);\r\n  if (!this.ableToFormat_) {\r\n    if (!this.inputHasFormatting_) {\r\n      if (this.attemptToExtractIdd_()) {\r\n        if (this.attemptToExtractCountryCallingCode_()) {\r\n          return this.attemptToChoosePatternWithPrefixExtracted_();\r\n        }\r\n      } else {\r\n        if (this.ableToExtractLongerNdd_()) {\r\n          return this.prefixBeforeNationalNumber_.append(i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_), this.attemptToChoosePatternWithPrefixExtracted_();\r\n        }\r\n      }\r\n    }\r\n    return this.accruedInput_.toString();\r\n  }\r\n  switch(this.accruedInputWithoutFormatting_.getLength()) {\r\n    case 0:\r\n    case 1:\r\n    case 2:\r\n      return this.accruedInput_.toString();\r\n    case 3:\r\n      if (this.attemptToExtractIdd_()) {\r\n        this.isExpectingCountryCallingCode_ = !0;\r\n      } else {\r\n        return this.extractedNationalPrefix_ = this.removeNationalPrefixFromNationalNumber_(), this.attemptToChooseFormattingPattern_();\r\n      }\r\n    default:\r\n      if (this.isExpectingCountryCallingCode_) {\r\n        return this.attemptToExtractCountryCallingCode_() && (this.isExpectingCountryCallingCode_ = !1), this.prefixBeforeNationalNumber_.toString() + this.nationalNumber_.toString();\r\n      }\r\n      if (0 < this.possibleFormats_.length) {\r\n        var c = this.inputDigitHelper_(a), d = this.attemptToFormatAccruedDigits_();\r\n        if (0 < d.length) {\r\n          return d;\r\n        }\r\n        this.narrowDownPossibleFormats_(this.nationalNumber_.toString());\r\n        return this.maybeCreateNewTemplate_() ? this.inputAccruedNationalNumber_() : this.ableToFormat_ ? this.appendNationalNumber_(c) : this.accruedInput_.toString();\r\n      }\r\n      return this.attemptToChooseFormattingPattern_();\r\n  }\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.attemptToChoosePatternWithPrefixExtracted_ = function() {\r\n  this.ableToFormat_ = !0;\r\n  this.isExpectingCountryCallingCode_ = !1;\r\n  this.possibleFormats_ = [];\r\n  this.lastMatchPosition_ = 0;\r\n  this.formattingTemplate_.clear();\r\n  this.currentFormattingPattern_ = \"\";\r\n  return this.attemptToChooseFormattingPattern_();\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.getExtractedNationalPrefix_ = function() {\r\n  return this.extractedNationalPrefix_;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.ableToExtractLongerNdd_ = function() {\r\n  if (0 < this.extractedNationalPrefix_.length) {\r\n    var a = this.nationalNumber_.toString();\r\n    this.nationalNumber_.clear();\r\n    this.nationalNumber_.append(this.extractedNationalPrefix_);\r\n    this.nationalNumber_.append(a);\r\n    a = this.prefixBeforeNationalNumber_.toString();\r\n    var b = a.lastIndexOf(this.extractedNationalPrefix_);\r\n    this.prefixBeforeNationalNumber_.clear();\r\n    this.prefixBeforeNationalNumber_.append(a.substring(0, b));\r\n  }\r\n  return this.extractedNationalPrefix_ != this.removeNationalPrefixFromNationalNumber_();\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.isDigitOrLeadingPlusSign_ = function(a) {\r\n  return i18n.phonenumbers.PhoneNumberUtil.CAPTURING_DIGIT_PATTERN.test(a) || 1 == this.accruedInput_.getLength() && i18n.phonenumbers.PhoneNumberUtil.PLUS_CHARS_PATTERN.test(a);\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.attemptToFormatAccruedDigits_ = function() {\r\n  for (var a = this.nationalNumber_.toString(), b = this.possibleFormats_.length, c = 0; c < b; ++c) {\r\n    var d = this.possibleFormats_[c], e = d.getPatternOrDefault();\r\n    if ((new RegExp(\"^(?:\" + e + \")$\")).test(a)) {\r\n      return this.shouldAddSpaceAfterNationalPrefix_ = i18n.phonenumbers.AsYouTypeFormatter.NATIONAL_PREFIX_SEPARATORS_PATTERN_.test(d.getNationalPrefixFormattingRule()), a = a.replace(new RegExp(e, \"g\"), d.getFormat()), this.appendNationalNumber_(a);\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.appendNationalNumber_ = function(a) {\r\n  var b = this.prefixBeforeNationalNumber_.getLength();\r\n  return this.shouldAddSpaceAfterNationalPrefix_ && 0 < b && this.prefixBeforeNationalNumber_.toString().charAt(b - 1) != i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_ ? this.prefixBeforeNationalNumber_ + i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_ + a : this.prefixBeforeNationalNumber_ + a;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.getRememberedPosition = function() {\r\n  if (!this.ableToFormat_) {\r\n    return this.originalPosition_;\r\n  }\r\n  for (var a = 0, b = 0, c = this.accruedInputWithoutFormatting_.toString(), d = this.currentOutput_.toString(); a < this.positionToRemember_ && b < d.length;) {\r\n    c.charAt(a) == d.charAt(b) && a++, b++;\r\n  }\r\n  return b;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.attemptToChooseFormattingPattern_ = function() {\r\n  var a = this.nationalNumber_.toString();\r\n  return a.length >= i18n.phonenumbers.AsYouTypeFormatter.MIN_LEADING_DIGITS_LENGTH_ ? (this.getAvailableFormats_(a), a = this.attemptToFormatAccruedDigits_(), 0 < a.length ? a : this.maybeCreateNewTemplate_() ? this.inputAccruedNationalNumber_() : this.accruedInput_.toString()) : this.appendNationalNumber_(a);\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.inputAccruedNationalNumber_ = function() {\r\n  var a = this.nationalNumber_.toString(), b = a.length;\r\n  if (0 < b) {\r\n    for (var c = \"\", d = 0; d < b; d++) {\r\n      c = this.inputDigitHelper_(a.charAt(d));\r\n    }\r\n    return this.ableToFormat_ ? this.appendNationalNumber_(c) : this.accruedInput_.toString();\r\n  }\r\n  return this.prefixBeforeNationalNumber_.toString();\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.isNanpaNumberWithNationalPrefix_ = function() {\r\n  if (1 != this.currentMetadata_.getCountryCode()) {\r\n    return !1;\r\n  }\r\n  var a = this.nationalNumber_.toString();\r\n  return \"1\" == a.charAt(0) && \"0\" != a.charAt(1) && \"1\" != a.charAt(1);\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.removeNationalPrefixFromNationalNumber_ = function() {\r\n  var a = this.nationalNumber_.toString(), b = 0;\r\n  if (this.isNanpaNumberWithNationalPrefix_()) {\r\n    b = 1, this.prefixBeforeNationalNumber_.append(\"1\").append(i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_), this.isCompleteNumber_ = !0;\r\n  } else {\r\n    if (this.currentMetadata_.hasNationalPrefixForParsing()) {\r\n      var c = new RegExp(\"^(?:\" + this.currentMetadata_.getNationalPrefixForParsing() + \")\");\r\n      c = a.match(c);\r\n      null != c && null != c[0] && 0 < c[0].length && (this.isCompleteNumber_ = !0, b = c[0].length, this.prefixBeforeNationalNumber_.append(a.substring(0, b)));\r\n    }\r\n  }\r\n  this.nationalNumber_.clear();\r\n  this.nationalNumber_.append(a.substring(b));\r\n  return a.substring(0, b);\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.attemptToExtractIdd_ = function() {\r\n  var a = this.accruedInputWithoutFormatting_.toString(), b = new RegExp(\"^(?:\\\\\" + i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN + \"|\" + this.currentMetadata_.getInternationalPrefix() + \")\");\r\n  b = a.match(b);\r\n  return null != b && null != b[0] && 0 < b[0].length ? (this.isCompleteNumber_ = !0, b = b[0].length, this.nationalNumber_.clear(), this.nationalNumber_.append(a.substring(b)), this.prefixBeforeNationalNumber_.clear(), this.prefixBeforeNationalNumber_.append(a.substring(0, b)), a.charAt(0) != i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN && this.prefixBeforeNationalNumber_.append(i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_), !0) : !1;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.attemptToExtractCountryCallingCode_ = function() {\r\n  if (0 == this.nationalNumber_.getLength()) {\r\n    return !1;\r\n  }\r\n  var a = new goog.string.StringBuffer, b = this.phoneUtil_.extractCountryCode(this.nationalNumber_, a);\r\n  if (0 == b) {\r\n    return !1;\r\n  }\r\n  this.nationalNumber_.clear();\r\n  this.nationalNumber_.append(a.toString());\r\n  a = this.phoneUtil_.getRegionCodeForCountryCode(b);\r\n  i18n.phonenumbers.PhoneNumberUtil.REGION_CODE_FOR_NON_GEO_ENTITY == a ? this.currentMetadata_ = this.phoneUtil_.getMetadataForNonGeographicalRegion(b) : a != this.defaultCountry_ && (this.currentMetadata_ = this.getMetadataForRegion_(a));\r\n  this.prefixBeforeNationalNumber_.append(\"\" + b).append(i18n.phonenumbers.AsYouTypeFormatter.SEPARATOR_BEFORE_NATIONAL_NUMBER_);\r\n  this.extractedNationalPrefix_ = \"\";\r\n  return !0;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.normalizeAndAccrueDigitsAndPlusSign_ = function(a, b) {\r\n  if (a == i18n.phonenumbers.PhoneNumberUtil.PLUS_SIGN) {\r\n    var c = a;\r\n    this.accruedInputWithoutFormatting_.append(a);\r\n  } else {\r\n    c = i18n.phonenumbers.PhoneNumberUtil.DIGIT_MAPPINGS[a], this.accruedInputWithoutFormatting_.append(c), this.nationalNumber_.append(c);\r\n  }\r\n  b && (this.positionToRemember_ = this.accruedInputWithoutFormatting_.getLength());\r\n  return c;\r\n};\r\ni18n.phonenumbers.AsYouTypeFormatter.prototype.inputDigitHelper_ = function(a) {\r\n  var b = this.formattingTemplate_.toString();\r\n  if (0 <= b.substring(this.lastMatchPosition_).search(this.DIGIT_PATTERN_)) {\r\n    var c = b.search(this.DIGIT_PATTERN_);\r\n    a = b.replace(this.DIGIT_PATTERN_, a);\r\n    this.formattingTemplate_.clear();\r\n    this.formattingTemplate_.append(a);\r\n    this.lastMatchPosition_ = c;\r\n    return a.substring(0, this.lastMatchPosition_ + 1);\r\n  }\r\n  1 == this.possibleFormats_.length && (this.ableToFormat_ = !1);\r\n  this.currentFormattingPattern_ = \"\";\r\n  return this.accruedInput_.toString();\r\n};\r\ni18n.phonenumbers.shortnumbermetadata = {};\r\ni18n.phonenumbers.shortnumbermetadata.countryCodeToRegionCodeMap = {0:\"AC AD AE AF AG AI AL AM AO AR AS AT AU AW AX AZ BA BB BD BE BF BG BH BI BJ BL BM BN BO BQ BR BS BT BW BY BZ CA CC CD CF CG CH CI CK CL CM CN CO CR CU CV CW CX CY CZ DE DJ DK DM DO DZ EC EE EG EH ER ES ET FI FJ FK FM FO FR GA GB GD GE GF GG GH GI GL GM GN GP GR GT GU GW GY HK HN HR HT HU ID IE IL IM IN IQ IR IS IT JE JM JO JP KE KG KH KI KM KN KP KR KW KY KZ LA LB LC LI LK LR LS LT LU LV LY MA MC MD ME MF MG MH MK ML MM MN MO MP MQ MR MS MT MU MV MW MX MY MZ NA NC NE NF NG NI NL NO NP NR NU NZ OM PA PE PF PG PH PK PL PM PS PR PT PW PY QA RE RO RS RU RW SA SB SC SD SE SG SH SI SJ SK SL SM SN SO SR ST SV SX SY SZ TC TD TG TH TJ TL TM TN TO TR TT TV TW TZ UA UG US UY UZ VA VC VE VG VI VN VU WF WS XK YE YT ZA ZM ZW\".split(\" \")};\r\ni18n.phonenumbers.shortnumbermetadata.countryToMetadata = {AC:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AC\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], AD:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AD\", , , , , , , , , , , , , , , , , , [, , \"11[0268]\", , , , \r\n\"112\"], , [, , \"11[0268]\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], AE:[, [, , \"[149]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AE\", , , , , , , , , , , , , , , , , , [, , \"112|99[789]\", , , , \"112\", , , [3]], , [, , \"112|445[16]|99[789]\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"445[16]\", , , , \"4451\", , , [4]]], AF:[, [, , \"[14]\\\\d{2,4}\", , , , , , , [3, 5]], \r\n, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AF\", , , , , , , , , , , , , , , , , , [, , \"1(?:02|19)\", , , , \"119\", , , [3]], , [, , \"1(?:02|19)|40404\", , , , \"119\"], [, , , , , , , , , [-1]], [, , \"40404\", , , , \"40404\", , , [5]], , [, , \"40404\", , , , \"40404\", , , [5]]], AG:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AG\", , , , , , , , , , , , , , , , , , [, , \"9(?:11|99)\", , , , \"911\"], , [, , \"176|9(?:11|99)\", , , , \r\n\"911\"], [, , , , , , , , , [-1]], [, , \"176\", , , , \"176\"], , [, , \"176\", , , , \"176\"]], AI:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AI\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , \"176\", , , , \"176\"], , [, , \"176\", , , , \"176\"]], AL:[, [, , \"[15]\\\\d{2,5}\", , , , , , , [3, 5, 6]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AL\", , , , , , , , \r\n, , , , , , , , , , [, , \"1(?:12|2[789])\", , , , \"129\", , , [3]], , [, , \"1(?:1(?:2|6(?:000|1(?:06|11|23)))|2[5-9])|5\\\\d{4}\", , , , \"129\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"5\\\\d{4}\", , , , \"51234\", , , [5]]], AM:[, [, , \"[148]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AM\", , , , , , , , , , , , , , , , , , [, , \"10[123]\", , , , \"102\", , , [3]], , [, , \"1\\\\d{2}|40404|8[1-7]\\\\d{2}\", , , , \"8711\"], [, , , , , , , , , [-1]], \r\n[, , \"40404\", , , , \"40404\", , , [5]], , [, , \"40404\", , , , \"40404\", , , [5]]], AO:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AO\", , , , , , , , , , , , , , , , , , [, , \"11[235]\", , , , \"113\"], , [, , \"11[235]\", , , , \"113\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], AR:[, [, , \"[01389]\\\\d{1,4}\", , , , , , , [2, 3, 4, 5]], , , [, , \"[09]\\\\d{2}|1(?:[02-9]\\\\d?|1[0-24-9]?)\", , , , \"111\", , , [2, 3]], [, \r\n, , , , , , , , [-1]], , , , \"AR\", , , , , , , , , , , , , , , , , , [, , \"10[017]|911\", , , , \"101\", , , [3]], , [, , \"000|1(?:0[0-35-7]|1[02-5]|2[15]|9)|3372|89338|911\", , , , \"121\"], [, , , , , , , , , [-1]], [, , \"89338|911\", , , , \"89338\", , , [3, 5]], , [, , \"3372|89338\", , , , \"3372\", , , [4, 5]]], AS:[, [, , \"[49]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AS\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\", , , [3]], , [, , \"40404|911\", \r\n, , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"40404\", , , , \"40404\", , , [5]]], AT:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 6]], , , [, , \"116(?:00[06]|1(?:17|23))\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"AT\", , , , , , , , , , , , , , , , , , [, , \"1(?:[12]2|33|44)\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:2|6(?:00[06]|1(?:17|23)))|22|33|44)\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], AU:[, [, , \"[027]\\\\d{2}|1\\\\d{2,7}\", \r\n, , , , , , [3, 4, 5, 6, 7, 8]], , , [, , \"1(?:258885|555)|733\", , , , \"733\", , , [3, 4, 7]], [, , \"1(?:2(?:34|456)|9\\\\d{4})\", , , , \"191123\", , , [4, 5, 6]], , , , \"AU\", , , , , , , , , , , , , , , , , , [, , \"000|1(?:06|12)\", , , , \"112\", , , [3]], , [, , \"000|1(?:06|1(?:00|2|9[46])|2(?:[23]\\\\d|4\\\\d{2,3}|5\\\\d{3,4}|8(?:2|[013-9]\\\\d))|555|9[13-5]\\\\d{3})|225|7(?:33|67)\", , , , \"112\"], [, , \"1(?:1\\\\d{2}|24733)|225|767\", , , , \"225\", , , [3, 4, 6]], [, , \"1(?:258885|555)\", , , , \"1555\", , , [4, 7]], \r\n, [, , \"19\\\\d{4,6}\", , , , \"191123\", , , [6, 7, 8]]], AW:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AW\", , , , , , , , , , , , , , , , , , [, , \"100|911\", , , , \"911\"], , [, , \"1(?:00|76)|911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , \"176\", , , , \"176\"], , [, , \"176\", , , , \"176\"]], AX:[, [, , \"1\\\\d{2}|75[12]\\\\d{2}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AX\", , , , , , , , , , , , , , , \r\n, , , [, , \"112\", , , , \"112\", , , [3]], , [, , \"112|75[12]\\\\d{2}\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], AZ:[, [, , \"[148]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"AZ\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[123]|12)\", , , , \"101\", , , [3]], , [, , \"1(?:0[123]|12)|4040|8800\", , , , \"101\"], [, , , , , , , , , [-1]], [, , \"4040|8800\", , , , \"4040\", , , [4]], , [, , \"4040|8800\", , , \r\n, \"4040\", , , [4]]], BA:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"BA\", , , , , , , , , , , , , , , , , , [, , \"12[2-4]\", , , , \"122\", , , [3]], , [, , \"1(?:1(?:6(?:00[06]|1(?:1[17]|23))|8\\\\d{1,2})|2(?:0[0-7]|[2-5]|6[0-26]|[78]\\\\d{1,2})|[3-5]\\\\d{2}|7\\\\d{3})\", , , , \"122\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], BB:[, [, , \"[2-689]\\\\d{2}\", , , , , , , [3]], , , [, , , , , \r\n, , , , [-1]], [, , , , , , , , , [-1]], , , , \"BB\", , , , , , , , , , , , , , , , , , [, , \"[2359]11\", , , , \"211\"], , [, , \"[2-689]11\", , , , \"211\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], BD:[, [, , \"[179]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , \"106\", , , , \"106\", , , [3]], [, , , , , , , , , [-1]], , , , \"BD\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[0-2]|99)|999\", , , , \"999\", , , [3]], , [, , \"1(?:0(?:[0-39]|5(?:0\\\\d|[1-4])|6(\\\\d{2})?|7[0-4]|8[0-29])|1[16-9]|2(?:[134]|2[0-5])|3(?:1\\\\d?|3\\\\d|6[3-6])|4(?:0\\\\d|1\\\\d{2})|5[2-9]|99)|786|5012|9(?:594|99)\", \r\n, , , \"103\"], [, , , , , , , , , [-1]], [, , \"1(?:11|2[13])|786|5012|9594\", , , , \"9594\", , , [3, 4]], , [, , \"9594\", , , , \"9594\", , , [4]]], BE:[, [, , \"1\\\\d{2,5}|[2-9]\\\\d{3}\", , , , , , , [3, 4, 6]], , , [, , \"1(?:0[25-8]|1(?:0|6\\\\d{3})|7(?:12|77)|813)|8\\\\d{3}\", , , , \"116000\"], [, , \"1(?:2(?:12|34)|3(?:07|13)|414|\\\\d04)|[2-79]\\\\d{3}\", , , , \"7212\", , , [4]], , , , \"BE\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[01]|12)\", , , , \"112\", , , [3]], , [, , \"1(?:0[0-8]|1(?:[027]|6(?:000|117))|2(?:0[47]|12|3[0-24]|99)|3(?:0[47]|13|99)|4(?:0[47]|14|50|99)|5(?:1[05]|5[15]|66|95)|6(?:1[167]|36|6[16])|7(?:0[07]|1[27-9]|22|33|65|7[017]|89)|81[39])|[2-9]\\\\d{3}\", \r\n, , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"[2-9]\\\\d{3}\", , , , \"2787\", , , [4]]], BF:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BF\", , , , , , , , , , , , , , , , , , [, , \"1[78]\", , , , \"17\"], , [, , \"1[78]\", , , , \"17\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], BG:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 6]], , , [, , \"116(?:000|111)\", , , , \"116000\", , , [6]], [, , , , , , , \r\n, , [-1]], , , , \"BG\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|50|6[06])\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:2|6(?:000|111))|50|6[06])\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], BH:[, [, , \"[0189]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , \"(?:0[167]|81)\\\\d{3}\", , , , \"07123\", , , [5]], [, , \"9[148]\\\\d{3}\", , , , \"94123\", , , [5]], , , , \"BH\", , , , , , , , , , , , , , , , , , [, , \"[19]99\", , , , \"999\", , , [3]], , [, , \"0[167]\\\\d{3}|1(?:[02]\\\\d|12|4[01]|51|8[18]|9[169])|8[158]\\\\d{3}|9(?:[148]\\\\d{3}|9[02489])\", \r\n, , , \"999\"], [, , , , , , , , , [-1]], [, , \"0[67]\\\\d{3}|88000|98555\", , , , \"88000\", , , [5]], , [, , \"88000|98555\", , , , \"88000\", , , [5]]], BI:[, [, , \"[16-9]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , \"611\", , , , \"611\", , , [3]], [, , , , , , , , , [-1]], , , , \"BI\", , , , , , , , , , , , , , , , , , [, , \"11[237]\", , , , \"117\", , , [3]], , [, , \"1(?:1\\\\d|5[2-9]|6[0-256])|611|7(?:10|77|979)|8[28]8|900\", , , , \"117\"], [, , , , , , , , , [-1]], [, , \"611|7(?:10|77)|888|900\", , , , \"611\", , , [3]], \r\n, [, , \"710|900\", , , , \"900\", , , [3]]], BJ:[, [, , \"[17]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , \"7[3-5]\\\\d{2}\", , , , \"7312\", , , [4]], [, , , , , , , , , [-1]], , , , \"BJ\", , , , , , , , , , , , , , , , , , [, , \"11[78]\", , , , \"117\", , , [3]], , [, , \"1(?:1[78]|2[02-5]|60)|7[0-5]\\\\d{2}\", , , , \"117\"], [, , , , , , , , , [-1]], [, , \"12\\\\d\", , , , \"122\", , , [3]], , [, , , , , , , , , [-1]]], BL:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BL\", \r\n, , , , , , , , , , , , , , , , , [, , \"18\", , , , \"18\"], , [, , \"18\", , , , \"18\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], BM:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BM\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"176|911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , \"176\", , , , \"176\"], , [, , \"176\", , , , \"176\"]], BN:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , \r\n, , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BN\", , , , , , , , , , , , , , , , , , [, , \"99[135]\", , , , \"991\"], , [, , \"99[135]\", , , , \"991\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], BO:[, [, , \"[14]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BO\", , , , , , , , , , , , , , , , , , [, , \"11[089]\", , , , \"110\", , , [3]], , [, , \"11[089]|40404\", , , , \"110\"], [, , , , , , , , , [-1]], [, , , , , , , , \r\n, [-1]], , [, , \"40404\", , , , \"40404\", , , [5]]], BQ:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BQ\", , , , , , , , , , , , , , , , , , [, , \"112|911\", , , , \"112\"], , [, , \"1(?:12|76)|911\", , , , \"112\"], [, , , , , , , , , [-1]], [, , \"176\", , , , \"176\"], , [, , \"176\", , , , \"176\"]], BR:[, [, , \"[12469]\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"1(?:00|[89]\\\\d)|4(?:57|828)\", , , , \"181\", , , [3, 4]], [, , , , , , , , , [-1]], , , , \r\n\"BR\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|28|9[023])|911\", , , , \"190\", , , [3]], , [, , \"1(?:0(?:[02]|3(?:1[2-579]|2[13-9]|3[124-9]|4[1-3578]|5[1-468]|6[139]|8[149]|9[168])|5[0-35-9]|6(?:0|1[0-35-8]?|2[0145]|3[0137]?|4[37-9]?|5[0-35]|6[016]?|7[137]?|8[5-8]|9[1359]))|1[25-8]|2[35789]|3(?:[024568]|3[12])|4[12568]|5\\\\d|6[0-8]|8[015]|9[0-4789])|2(?:7(?:330|878)|85959?)|4(?:0404?|11[12]|57|828)|55555|6(?:0\\\\d{4}|10000)|911\", , , , \"168\"], [, , \"102|27330\", , , , \"27330\", , , [3, 5]], [, , \r\n\"151|27878|4(?:0404?|11[12]|57)|55555\", , , , \"27878\", , , [3, 4, 5]], , [, , \"2(?:7(?:330|878)|85959?)|4(?:0404|828)|6(?:0\\\\d{4}|10000)\", , , , \"27878\", , , [4, 5, 6]]], BS:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BS\", , , , , , , , , , , , , , , , , , [, , \"91[19]\", , , , \"911\"], , [, , \"91[19]\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], BT:[, [, , \"[14]\\\\d{2,4}\", , , , , , , [3, 5]], \r\n, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BT\", , , , , , , , , , , , , , , , , , [, , \"11[023]\", , , , \"113\", , , [3]], , [, , \"11[0-6]|40404\", , , , \"113\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"40404\", , , , \"40404\", , , [5]]], BW:[, [, , \"[19]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BW\", , , , , , , , , , , , , , , , , , [, , \"99[789]\", , , , \"999\", , , [3]], , [, , \"13123|99[789]\", , , , \"999\"], [, \r\n, , , , , , , , [-1]], [, , \"13123\", , , , \"13123\", , , [5]], , [, , \"13123\", , , , \"13123\", , , [5]]], BY:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BY\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[123]|12)\", , , , \"112\"], , [, , \"1(?:0[1-79]|1[246]|35|5[1235]|6[89]|7[5-7]|8[58]|9[1-7])\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], BZ:[, [, , \"9\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , \r\n, , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"BZ\", , , , , , , , , , , , , , , , , , [, , \"9(?:0|11)\", , , , \"911\"], , [, , \"9(?:0|11)\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], CA:[, [, , \"[124-9]\\\\d{2,5}|3(?:\\\\d{2,5}|\\\\d{7})\", , , , , , , [3, 5, 6, 8]], , , [, , \"211\", , , , \"211\", , , [3]], [, , , , , , , , , [-1]], , , , \"CA\", , , , , , , , , , , , , , , , , , [, , \"112|911\", , , , \"911\", , , [3]], , [, , \"1(?:12|\\\\d{4,5})|[25-9](?:11|\\\\d{4,5})|3(?:\\\\d{4,5}|0000\\\\d{3}|11)|411\", \r\n, , , \"12345\"], [, , , , , , , , , [-1]], [, , \"[23567]11\", , , , \"611\", , , [3]], , [, , \"[125-9]\\\\d{4,5}|3(?:\\\\d{4,5}|0000\\\\d{3})\", , , , \"30001\", , , [5, 6, 8]]], CC:[, [, , \"[01]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CC\", , , , , , , , , , , , , , , , , , [, , \"000|112\", , , , \"112\"], , [, , \"000|112\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], CD:[, [, , \"[14]\\\\d{2,4}\", , , , , , , [3, 5]], \r\n, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CD\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[348]|77|88)\", , , , \"113\", , , [3]], , [, , \"1(?:1[348]|23|77|88)|40404\", , , , \"40404\"], [, , , , , , , , , [-1]], [, , \"40404\", , , , \"40404\", , , [5]], , [, , \"40404\", , , , \"40404\", , , [5]]], CF:[, [, , \"1\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CF\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[78]|220)\", , , , \"1220\"], , [, \r\n, \"1(?:1[478]|220)\", , , , \"117\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], CG:[, [, , \"11\\\\d\", , , , , , , [3]], , , [, , \"111\", , , , \"111\"], [, , , , , , , , , [-1]], , , , \"CG\", , , , , , , , , , , , , , , , , , [, , \"11[78]\", , , , \"117\"], , [, , \"11[12678]\", , , , \"117\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], CH:[, [, , \"[1-9]\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"1(?:16\\\\d{3}|47)|5200\", , , , \"116000\", \r\n, , [3, 4, 6]], [, , \"1(?:145|8\\\\d{2})|543|83111\", , , , \"543\", , , [3, 4, 5]], , , , \"CH\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[278]|44)\", , , , \"112\", , , [3]], , [, , \"1(?:0[78]\\\\d{2}|1(?:[278]|45|6(?:000|111))|4(?:[03457]|1[45])|6(?:00|[1-46])|8(?:02|1[189]|50|7|8[08]|99))|[2-9]\\\\d{2,4}\", , , , \"147\"], [, , \"1(?:4(?:[035]|1\\\\d)|6\\\\d{1,2})\", , , , \"1600\", , , [3, 4]], [, , \"5(?:200|35)\", , , , \"535\", , , [3, 4]], , [, , \"[2-9]\\\\d{2,4}\", , , , \"600\", , , [3, 4, 5]]], CI:[, [, , \"[14]\\\\d{2,3}\", \r\n, , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CI\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[01]|[78]0)\", , , , \"110\", , , [3]], , [, , \"1(?:1[01]|[78]0)|4443\", , , , \"110\"], [, , , , , , , , , [-1]], [, , \"4443\", , , , \"4443\", , , [4]], , [, , \"4443\", , , , \"4443\", , , [4]]], CK:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CK\", , , , , , , , , , , , , , , , , , [, , \"99[689]\", , , , \"998\"], , [, , \"99[689]\", \r\n, , , \"998\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], CL:[, [, , \"[1-9]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , \"1213|4342\", , , , \"4342\", , , [4]], [, , \"1(?:060|211|3(?:13|[348]0|5[01])|417|560|818|9(?:19|80))|2(?:0122|22[47]|323|777|882)|3(?:0(?:51|99)|132|3(?:29|77|90)|665)|4(?:142|243|3656|4(?:02|15|77)|554)|5(?:004|4154|5(?:66|77)|995)|6(?:0700|131|222|3(?:00|66)|500|699)|7878|8(?:011|11[28]|482|889)|9(?:011|[12]00|330)\", , , , \"2224\", , , [4, 5]], \r\n, , , \"CL\", , , , , , , , , , , , , , , , , , [, , \"13[123]|911\", , , , \"133\", , , [3]], , [, , \"1(?:06?0|21[13]|3(?:[02679]|13?|[348]0?|5[01]?)|4(?:0[02-6]|17|[379])|560|818|9(?:19|80))|2(?:0(?:01|122)|22[47]|323|777|882)|3(?:0(?:51|99)|132|3(?:29|37|77|90)|665)|4(?:142|243|3(?:42|656)|4(?:02|15|77)|554)|5(?:004|4154|5(?:66|77)|995)|6(?:0700|131|222|3(?:00|66)|500|699)|7878|8(?:011|11[28]|482|889)|9(?:011|1(?:1|00)|200|330)\", , , , \"139\"], [, , \"2001|3337\", , , , \"3337\", , , [4]], [, , , , , , , \r\n, , [-1]], , [, , \"(?:[137-9]|[2456]\\\\d?)\\\\d{3}\", , , , \"5577\", , , [4, 5]]], CM:[, [, , \"[18]\\\\d{1,3}\", , , , , , , [2, 3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CM\", , , , , , , , , , , , , , , , , , [, , \"1?1[37]\", , , , \"113\", , , [2, 3]], , [, , \"1?1[37]|8711\", , , , \"113\"], [, , , , , , , , , [-1]], [, , \"8711\", , , , \"8711\", , , [4]], , [, , \"8711\", , , , \"8711\", , , [4]]], CN:[, [, , \"[19]\\\\d{2,5}\", , , , , , , [3, 5, 6]], , , [, , , , , , , , , [-1]], [, , , \r\n, , , , , , [-1]], , , , \"CN\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[09]|20)\", , , , \"119\", , , [3]], , [, , \"1(?:00\\\\d{2}|1[09]|20)|95\\\\d{3,4}\", , , , \"119\"], [, , \"100\\\\d{2}|95\\\\d{3,4}\", , , , \"95566\", , , [5, 6]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], CO:[, [, , \"[148]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CO\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[29]|23|32|56)\", , , , \"112\", , , [3]], , [, , \"1(?:06|1[2569]|2[357]|3[27]|4[467]|5[36]|6[45]|95)|40404|85432\", \r\n, , , \"112\"], [, , , , , , , , , [-1]], [, , \"40404|85432\", , , , \"40404\", , , [5]], , [, , \"40404|85432\", , , , \"40404\", , , [5]]], CR:[, [, , \"[1359]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CR\", , , , , , , , , , , , , , , , , , [, , \"112|911\", , , , \"911\", , , [3]], , [, , \"1(?:0(?:00|15|2[2-4679])|1(?:1[0-35-9]|2|37|[46]6|7[57]|8[79]|9[0-379])|2(?:00|[12]2|34|55)|3(?:21|33)|4(?:0[06]|1[4-6])|5(?:15|5[15])|693|7(?:00|1[789]|2[02]|[67]7)|975)|3855|5(?:0(?:30|49)|510)|911\", \r\n, , , \"1022\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"3855|5(?:0(?:30|49)|510)\", , , , \"3855\", , , [4]]], CU:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 6]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CU\", , , , , , , , , , , , , , , , , , [, , \"10[456]\", , , , \"106\", , , [3]], , [, , \"1(?:0[456]|1(?:6111|8)|40)\", , , , \"140\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], CV:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , \r\n, , , [-1]], [, , , , , , , , , [-1]], , , , \"CV\", , , , , , , , , , , , , , , , , , [, , \"13[012]\", , , , \"132\"], , [, , \"13[012]\", , , , \"132\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], CW:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CW\", , , , , , , , , , , , , , , , , , [, , \"112|911\", , , , \"112\"], , [, , \"1(?:12|76)|911\", , , , \"112\"], [, , , , , , , , , [-1]], [, , \"176\", , , , \"176\"], , [, , \r\n\"176\", , , , \"176\"]], CX:[, [, , \"[01]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"CX\", , , , , , , , , , , , , , , , , , [, , \"000|112\", , , , \"112\"], , [, , \"000|112\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], CY:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 6]], , , [, , \"116(?:000|111)\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"CY\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|99)\", , \r\n, , \"112\", , , [3]], , [, , \"1(?:1(?:2|6(?:000|111))|99)\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], CZ:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"116(?:00[06]|111|123)\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"CZ\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|5[0568])\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:2|6\\\\d{3}|8\\\\d)|2\\\\d{2,3}|3\\\\d{3,4}|4\\\\d{3}|5[0568]|99)\", , , , \"116123\"], [, , , , , , , , , [-1]], \r\n[, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], DE:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 6]], , , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"DE\", , , , , , , , , , , , , , , , , , [, , \"11[02]\", , , , \"112\", , , [3]], , [, , \"11(?:[025]|6(?:00[06]|1(?:1[17]|23)))\", , , , \"115\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], DJ:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"DJ\", \r\n, , , , , , , , , , , , , , , , , [, , \"1[78]\", , , , \"17\"], , [, , \"1[78]\", , , , \"17\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], DK:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 4, 6]], , , [, , \"116(?:00[06]|111)\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"DK\", , , , , , , , , , , , , , , , , , [, , \"11[24]\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:[2-48]|6(?:00[06]|111))|8(?:01|1[0238]|28|30|5[13]|81))\", , , , \"112\"], [, , , , , , , , , [-1]], [, \r\n, , , , , , , , [-1]], , [, , , , , , , , , [-1]]], DM:[, [, , \"[39]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"DM\", , , , , , , , , , , , , , , , , , [, , \"333|9(?:11|99)\", , , , \"999\"], , [, , \"333|9(?:11|99)\", , , , \"999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], DO:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"DO\", , , , , , , , , , , , , , , , , , [, \r\n, \"112|911\", , , , \"112\"], , [, , \"112|911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], DZ:[, [, , \"[17]\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"DZ\", , , , , , , , , , , , , , , , , , [, , \"1[47]\", , , , \"17\", , , [2]], , [, , \"1[47]|730\", , , , \"17\"], [, , , , , , , , , [-1]], [, , \"730\", , , , \"730\", , , [3]], , [, , \"730\", , , , \"730\", , , [3]]], EC:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], \r\n, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"EC\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[12]|12)|911\", , , , \"911\"], , [, , \"1(?:0[12]|12)|911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], EE:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"1(?:1(?:[02]|6(?:000|111))|2(?:0(?:16|5)|28|55[47])|3(?:014|24|3(?:21|5)|660)|492|5(?:1[03]|410|501|977)|6(?:112|333|644)|7(?:012|127|89)|8(?:10|8[57])|9(?:0(?:[134]|90)|14))\", \r\n, , , \"116000\"], [, , \"1(?:18(?:[12458]|00)|2(?:0(?:[02-46-8]|1[0-36])|1(?:[0-4]|6[06])|2(?:[0-4]|5[25])|[367]|4(?:0[04]|[12]|4[24]|54)55[12457])|3(?:0(?:[02]|1[13578]|3[356])|1[1347]|2[02-5]|3(?:[01347]|2[023]|88)|4(?:[35]|4[34])|5(?:3[134]|5[035])|666)|4(?:2(?:00|4)|4(?:0[01358]|1[024]|50|7)|900)|5(?:0[0-35]|1(?:[1267]|5[0-7]|82)|2(?:[014-6]|22)|330|4(?:[35]|44)|5(?:00|[1-69])|9(?:[159]|[38]0|77))|6(?:1(?:00|1[19]|[356-9])|2(?:2[26]|[68])|3(?:22|36|6[36])|5|6(?:[0-359]|6[0-26])|7(?:00|55|7|8[89])|9(?:00|1|69))|7(?:0(?:[023]|1[0578])|1(?:00|2[034]|[4-9])|2(?:[07]|20|44)|7(?:[0-57]|9[79])|8(?:0[08]|2|8[0178])|9(?:00|97))|8(?:1[127]|8[1268]|9[269])|9(?:0(?:[02]|69|9[0269])|1[123689]|21))\", \r\n, , , \"1182\", , , [3, 4, 5]], , , , \"EE\", , , , , , , , , , , , , , , , , , [, , \"11[02]\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:[02-579]|6(?:000|111)|8(?:[09]\\\\d|[1-8]))|2(?:[0-245]\\\\d{1,2}|[36-9])|3(?:[0-6]\\\\d{1,2}|[7-9])|4(?:[1-489]\\\\d{1,2}|[05-7])|5(?:[0-59]\\\\d{1,2}|[6-8])|6(?:[05]|[1-46-9]\\\\d{1,2})|7(?:[0-27-9]\\\\d{1,2}|[3-6])|8(?:[02-7]|[189]\\\\d{1,2})|9(?:[0-2]\\\\d{1,2}|[3-9]))\", , , , \"115\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"1(?:18[1258]2(?:0(?:1[036]|[46])|166|21|4(?:0[04]|1|5[47])|[67])|3(?:0(?:1[13-578]|2|3[56])|1[15]|2[045]|3(?:[13]|2[13])|43|5(?:00|3[34]|53))|44(?:0[0135]|14|50|7)|5(?:05|1(?:[12]|5[1246]|8[12])|2(?:[01]|22)|3(?:00|3[03])|4(?:15|5)|500|9(?:5|77|80))|6(?:1[35-8]|226|3(?:22|3[36]|66)|644|7(?:00|7|89)|9(?:00|69))|7(?:01[258]|1(?:00|[15])|2(?:44|7)|8(?:00|87|9))|8(?:1[128]|8[56]|9(?:[26]|77))|90(?:2|69|92))\", \r\n, , , \"13500\", , , [4, 5]]], EG:[, [, , \"[13]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"EG\", , , , , , , , , , , , , , , , , , [, , \"1(?:2[23]|80)\", , , , \"122\", , , [3]], , [, , \"1(?:2[23]|[69]\\\\d{3}|80)|34400\", , , , \"122\"], [, , , , , , , , , [-1]], [, , \"34400\", , , , \"34400\", , , [5]], , [, , \"34400\", , , , \"34400\", , , [5]]], EH:[, [, , \"1\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"EH\", , \r\n, , , , , , , , , , , , , , , , [, , \"1(?:[59]|77)\", , , , \"15\"], , [, , \"1(?:[59]|77)\", , , , \"15\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], ER:[, [, , \"[12]\\\\d{2,5}\", , , , , , , [3, 6]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"ER\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[2-46]|2(?:4422|7799))|2(?:0(?:1(?:606|917)|2(?:099|914)))\", , , , \"113\"], , [, , \"1(?:1[2-6]|2(?:4422|7799))|2(?:0(?:1(?:606|917)|2(?:099|914)))\", , , , \"114\"], \r\n[, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], ES:[, [, , \"[0-379]\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"0(?:16|6[57]|88)|1(?:006|16\\\\d{3}|[3-7]\\\\d{2})|20\\\\d{4}\", , , , \"116111\", , , [3, 4, 6]], [, , \"1(?:18\\\\d{2}|2\\\\d{1,4})|2(?:2\\\\d{1,4}|[3-9]\\\\d{3,4})|9(?:0(?:5[124578]|7)|\\\\d{4,5})|[37]\\\\d{4,5}\", , , , \"23456\"], , , , \"ES\", , , , , , , , , , , , , , , , , , [, , \"08[58]|112\", , , , \"112\", , , [3]], , [, , \"0(?:1[0-26]|6[0-257]|8[058]|9[12])|1(?:0[03-57]\\\\d{1,3}|1(?:2|6(?:000|111)|8\\\\d{2})|2\\\\d{1,4}|3(?:[34]|\\\\d{2})|7(?:7|\\\\d{2})|[4-689]\\\\d{2})|2(?:[01]\\\\d{4}|2\\\\d{1,4}|[357]\\\\d{3}|80\\\\d{2})|3[357]\\\\d{3}|79[57]\\\\d{3}|9(?:0(?:5[124578]|7)|9[57]\\\\d{3})\", \r\n, , , \"010\"], [, , \"0(?:[16][0-2]|80|9[12])|21\\\\d{4}\", , , , \"211234\", , , [3, 6]], [, , \"1(?:2\\\\d{1,4}|3[34]|77)|22\\\\d{1,4}\", , , , \"123\"], , [, , \"[2379]\\\\d{4,5}\", , , , \"23456\", , , [5, 6]]], ET:[, [, , \"9\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"ET\", , , , , , , , , , , , , , , , , , [, , \"9(?:11?|[23]|9[17])\", , , , \"991\"], , [, , \"9(?:11?|[23]|9[17])\", , , , \"991\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , \r\n[-1]]], FI:[, [, , \"1\\\\d{2,5}|75[12]\\\\d{2}\", , , , , , , [3, 5, 6]], , , [, , \"116111\", , , , \"116111\", , , [6]], [, , , , , , , , , [-1]], , , , \"FI\", , , , , , , , , , , , , , , , , , [, , \"112\", , , , \"112\", , , [3]], , [, , \"11(?:2|6111)|75[12]\\\\d{2}\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], FJ:[, [, , \"[0-579]\\\\d{1,4}\", , , , , , , [2, 3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"FJ\", , , , , , , , , , , , , , , \r\n, , , [, , \"91[17]\", , , , \"911\", , , [3]], , [, , \"0(?:1[34]|8[1-4])|1(?:0[1-3]|[25]9)|2[289]|30|4(?:0404|4)|54|75|91[137]\", , , , \"22\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"40404\", , , , \"40404\", , , [5]]], FK:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"FK\", , , , , , , , , , , , , , , , , , [, , \"999\", , , , \"999\"], , [, , \"1\\\\d{2}|999\", , , , \"123\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , \r\n, , , , , , [-1]]], FM:[, [, , \"3\\\\d{5}|9\\\\d{2}\", , , , , , , [3, 6]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"FM\", , , , , , , , , , , , , , , , , , [, , \"320221|911\", , , , \"911\"], , [, , \"320221|911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], FO:[, [, , \"1\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"FO\", , , , , , , , , , , , , , , , , , [, , \"11[24]\", , , , \"112\", , , \r\n[3]], , [, , \"1(?:1[248]|4[124]\\\\d|71\\\\d|8[7-9]\\\\d)\", , , , \"114\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], FR:[, [, , \"1\\\\d{1,5}|[267]\\\\d{2,4}|3\\\\d{3,4}|[458]\\\\d{4}\", , , , , , , [2, 3, 4, 5, 6]], , , [, , \"1(?:0(?:07|13)|1(?:[0459]|6\\\\d{3}|871[03])|9[167])|224|3(?:[01]\\\\d{2}|3700)|740\", , , , \"3010\", , , [3, 4, 5, 6]], [, , \"118(?:[0-68]\\\\d{2}|7(?:0\\\\d|1[1-9]|[2-9]\\\\d))|36665|[4-8]\\\\d{4}\", , , , \"42000\", , , [5, 6]], , , , \"FR\", , , , , , , , , , , , , , \r\n, , , , [, , \"1(?:[578]|12)\", , , , \"112\", , , [2, 3]], , [, , \"1(?:0\\\\d{2}|1(?:[02459]|6(?:000|111)|8\\\\d{3})|9[167]|[578])|2(?:0(?:000|20)|24)|3\\\\d{3,4}|6(?:1[14]|34|\\\\d{4})|7(?:0[06]|22|40|\\\\d{4})|[458]\\\\d{4}\", , , , \"1010\"], [, , \"10(?:14|2[23]|34|6[14]|99)|2020|3(?:646|9[07]0)|6(?:1[14]|34)|70[06]\", , , , \"1023\", , , [3, 4]], [, , \"118777|2(?:0(?:000|20)|24)|6(?:1[14]|34)|7\\\\d{2}\", , , , \"118777\", , , [3, 4, 5, 6]], , [, , \"(?:114|[3-8]\\\\d{4})\", , , , \"33700\", , , [3, 5]]], GA:[, [, , \"1\\\\d{1,3}\", \r\n, , , , , , [2, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GA\", , , , , , , , , , , , , , , , , , [, , \"1(?:730|8|3\\\\d{2})\", , , , \"1730\"], , [, , \"1(?:730|8|3\\\\d{2})\", , , , \"1730\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], GB:[, [, , \"[1-467-9]\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"1(?:05|16\\\\d{3}|7[56]0|8000)|2(?:202|48)|4444\", , , , \"116000\"], [, , , , , , , , , [-1]], , , , \"GB\", , , , , , , , , , , , , , , , , , [, , \r\n\"112|999\", , , , \"112\", , , [3]], , [, , \"1(?:0[015]|1(?:[12]|6(?:000|1(?:11|23))|8\\\\d{3})|2(?:[123]|50)|33|4(?:1|7\\\\d)|5(?:\\\\d|71)|7(?:0\\\\d|[56]0)|800\\\\d|9[15])|2(?:02(?:02)?|1300|2(?:02|11|2)|3(?:02|336|45)|4(?:25|8))|3[13]3|4(?:0[02]|35[01]|44[45]|5\\\\d)|6(?:50|\\\\d{4})|7(?:0\\\\d{3}|8(?:9|\\\\d{3})|9\\\\d{3})|8\\\\d{4}|9(?:01|99)\", , , , \"150\"], [, , , , , , , , , [-1]], [, , \"1(?:250|571|7[56]0)|2(?:02(?:02)?|1300|3336|48)|4444|901\", , , , \"1571\", , , [3, 4, 5]], , [, , \"1250|2(?:0202|1300)|7\\\\d{4}|8[01]\\\\d{3}\", \r\n, , , \"20202\", , , [4, 5]]], GD:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GD\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , \"176\", , , , \"176\"], , [, , \"176\", , , , \"176\"]], GE:[, [, , \"[041]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GE\", , , , , , , , , , , , , , , , , , [, , \"0(?:11|22|33)|1(?:1[123]|22)\", , , \r\n, \"112\", , , [3]], , [, , \"0(?:11|22|33)|1(?:1[123]|22)|40404\", , , , \"112\"], [, , , , , , , , , [-1]], [, , \"40404\", , , , \"40404\", , , [5]], , [, , \"40404\", , , , \"40404\", , , [5]]], GF:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GF\", , , , , , , , , , , , , , , , , , [, , \"1[578]\", , , , \"15\"], , [, , \"1[578]\", , , , \"15\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], GG:[, [, , \"[19]\\\\d{2,5}\", , , , , , , \r\n[3, 4, 5, 6]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GG\", , , , , , , , , , , , , , , , , , [, , \"112|999\", , , , \"999\", , , [3]], , [, , \"1(?:0[01]|1(?:[12]|[68]\\\\d{3})|23|4(?:1|7\\\\d)|55|800\\\\d|9[05])|999\", , , , \"155\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], GH:[, [, , \"[14589]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GH\", , , , , , , , , , , , , , , , , , [, , \"19[123]|999\", \r\n, , , \"999\", , , [3]], , [, , \"19[123]|40404|(?:54|83)00|999\", , , , \"999\"], [, , , , , , , , , [-1]], [, , \"40404|(?:54|83)00\", , , , \"5400\", , , [4, 5]], , [, , \"40404|(?:54|83)00\", , , , \"5400\", , , [4, 5]]], GI:[, [, , \"[158]\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"1(?:00|16\\\\d{3}|23|4(?:1|7\\\\d)|5[15]|9[2-4])|555|80\\\\d{2}\", , , , \"100\", , , [3, 4, 6]], [, , \"8[1-69]\\\\d{2}\", , , , \"8112\", , , [4]], , , , \"GI\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|9[09])\", , , , \"112\", , , [3]], \r\n, [, , \"1(?:00|1(?:2|6(?:00[06]|1(?:1[17]|23))|8\\\\d{2})|23|4(?:1|7[014])|5[015]|9[02349])|555|8(?:0(?:0|\\\\d{2})|[1-35-79]\\\\d{2}|4(?:[0-2]|\\\\d{2})|8[1-589])\", , , , \"116000\"], [, , \"150|87\\\\d{2}\", , , , \"150\", , , [3, 4]], [, , \"1(?:18\\\\d{2}|23|51|9[2-4])|555|8(?:00|88)\", , , , \"123\", , , [3, 5]], , [, , , , , , , , , [-1]]], GL:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GL\", , , , , , , , , , , , , , , , , , [, , \"112\", , , , \"112\"], , [, , \r\n\"112\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], GM:[, [, , \"1\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GM\", , , , , , , , , , , , , , , , , , [, , \"1?1[678]\", , , , \"117\"], , [, , \"1?1[678]\", , , , \"117\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], GN:[, [, , \"4\\\\d{4}\", , , , , , , [5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GN\", \r\n, , , , , , , , , , , , , , , , , [, , , , , , , , , [-1]], , [, , \"40404\", , , , \"40404\"], [, , , , , , , , , [-1]], [, , \"40404\", , , , \"40404\"], , [, , \"40404\", , , , \"40404\"]], GP:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GP\", , , , , , , , , , , , , , , , , , [, , \"1[578]\", , , , \"18\"], , [, , \"1[578]\", , , , \"18\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], GR:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 6]], \r\n, , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"GR\", , , , , , , , , , , , , , , , , , [, , \"1(?:00|12|66|99)\", , , , \"112\", , , [3]], , [, , \"1(?:00|1(?:2|6(?:000|1(?:11|23)))|66|99)\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], GT:[, [, , \"[14]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GT\", , , , , , , , , , , , , , , , , , [, , \"1(?:10|2[03])\", , , , \"110\", \r\n, , [3]], , [, , \"1(?:10|2\\\\d|[57]\\\\d{2})|40404\", , , , \"123\"], [, , , , , , , , , [-1]], [, , \"40404\", , , , \"40404\", , , [5]], , [, , \"40404\", , , , \"40404\", , , [5]]], GU:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GU\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], GW:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , \r\n, , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GW\", , , , , , , , , , , , , , , , , , [, , \"11[378]\", , , , \"113\"], , [, , \"11[378]\", , , , \"113\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], GY:[, [, , \"[019]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"GY\", , , , , , , , , , , , , , , , , , [, , \"91[123]\", , , , \"911\", , , [3]], , [, , \"0(?:02|171|444|7(?:[67]7|9)|801|9(?:0[78]|[2-47]))|1(?:443|5[568])|91[123]\", \r\n, , , \"0801\"], [, , , , , , , , , [-1]], [, , \"1443\", , , , \"1443\", , , [4]], , [, , \"1443\", , , , \"1443\", , , [4]]], HK:[, [, , \"[19]\\\\d{2,6}\", , , , , , , [3, 4, 5, 6, 7]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"HK\", , , , , , , , , , , , , , , , , , [, , \"112|99[29]\", , , , \"999\", , , [3]], , [, , \"1(?:0(?:[0136]\\\\d{0,4}|2[14]\\\\d{0,3}|8[138]|9)|12|2(?:[0-3]\\\\d{0,4}|58\\\\d{0,3}|8[13]\\\\d{0,3})|7(?:[135-9]\\\\d{0,4}|21[89]\\\\d{0,2}|421\\\\d{0,2})|8(?:0(?:[13]\\\\d|60\\\\d{2}|8)|1(?:0\\\\d|[2-8])|2(?:182|3|8[128])|3\\\\d{4}|4(?:1[1-5]|[23]1|6[12])|50[138]|6(?:000|1(?:[13]1|86)|8)|7(?:13|2[1-389]|8[0235-9]|93)\\\\d{2}|8\\\\d))|99[29]\", \r\n, , , \"999\"], [, , , , , , , , , [-1]], [, , \"1(?:0(?:8\\\\d|9)|850\\\\d)\", , , , \"1088\", , , [3, 4, 5]], , [, , , , , , , , , [-1]]], HN:[, [, , \"[14]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"HN\", , , , , , , , , , , , , , , , , , [, , \"199\", , , , \"199\", , , [3]], , [, , \"199|40404\", , , , \"199\"], [, , , , , , , , , [-1]], [, , \"40404\", , , , \"40404\", , , [5]], , [, , \"40404\", , , , \"40404\", , , [5]]], HR:[, [, , \"[19]\\\\d{1,5}\", , , , , , , [2, 3, \r\n4, 5, 6]], , , [, , \"1(?:16\\\\d{3}|3977)\", , , , \"116000\", , , [5, 6]], [, , \"118\\\\d{2}\", , , , \"11812\", , , [5]], , , , \"HR\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|9[2-4])|9[34]\", , , , \"112\", , , [2, 3]], , [, , \"1(?:1(?:2|6(?:00[06]|1(?:1[17]|23))|8\\\\d{2})|3977|9(?:[2-5]|87))|9[34]\", , , , \"112\"], [, , , , , , , , , [-1]], [, , \"13977\", , , , \"13977\", , , [5]], , [, , \"13977\", , , , \"13977\", , , [5]]], HT:[, [, , \"[14]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , \r\n, , , , , , [-1]], , , , \"HT\", , , , , , , , , , , , , , , , , , [, , \"11[48]\", , , , \"118\", , , [3]], , [, , \"11[48]|40404\", , , , \"114\"], [, , , , , , , , , [-1]], [, , \"40404\", , , , \"40404\", , , [5]], , [, , \"40404\", , , , \"40404\", , , [5]]], HU:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 6]], , , [, , \"116(?:000|1(?:11|23))\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"HU\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[457]|12)\", , , , \"112\", , , [3]], , [, , \"1(?:0[457]|1(?:2|6(?:000|1(?:11|23))))\", \r\n, , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], ID:[, [, , \"[178]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"ID\", , , , , , , , , , , , , , , , , , [, , \"11[02389]\", , , , \"112\", , , [3]], , [, , \"1(?:1[02389]|40\\\\d{2})|71400|89887\", , , , \"112\"], [, , , , , , , , , [-1]], [, , \"71400|89887\", , , , \"71400\", , , [5]], , [, , \"71400\", , , , \"71400\", , , [5]]], IE:[, [, , \"[159]\\\\d{2,5}\", , , , , , , [3, \r\n4, 5, 6]], , , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , \"5[37]\\\\d{3}\", , , , \"53012\", , , [5]], , , , \"IE\", , , , , , , , , , , , , , , , , , [, , \"112|999\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:2|6(?:00[06]|1(?:1[17]|23))|8\\\\d{2})|9\\\\d{2})|5[0137]\\\\d{3}|999\", , , , \"112\"], [, , \"51\\\\d{3}\", , , , \"51012\", , , [5]], [, , \"51210\", , , , \"51210\", , , [5]], , [, , \"118\\\\d{2}|5(?:[037]\\\\d{3}|1210)\", , , , \"51210\", , , [5]]], IL:[, [, , \"1\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , \r\n, , [-1]], [, , , , , , , , , [-1]], , , , \"IL\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[012]|12)\", , , , \"112\", , , [3]], , [, , \"1(?:0(?:[012]|400)|1(?:[013-9]\\\\d|2)|[2-9]\\\\d{2})\", , , , \"1455\"], [, , , , , , , , , [-1]], [, , \"10400\", , , , \"10400\", , , [5]], , [, , \"10400\", , , , \"10400\", , , [5]]], IM:[, [, , \"[189]\\\\d{2,5}\", , , , , , , [3, 5, 6]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"IM\", , , , , , , , , , , , , , , , , , [, , \"999\", , , , \"999\", , , [3]], , \r\n[, , \"1\\\\d{2}(?:\\\\d{3})?|8(?:6444|9887)|999\", , , , \"150\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"8(?:6444|9887)\", , , , \"86444\", , , [5]]], IN:[, [, , \"[125]\\\\d{2,7}\", , , , , , , [3, 4, 5, 6, 7, 8]], , , [, , \"1\\\\d{2,5}\", , , , \"105010\", , , [3, 4, 5, 6]], [, , \"11[67][0-2]\\\\d{3}|56161561\", , , , \"1160530\", , , [7, 8]], , , , \"IN\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[0128]|12|298)|2611\", , , , \"108\", , , [3, 4]], , [, , \"1(?:0(?:[01248]|5(?:010|6|902)|7(?:[07]|80)|9[0157])|1(?:[289]|[67][0-2]\\\\d{3})|2(?:1|98)|39|4[01]|55[23]\\\\d{2}|7000|9(?:0[019]|47|50|6[1347]|[89]))|2611|5(?:14(?:2[5-9]|[34]\\\\d)|3000|6161(?:17[89]|561)|757555)\", \r\n, , , \"108\"], [, , \"5(?:14(?:2[5-9]|[34]\\\\d)|757555)\", , , , \"5757555\", , , [5, 7]], [, , \"1(?:1(?:[67][0-2]\\\\d{3}|[89])|21|4[01]|55330|7\\\\d{3}|9(?:[89]|09))|5(?:3000|6161(?:17[89]|561))\", , , , \"53000\"], , [, , \"1(?:39|90[019])|5(?:14(?:2[5-9]|[34]\\\\d)|6161(?:17[89]|561)|757555)\", , , , \"51431\", , , [3, 4, 5, 7, 8]]], IQ:[, [, , \"[1479]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"IQ\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[04]|15|22)\", \r\n, , , \"122\", , , [3]], , [, , \"1(?:0[04]|15|22)|4432|71117|9988\", , , , \"4432\"], [, , , , , , , , , [-1]], [, , \"4432|71117|9988\", , , , \"4432\", , , [4, 5]], , [, , \"4432|71117|9988\", , , , \"4432\", , , [4, 5]]], IR:[, [, , \"[0-29]\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"1[129]\\\\d\", , , , \"123\", , , [3]], [, , , , , , , , , [-1]], , , , \"IR\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[025]|25)|911\", , , , \"112\", , , [3]], , [, , \"096(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])|1(?:1[0-68]|2[0-59]|3[346-8]|4(?:[0147]|[289]0)|5(?:0[14]|1[02479]|2[0-3]|39|[49]0|65)|6(?:[16]6|[27]|90)|8(?:03|1[18]|22|3[37]|4[28]|88|99)|9[0-579])|20(?:00|1(?:[038]|1[079]|26|9[69])|2[01]|90)|9(?:11|9(?:90|0009))\", \r\n, , , \"112\"], [, , \"(?:096|1[58])\\\\d{2}\", , , , \"09612\", , , [4, 5]], [, , \"1[58]\\\\d{2}|99(?:90|0009)\", , , , \"9990\", , , [4, 6]], , [, , \"990009\", , , , \"990009\", , , [6]]], IS:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 4, 6]], , , [, , \"1717\", , , , \"1717\", , , [4]], [, , , , , , , , , [-1]], , , , \"IS\", , , , , , , , , , , , , , , , , , [, , \"112\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:[28]|6(?:1(?:23|16)))|4(?:00|1[145]|4[0146])|55|7(?:00|17|7[07-9])|8(?:[02]0|1[16-9]|88)|900)\", , , , \"112\"], [, , \r\n, , , , , , , [-1]], [, , \"14(?:00|41)\", , , , \"1441\", , , [4]], , [, , \"1(?:415|900)\", , , , \"1415\", , , [4]]], IT:[, [, , \"[14]\\\\d{2,6}\", , , , , , , [3, 4, 5, 6, 7]], , , [, , \"1(?:16\\\\d{3}|87)\", , , , \"187\", , , [3, 6]], [, , \"(?:12|4(?:[478]\\\\d{1,3}|55))\\\\d{2}\", , , , \"1254\", , , [4, 5, 6, 7]], , , , \"IT\", , , , , , , , , , , , , , , , , , [, , \"11[2358]\", , , , \"112\", , , [3]], , [, , \"1(?:0\\\\d{2,3}|1(?:[2-5789]|6(?:000|111))|2\\\\d{2}|3[39]|4(?:82|9\\\\d{1,3})|5(?:00|1[58]|2[25]|3[03]|44|[59])|60|8[67]|9(?:[01]|2(?:[01]\\\\d{2}|[2-9])|4\\\\d|696))|4(?:2323|3(?:[01]|[45]\\\\d{2})\\\\d{2}|[478](?:[0-4]|[5-9]\\\\d{2})\\\\d{2}|5(?:045|5\\\\d{2}))\", \r\n, , , \"114\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"4[3-578]\\\\d{3,5}\", , , , \"43000\", , , [5, 6, 7]]], JE:[, [, , \"[129]\\\\d{2,5}\", , , , , , , [3, 4, 6]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"JE\", , , , , , , , , , , , , , , , , , [, , \"112|999\", , , , \"999\", , , [3]], , [, , \"1(?:00|1(?:2|8\\\\d{3})|23|4(?:[14]|28|7\\\\d)|5\\\\d|7(?:0[12]|[128]|35?)|808|9[0135])|23[234]|999\", , , , \"150\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , \r\n, , , , [-1]]], JM:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"JM\", , , , , , , , , , , , , , , , , , [, , \"11[029]|911\", , , , \"112\"], , [, , \"1(?:1[029]|76)|911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , \"176\", , , , \"176\"], , [, , \"176\", , , , \"176\"]], JO:[, [, , \"[19]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"JO\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|9[127])|911\", , , , \r\n\"112\", , , [3]], , [, , \"1(?:09|1[0-2]|9[0-24-79])|9(?:0903|11|8788)\", , , , \"111\"], [, , , , , , , , , [-1]], [, , \"9(?:0903|8788)\", , , , \"90903\", , , [5]], , [, , \"9(?:0903|8788)\", , , , \"90903\", , , [5]]], JP:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"JP\", , , , , , , , , , , , , , , , , , [, , \"11[09]\", , , , \"110\"], , [, , \"11[09]\", , , , \"110\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], KE:[, [, \r\n, \"[1-9]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , \"1(?:1(?:6|9\\\\d)|5(?:01|2[127]|6(?:29|6[67])))\", , , , \"1501\", , , [4, 5]], [, , \"909\\\\d{2}\", , , , \"90912\", , , [5]], , , , \"KE\", , , , , , , , , , , , , , , , , , [, , \"112|114|999\", , , , \"999\", , , [3]], , [, , \"1(?:0(?:[07-9]|1[0-25]|400)|1(?:[02456]|9[0-579])|2[123]|3[01]|4[14]|5(?:[01][01]|2[0-24-79]|33|4[05]|5[59]|6(?:00|29|6[67]))|6[035]\\\\d{2}|[78]\\\\d|9(?:[02-9]\\\\d{2}|19))|(?:2[0-79]|3[0-29]|4[0-4])\\\\d{3}|5(?:[0-7]\\\\d|99)\\\\d{2}|(?:6[2357]|7[0-29])\\\\d{3}|8(?:[0-9]\\\\d{3}|988)|9(?:09\\\\d{2}|99)\", \r\n, , , \"116\"], [, , , , , , , , , [-1]], [, , \"1(?:0400|3[01]|4[14]|5(?:1[01]|2[25])|6[35]\\\\d{2})|(?:2[0-79]|3[0-29]|4[0-4])\\\\d{3}|5(?:[0-7]\\\\d|99)\\\\d{2}|(?:6[2357]|7[0-29])\\\\d{3}|8(?:988|[0-9]\\\\d{3})|909\\\\d{2}\", , , , \"90912\"], , [, , \"1(?:0400|4[14]|5(?:01|55|6(?:29|6[67]))|6[035]\\\\d{2})|40404|8988|909\\\\d{2}\", , , , \"8988\"]], KG:[, [, , \"[14]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"KG\", , , , , , , , , , , , , , , , , , [, , \"10[123]\", , , , \r\n\"101\", , , [3]], , [, , \"10[123]|4040\", , , , \"101\"], [, , , , , , , , , [-1]], [, , \"4040\", , , , \"4040\", , , [4]], , [, , \"4040\", , , , \"4040\", , , [4]]], KH:[, [, , \"[146]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"KH\", , , , , , , , , , , , , , , , , , [, , \"11[789]|666\", , , , \"117\", , , [3]], , [, , \"11[789]|40404|666\", , , , \"117\"], [, , , , , , , , , [-1]], [, , \"40404\", , , , \"40404\", , , [5]], , [, , \"40404\", , , , \"40404\", , , [5]]], KI:[, \r\n[, , \"[179]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"KI\", , , , , , , , , , , , , , , , , , [, , \"19[2-5]|99[2349]\", , , , \"192\", , , [3]], , [, , \"1(?:0(?:[0-8]|5[01259])|88|9[2-5])|777|99[2349]\", , , , \"100\"], [, , \"103\", , , , \"103\", , , [3]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], KM:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"KM\", , , , , , , , , , , , , , , , , , [, , \"1[78]\", \r\n, , , \"17\"], , [, , \"1[78]\", , , , \"17\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], KN:[, [, , \"[39]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"KN\", , , , , , , , , , , , , , , , , , [, , \"333|9(?:11|99)\", , , , \"999\"], , [, , \"333|9(?:11|99)\", , , , \"999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], KP:[, [, , \"[18]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, \r\n, , , , , , , , [-1]], , , , \"KP\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|19)|819\", , , , \"112\"], , [, , \"1(?:12|19)|819\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], KR:[, [, , \"1\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , \"1(?:1[78]|28|330|82)\", , , , \"118\", , , [3, 4]], [, , , , , , , , , [-1]], , , , \"KR\", , , , , , , , , , , , , , , , , , [, , \"11[29]\", , , , \"112\", , , [3]], , [, , \"1(?:0(?:[01]|114)|1(?:[0247-9]|114)|2[01389]|3(?:2|3[039]|45|66|88|9[18])|[679]114|8(?:114|2))\", \r\n, , , \"112\"], [, , , , , , , , , [-1]], [, , \"1(?:0(?:[01]|114)|1(?:114|4)|[6-9]114)\", , , , \"100\", , , [3, 5]], , [, , , , , , , , , [-1]]], KW:[, [, , \"[18]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"KW\", , , , , , , , , , , , , , , , , , [, , \"112\", , , , \"112\", , , [3]], , [, , \"1[0-7]\\\\d|89887\", , , , \"177\"], [, , , , , , , , , [-1]], [, , \"89887\", , , , \"89887\", , , [5]], , [, , , , , , , , , [-1]]], KY:[, [, , \"9\\\\d{2}\", , , , , , , [3]], \r\n, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"KY\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], KZ:[, [, , \"[134]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"KZ\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[123]|12)\", , , , \"112\", , , [3]], , [, , \"1(?:0[1-4]|12)|30400|4040\", , , , \"112\"], [, , , , , , , \r\n, , [-1]], [, , \"30400|4040\", , , , \"30400\", , , [4, 5]], , [, , \"30400|4040\", , , , \"30400\", , , [4, 5]]], LA:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"LA\", , , , , , , , , , , , , , , , , , [, , \"19[015]\", , , , \"190\"], , [, , \"19[015]\", , , , \"190\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], LB:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"LB\", \r\n, , , , , , , , , , , , , , , , , [, , \"1(?:12|40|75)|999\", , , , \"112\"], , [, , \"1(?:12|40|75)|999\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], LC:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"LC\", , , , , , , , , , , , , , , , , , [, , \"9(?:11|99)\", , , , \"911\"], , [, , \"9(?:11|99)\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], LI:[, [, , \"1\\\\d{2,3}\", \r\n, , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"LI\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[278]|44)\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:[278]|45)|4[3-57]|50|75|81[18])\", , , , \"1145\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], LK:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"LK\", , , , , , , , , , , , , , , , , , [, , \"11[02689]\", , , , \"119\"], , [, , \"11[024-9]\", \r\n, , , \"119\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], LR:[, [, , \"[3489]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"LR\", , , , , , , , , , , , , , , , , , [, , \"355|911\", , , , \"911\", , , [3]], , [, , \"355|4040|8(?:400|933)|911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , \"4040|8(?:400|933)\", , , , \"8400\", , , [4]], , [, , \"4040|8(?:400|933)\", , , , \"8400\", , , [4]]], LS:[, [, , \"1\\\\d{2}\", , , , , , , [3]], \r\n, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"LS\", , , , , , , , , , , , , , , , , , [, , \"11[257]\", , , , \"112\"], , [, , \"11[257]\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], LT:[, [, , \"[01]\\\\d{1,5}\", , , , , , , [2, 3, 6]], , , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"LT\", , , , , , , , , , , , , , , , , , [, , \"0(?:11?|22?|33?)|1(?:0[123]|12)\", , , , \"112\", , , [2, 3]], , [, , \"0(?:11?|22?|33?)|1(?:0[123]|1(?:2|6(?:000|1(?:11|23))))\", \r\n, , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], LU:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 5, 6]], , , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"LU\", , , , , , , , , , , , , , , , , , [, , \"11[23]\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:[23]|6(?:000|111))|2\\\\d{3})\", , , , \"12123\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], LV:[, [, , \"0\\\\d|1\\\\d{2,6}|8\\\\d{3,4}\", , , , , , , [2, 3, \r\n4, 5, 6]], , , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , \"1180|8(?:2\\\\d{3}|[89]\\\\d{2})\", , , , \"1180\", , , [4, 5]], , , , \"LV\", , , , , , , , , , , , , , , , , , [, , \"0[123]|11[023]\", , , , \"112\", , , [2, 3]], , [, , \"0[1-4]|1(?:1(?:[02-4]|6(?:000|111)|8[0189])|55|655|77)|821[57]4\", , , , \"112\"], [, , \"1181\", , , , \"1181\", , , [4]], [, , \"16\\\\d{2}\", , , , \"1655\", , , [4]], , [, , , , , , , , , [-1]]], LY:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , \r\n[-1]], , , , \"LY\", , , , , , , , , , , , , , , , , , [, , \"19[013]\", , , , \"193\"], , [, , \"19[013]\", , , , \"193\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MA:[, [, , \"1\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MA\", , , , , , , , , , , , , , , , , , [, , \"1(?:[59]|77)\", , , , \"15\"], , [, , \"1(?:[59]|77)\", , , , \"15\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MC:[, [, \r\n, \"1\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MC\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|[578])\", , , , \"112\"], , [, , \"1(?:12|41|[578])\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MD:[, [, , \"[19]\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"MD\", , , , , , , , , , , , , , , , , , [, , \"112|90[1-3]\", , , , \"112\", \r\n, , [3]], , [, , \"1(?:1(?:2|6(?:000|1(?:11|23))|8\\\\d{1,2}|99)|4\\\\d{3}|6[0-389]\\\\d|9(?:0[04-9]|[1-4]\\\\d))|90[1-3]\", , , , \"116000\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], ME:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"ME\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|2[234])\", , , , \"112\", , , [3]], , [, , \"1(?:[035]\\\\d{2}|1(?:[013-57-9]\\\\d|2|6\\\\d{3})|2\\\\d{1,2}|4\\\\d{2,3}|9\\\\d{3})\", , , , \r\n\"1011\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MF:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MF\", , , , , , , , , , , , , , , , , , [, , \"1[578]\", , , , \"18\"], , [, , \"1[578]\", , , , \"18\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MG:[, [, , \"1\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MG\", , , , , , , , , , , \r\n, , , , , , , [, , \"11?[78]\", , , , \"117\"], , [, , \"11?[78]\", , , , \"117\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MH:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MH\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MK:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], \r\n[, , , , , , , , , [-1]], , , , \"MK\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|9[234])\", , , , \"112\"], , [, , \"1(?:12|9[234])\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], ML:[, [, , \"[13678]\\\\d{1,4}\", , , , , , , [2, 3, 4, 5]], , , [, , \"35200|67(?:00|77)|74(?:02|44)|8000[12]\", , , , \"35200\", , , [4, 5]], [, , \"122[13]|3(?:52(?:11|2[02]|3[04-6]|99)|7574)|8002[12]\", , , , \"35211\", , , [4, 5]], , , , \"ML\", , , , , , , , , , , , , , , , , , [, \r\n, \"1[578]\", , , , \"17\", , , [2]], , [, , \"1(?:1(?:2|[013-9]\\\\d)|2(?:1[02-469]|2[13])|[578])|3(?:5(?:0(?:35|57)|2\\\\d{2})|[67]\\\\d{3})|67(?:0[09]|59|77|8[89]|99)|74(?:0[02]|44|55)|800[012][12]\", , , , \"1210\"], [, , \"37(?:433|575)|7400|8001[12]\", , , , \"7400\", , , [4, 5]], [, , \"3(?:5035|[67]\\\\d{3})|800[012][12]\", , , , \"35035\", , , [5]], , [, , \"3(?:6\\\\d{3}|7(?:4(?:0[24-9]|[1-9]\\\\d)|5\\\\d{2}))|7400\", , , , \"37575\", , , [4, 5]]], MM:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, \r\n, , , , , , , , [-1]], , , , \"MM\", , , , , , , , , , , , , , , , , , [, , \"199\", , , , \"199\"], , [, , \"199\", , , , \"199\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MN:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MN\", , , , , , , , , , , , , , , , , , [, , \"10[0-3]\", , , , \"102\"], , [, , \"10[0-3]\", , , , \"102\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MO:[, [, , \"9\\\\d{2}\", \r\n, , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MO\", , , , , , , , , , , , , , , , , , [, , \"999\", , , , \"999\"], , [, , \"999\", , , , \"999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MP:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MP\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \r\n, [, , , , , , , , , [-1]]], MQ:[, [, , \"1\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MQ\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|[578])\", , , , \"15\"], , [, , \"1(?:12|[578])\", , , , \"15\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MR:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MR\", , , , , , , , , , , , , , , , , , [, , \"1[78]\", , , , \"17\"], , [, , \r\n\"1[78]\", , , , \"17\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MS:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MS\", , , , , , , , , , , , , , , , , , [, , \"9(?:11|99)\", , , , \"911\"], , [, , \"9(?:11|99)\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MT:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 6]], , , [, , \"116(?:000|1(?:11|23))\", , , , \"116000\", , , [6]], [, \r\n, , , , , , , , [-1]], , , , \"MT\", , , , , , , , , , , , , , , , , , [, , \"112\", , , , \"112\", , , [3]], , [, , \"11(?:2|6(?:000|1(?:11|23)))\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MU:[, [, , \"[189]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MU\", , , , , , , , , , , , , , , , , , [, , \"11[45]|99[59]\", , , , \"999\", , , [3]], , [, , \"1\\\\d{2,4}|8\\\\d{3}|99\\\\d\", , , , \"995\"], [, , , , , , , , \r\n, [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MV:[, [, , \"[14]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MV\", , , , , , , , , , , , , , , , , , [, , \"1(?:02|1[89])\", , , , \"102\", , , [3]], , [, , \"1(?:[0-37-9]\\\\d|[45](?:1|\\\\d{2})|6\\\\d{2})|4040\", , , , \"123\"], [, , , , , , , , , [-1]], [, , \"1[45]1\", , , , \"141\", , , [3]], , [, , , , , , , , , [-1]]], MW:[, [, , \"[189]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], \r\n[, , , , , , , , , [-1]], , , , \"MW\", , , , , , , , , , , , , , , , , , [, , \"199|99[789]\", , , , \"997\", , , [3]], , [, , \"199|80400|99[789]\", , , , \"997\"], [, , , , , , , , , [-1]], [, , \"80400\", , , , \"80400\", , , [5]], , [, , \"80400\", , , , \"80400\", , , [5]]], MX:[, [, , \"[0579]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , \"53053|7766\", , , , \"7766\", , , [4, 5]], , , , \"MX\", , , , , , , , , , , , , , , , , , [, , \"0(?:6[0568]|80)|911\", , , , \"066\", , , [3]], , [, , \"0(?:[249]0|3[01]|5[015]|6[01568]|7[0-578]|8[089])|53053|7766|911\", \r\n, , , \"030\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], MY:[, [, , \"[139]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MY\", , , , , , , , , , , , , , , , , , [, , \"112|999\", , , , \"999\", , , [3]], , [, , \"1(?:0(?:[01348]|[569]\\\\d)|1(?:[02]|1[128]|311)|2(?:0[125]|[13-6]|2\\\\d{0,2})|3(?:09\\\\d|[1-39]\\\\d{1,2}|6|[5-7]\\\\d{0,2})|5(?:[12]\\\\d|454|5\\\\d{1,2}|77|888|999?)|7(?:[136-9]\\\\d|[45]\\\\d{1,2})|8(?:18?|2|8[18])|9(?:[03]\\\\d|[124]\\\\d?|68|71|9[0679]))|3[23679]\\\\d{3}|99[1-469]\", \r\n, , , \"999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"3[23679]\\\\d{3}\", , , , \"36000\", , , [5]]], MZ:[, [, , \"1\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"MZ\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[79]|9[78])\", , , , \"119\", , , [3]], , [, , \"1(?:[02-5]\\\\d{2}|1[79]|9[78])\", , , , \"1011\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], NA:[, [, , \"[19]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , \r\n, [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"NA\", , , , , , , , , , , , , , , , , , [, , \"10111\", , , , \"10111\", , , [5]], , [, , \"1(?:0111|\\\\d{3})|9(?:3111|\\\\d{2})\", , , , \"93111\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], NC:[, [, , \"1\\\\d{1,3}|3\\\\d{3}|5\\\\d{2}\", , , , , , , [2, 3, 4]], , , [, , \"10(?:00|1[23]|3[0-2]|88)|3631|577\", , , , \"1000\", , , [3, 4]], [, , , , , , , , , [-1]], , , , \"NC\", , , , , , , , , , , , , , , , , , [, , \"1[5-8]\", \r\n, , , \"15\", , , [2]], , [, , \"1(?:0(?:0[06]|1[02-46]|20|3[0125]|42|5[058]|77|88)|[5-8])|3631|5[6-8]\\\\d\", , , , \"1000\"], [, , \"5(?:67|88)\", , , , \"567\", , , [3]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], NE:[, [, , \"[1-358]\\\\d{1,2}|723141\", , , , , , , [2, 3, 6]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"NE\", , , , , , , , , , , , , , , , , , [, , \"1[578]|723141\", , , , \"17\", , , [2, 6]], , [, , \"1(?:0[01]|1[12]|2[034]|3[013]|40|55?|60|7|8)|222|333|555|723141|888\", \r\n, , , \"112\"], [, , , , , , , , , [-1]], [, , \"1(?:0[01]|1[12]|2[034]|3[013]|40|55|60)|222|333|555|888\", , , , \"100\", , , [3]], , [, , , , , , , , , [-1]]], NF:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"NF\", , , , , , , , , , , , , , , , , , [, , \"9(?:11|55|77)\", , , , \"911\"], , [, , \"9(?:11|55|77)\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], NG:[, [, , \"[14]\\\\d{2,4}\", , , , , , , [3, 5]], \r\n, , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"NG\", , , , , , , , , , , , , , , , , , [, , \"199\", , , , \"199\", , , [3]], , [, , \"199|40700\", , , , \"199\"], [, , , , , , , , , [-1]], [, , \"40700\", , , , \"40700\", , , [5]], , [, , \"40700\", , , , \"40700\", , , [5]]], NI:[, [, , \"[12467]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , \"7373\", , , , \"7373\", , , [4]], [, , , , , , , , , [-1]], , , , \"NI\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[58]|2[08])\", , , , \"118\", , , [3]], , [, , \"1(?:1[58]|2(?:[158]|00?)|900)|2100|4878|6100|7(?:010|100|373)\", \r\n, , , \"118\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], NL:[, [, , \"[1349]\\\\d{2,5}\", , , , , , , [3, 4, 6]], , , [, , \"116(?:00[06]|1(?:11|23))\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"NL\", , , , , , , , , , , , , , , , , , [, , \"112|911\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:2|6(?:00[06]|1(?:11|23)))|2(?:0[0-4]|3[34]|44)|3[03-9]\\\\d|400|8(?:[02-9]\\\\d|1[0-79]))|[34]000|911\", , , , \"1833\"], [, , , , , , , , , [-1]], [, , \"120[0-4]\", , , , \r\n\"1202\", , , [4]], , [, , \"[34]000\", , , , \"4000\", , , [4]]], NO:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 4, 6]], , , [, , \"1161(?:1[17]|23)\", , , , \"116117\", , , [6]], [, , , , , , , , , [-1]], , , , \"NO\", , , , , , , , , , , , , , , , , , [, , \"11[023]\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:[0239]|61(?:1[17]|23))|2[048]|4(?:12|[59])|7[57]|90)\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], NP:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , \r\n, [-1]], [, , , , , , , , , [-1]], , , , \"NP\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[0-3]|12)\", , , , \"112\"], , [, , \"1(?:0[0-3]|12)\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], NR:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"NR\", , , , , , , , , , , , , , , , , , [, , \"11[0-2]\", , , , \"110\"], , [, , \"1(?:1[0-2]|23|92)\", , , , \"110\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \r\n, [, , , , , , , , , [-1]]], NU:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"NU\", , , , , , , , , , , , , , , , , , [, , \"999\", , , , \"999\"], , [, , \"999\", , , , \"999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], NZ:[, [, , \"[14]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"NZ\", , , , , , , , , , , , , , , , , , [, , \"111\", , , , \"111\", , , [3]], , [, , \"111|4098\", \r\n, , , \"111\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"4098\", , , , \"4098\", , , [4]]], OM:[, [, , \"9\\\\d{3}\", , , , , , , [4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"OM\", , , , , , , , , , , , , , , , , , [, , \"9999\", , , , \"9999\"], , [, , \"9999\", , , , \"9999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PA:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"PA\", , , \r\n, , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"10[2-4]|911\", , , , \"102\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PE:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"PE\", , , , , , , , , , , , , , , , , , [, , \"1(?:05|1[67])\", , , , \"105\"], , [, , \"1(?:05|1[67])\", , , , \"105\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PF:[, [, , \"1\\\\d\", , , , , , , \r\n[2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"PF\", , , , , , , , , , , , , , , , , , [, , \"1[578]\", , , , \"15\"], , [, , \"1[578]\", , , , \"15\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PG:[, [, , \"0\\\\d{2}|1\\\\d{2,6}\", , , , , , , [3, 4, 5, 6, 7]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"PG\", , , , , , , , , , , , , , , , , , [, , \"000|11[01]\", , , , \"000\", , , [3]], , [, , \"000|1(?:1[01]|5\\\\d{2}|6\\\\d{2,5})\", , , , \r\n\"000\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"16\\\\d{2,5}\", , , , \"1612\", , , [4, 5, 6, 7]]], PH:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"PH\", , , , , , , , , , , , , , , , , , [, , \"11[27]|911\", , , , \"117\"], , [, , \"11[27]|911\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PK:[, [, , \"1\\\\d{1,3}\", , , , , , , [2, 3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , \r\n, , [-1]], , , , \"PK\", , , , , , , , , , , , , , , , , , [, , \"1(?:1(?:22?|5)|[56])\", , , , \"112\"], , [, , \"1(?:1(?:22?|5)|[56])\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PL:[, [, , \"1\\\\d{2}(?:\\\\d{2,3})?|9\\\\d{2}\", , , , , , , [3, 5, 6]], , , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"PL\", , , , , , , , , , , , , , , , , , [, , \"112|99[789]\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:2|6(?:000|1(?:11|23))|8(?:000|91[23]))|9\\\\d{3})|9(?:8[4-7]|9[1-9])\", \r\n, , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PM:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"PM\", , , , , , , , , , , , , , , , , , [, , \"1[578]\", , , , \"17\"], , [, , \"1[578]\", , , , \"17\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PS:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , \"166\", , , , \"166\"], [, , , , , , , , , [-1]], , , , \"PS\", , , , , , , , , , , \r\n, , , , , , , [, , \"10[0-2]\", , , , \"100\"], , [, , \"1(?:0[0-2]|44|66|99)\", , , , \"199\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PR:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"PR\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PT:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 6]], , , [, , \r\n\"116(?:000|111)\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"PT\", , , , , , , , , , , , , , , , , , [, , \"11[25]\", , , , \"112\", , , [3]], , [, , \"11(?:[2578]|6(?:000|111))\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PW:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"PW\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"911\", , , , \"911\"], [, , , , , , , , , [-1]], \r\n[, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], PY:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"PY\", , , , , , , , , , , , , , , , , , [, , \"128|911\", , , , \"911\"], , [, , \"1[1-4]\\\\d|911\", , , , \"123\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], QA:[, [, , \"[129]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"QA\", , , , , , , , , , , , , , , , , \r\n, [, , \"999\", , , , \"999\", , , [3]], , [, , \"(?:1|20|9[27]\\\\d)\\\\d{2}|999\", , , , \"2012\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], RE:[, [, , \"1\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"RE\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|[578])\", , , , \"15\"], , [, , \"1(?:12|[578])\", , , , \"15\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], RO:[, [, , \"[18]\\\\d{2,5}\", , , \r\n, , , , [3, 4, 6]], , , [, , \"116(?:000|111)\", , , , \"116000\", , , [6]], [, , \"(?:1(?:18(?:300|932)|[24]\\\\d{2})|8[48]\\\\d{2})\", , , , \"8844\", , , [4, 6]], , , , \"RO\", , , , , , , , , , , , , , , , , , [, , \"112\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:2|6(?:000|111)|8(?:300|932))|[24]\\\\d{2}|9(?:21|3[02]|5[178]))|8[48]\\\\d{2}\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"(?:1[24]|8[48])\\\\d{2}\", , , , \"8844\", , , [4]]], RS:[, [, , \"[19]\\\\d{1,5}\", , , , , , , [2, 3, 4, 5, \r\n6]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"RS\", , , , , , , , , , , , , , , , , , [, , \"112|9[234]\", , , , \"112\", , , [2, 3]], , [, , \"1[189]\\\\d{1,4}|9[234]\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], RU:[, [, , \"[01]\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"RU\", , , , , , , , , , , , , , , , , , [, , \"0[1-3]|1(?:0[1-3]|12)\", , , , \"112\"], , [, , \"0[1-4]|1(?:0[1-4]|12)\", \r\n, , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], RW:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"RW\", , , , , , , , , , , , , , , , , , [, , \"112\", , , , \"112\"], , [, , \"112\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SA:[, [, , \"[19]\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"116111|937|998\", , , , \"116111\", , , [3, 6]], [, , , , , , , , , \r\n[-1]], , , , \"SA\", , , , , , , , , , , , , , , , , , [, , \"112|9(?:11|9[79])\", , , , \"999\", , , [3]], , [, , \"1(?:1(?:00|2|6111)|410|9(?:00|1[89]|9(?:099|22|91)))|9(?:0[24-79]|11|3[379]|40|66|8[5-9]|9[02-9])\", , , , \"937\"], [, , \"1410\", , , , \"1410\", , , [4]], [, , \"1(?:100|410)|90[24679]\", , , , \"902\", , , [3, 4]], , [, , , , , , , , , [-1]]], SB:[, [, , \"[127-9]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SB\", , , , , , , , , , , , , , , , , , [, , \"999\", \r\n, , , \"999\"], , [, , \"1(?:[02]\\\\d|1[12]|[35][01]|[49][1-9]|6[2-9]|7[7-9]|8[0-8])|269|777|835|9(?:[01]1|22|33|55|77|88|99)\", , , , \"100\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SC:[, [, , \"[19]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SC\", , , , , , , , , , , , , , , , , , [, , \"999\", , , , \"999\", , , [3]], , [, , \"1(?:0\\\\d|1[027]|2[0-8]|3[13]|4[0-2]|[59][15]|6[1-9]|7[124-6]|8[158])|9(?:6\\\\d{2}|99)\", , \r\n, , \"100\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SD:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SD\", , , , , , , , , , , , , , , , , , [, , \"999\", , , , \"999\"], , [, , \"999\", , , , \"999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SE:[, [, , \"[1-37-9]\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , \"11811[89]|72\\\\d{3}\", \r\n, , , \"118118\", , , [5, 6]], , , , \"SE\", , , , , , , , , , , , , , , , , , [, , \"112|90000\", , , , \"112\", , , [3, 5]], , [, , \"11(?:[25]|313|4\\\\d{2}|6(?:00[06]|11[17]|123)|7[0-8]|8(?:1(?:[02-9]\\\\d|1[013-9])|[02-46-9]\\\\d{2}))|2(?:2[02358]|33|4[01]|50|6[1-4])|32[13]|7\\\\d{4}|8(?:22|88)|9(?:0(?:000|1(?:[02-9]\\\\d|1[013-9])|[2-4]\\\\d{2}|510)|12)\", , , , \"11313\"], [, , , , , , , , , [-1]], [, , \"2(?:2[02358]|33|4[01]|50|6[1-4])|32[13]|8(?:22|88)|912\", , , , \"222\", , , [3]], , [, , \"7\\\\d{4}\", , , , \"72123\", \r\n, , [5]]], SG:[, [, , \"[179]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SG\", , , , , , , , , , , , , , , , , , [, , \"99[359]\", , , , \"999\", , , [3]], , [, , \"1(?:[0136]\\\\d{2}|[89](?:[1-9]\\\\d|0[1-9])|[57]\\\\d{2,3})|77222|99[02-9]\", , , , \"1312\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , \"77222\", , , , \"77222\", , , [5]]], SH:[, [, , \"[19]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , \r\n, \"SH\", , , , , , , , , , , , , , , , , , [, , \"9(?:11|99)\", , , , \"999\", , , [3]], , [, , \"1\\\\d{2,3}|9(?:11|99)\", , , , \"1234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SI:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 6]], , , [, , \"116(?:000|1(?:11|23))\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"SI\", , , , , , , , , , , , , , , , , , [, , \"11[23]\", , , , \"112\", , , [3]], , [, , \"11(?:[23]|6(?:000|1(?:11|23)))\", , , , \"112\"], [, , , , , , , , , [-1]], \r\n[, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SJ:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SJ\", , , , , , , , , , , , , , , , , , [, , \"11[023]\", , , , \"112\"], , [, , \"11[023]\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SK:[, [, , \"1\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"116\\\\d{3}\", , , , \"116000\", , , [6]], [, , , , , , , , , [-1]], , , , \"SK\", , , , , , , , , , , , , \r\n, , , , , [, , \"1(?:12|5[058])\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:2|6(?:000|111)|8[0-8])|[24]\\\\d{3}|5[0589]|8\\\\d{3})\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SL:[, [, , \"[069]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SL\", , , , , , , , , , , , , , , , , , [, , \"(?:01|99)9\", , , , \"999\", , , [3]], , [, , \"(?:01|99)9|60400\", , , , \"999\"], [, , , , , , , , , [-1]], [, , \"60400\", , , , \"60400\", \r\n, , [5]], , [, , \"60400\", , , , \"60400\", , , [5]]], SM:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SM\", , , , , , , , , , , , , , , , , , [, , \"11[358]\", , , , \"113\"], , [, , \"11[358]\", , , , \"113\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SN:[, [, , \"[12]\\\\d{1,5}\", , , , , , , [2, 3, 4, 5, 6]], , , [, , \"1515|2(?:00|1)\\\\d{3}\", , , , \"200133\", , , [4, 5, 6]], [, , \"2(?:0[246]|[468])\\\\d{3}\", , , , \"202222\", \r\n, , [5, 6]], , , , \"SN\", , , , , , , , , , , , , , , , , , [, , \"1[78]\", , , , \"17\", , , [2]], , [, , \"1(?:1[69]|2(?:\\\\d{2})?|[46]\\\\d{2}|51\\\\d|[78])|2(?:0[0-246]|[12468])\\\\d{3}\", , , , \"17\"], [, , \"2(?:01|2)\\\\d{3}\", , , , \"201202\", , , [5, 6]], [, , \"1[46]\\\\d{2}\", , , , \"1415\", , , [4]], , [, , \"2[468]\\\\d{3}\", , , , \"24123\", , , [5]]], SO:[, [, , \"[5789]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SO\", , , , , , , , , , , , , , , , , , [, , \"555|888|999\", \r\n, , , \"555\"], , [, , \"555|777|888|999\", , , , \"777\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SR:[, [, , \"1\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SR\", , , , , , , , , , , , , , , , , , [, , \"115\", , , , \"115\", , , [3]], , [, , \"1\\\\d{2,3}\", , , , \"1234\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], ST:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], \r\n[, , , , , , , , , [-1]], , , , \"ST\", , , , , , , , , , , , , , , , , , [, , \"112\", , , , \"112\"], , [, , \"112\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SV:[, [, , \"[49]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SV\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\", , , [3]], , [, , \"40404|911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , \"40404\", , , , \"40404\", , , [5]], , [, , \"40404\", \r\n, , , \"40404\", , , [5]]], SX:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SX\", , , , , , , , , , , , , , , , , , [, , \"919\", , , , \"919\"], , [, , \"919\", , , , \"919\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SY:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SY\", , , , , , , , , , , , , , , , , , [, , \"11[023]\", , , , \"112\"], , [, , \"11[023]\", , , , \"112\"], \r\n[, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], SZ:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"SZ\", , , , , , , , , , , , , , , , , , [, , \"999\", , , , \"999\"], , [, , \"999\", , , , \"999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TC:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TC\", , , , , , , , , , , , , , , , , , [, \r\n, \"9(?:11|99)\", , , , \"911\"], , [, , \"9(?:11|99)\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TD:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TD\", , , , , , , , , , , , , , , , , , [, , \"1[78]\", , , , \"17\"], , [, , \"1[78]\", , , , \"17\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TG:[, [, , \"1\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , \r\n, , , , , , , [-1]], , , , \"TG\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[78]|7[127])\", , , , \"117\", , , [3]], , [, , \"1(?:011|1[078]|7[127])\", , , , \"117\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TH:[, [, , \"1\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , \"1(?:1(?:00|2[03]|3[3479]|55|7[67]|9[0246])|5(?:55|78)|6(?:44|6[79]|88|9[16])|888)\", , , , \"1669\", , , [4]], [, , \"1(?:113|2(?:22|3[89])|5(?:09|56))\", , , , \"1509\", , , [4]], , , , \"TH\", , , , , , , , , \r\n, , , , , , , , , [, , \"1(?:669|9[19])\", , , , \"191\"], , [, , \"1(?:0[0-2]|1(?:0[03]|1[1-35]|2[0358]|3[03-79]|4[02-489]|5[04-9]|6[04-79]|7[03-9]|8[027-9]|9[02-79])|2(?:22|3[89])|3(?:18|2[23]|3[013]|5[56]|6[45]|73)|477|5(?:0\\\\d|4[0-37-9]|5[1-8]|6[01679]|7[12568]|8[0-24589]|9[013589])|6(?:0[0-29]|20|4[3-6]|6[1-9]|7[0257-9]|8[0158]|9[014-9])|7(?:19|7[27]|90)|888|9[19])\", , , , \"191\"], [, , \"1(?:1(?:03|1[15]|2[58]|3[056]|4[02-49]|5[046-9]|6[04-79]|7[03-589]|8[02789]|9[579])|3(?:18|2[23]|3[013]|5[4-6])|5(?:0[0-8]|4[0-378]|5[1-478]|6[01679]|7[156]|8[0-24589]|9[013589])|6(?:0[0-29]|20|4[356]|6[1-68]|7[05789]|8[015]|9[0457-9])|7(?:19|7[27]))\", \r\n, , , \"1149\", , , [4]], [, , \"114[89]\", , , , \"1148\", , , [4]], , [, , , , , , , , , [-1]]], TJ:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TJ\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[1-3]|12)\", , , , \"112\"], , [, , \"1(?:0[1-3]|12)\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TL:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TL\", , \r\n, , , , , , , , , , , , , , , , [, , \"11[25]\", , , , \"112\"], , [, , \"1(?:0[02]|1[25]|2[0138]|72|9[07])\", , , , \"102\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TM:[, [, , \"0\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TM\", , , , , , , , , , , , , , , , , , [, , \"0[1-3]\", , , , \"03\"], , [, , \"0[1-3]\", , , , \"03\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TN:[, [, , \"1\\\\d{2}\", , \r\n, , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TN\", , , , , , , , , , , , , , , , , , [, , \"19[078]\", , , , \"197\"], , [, , \"19[078]\", , , , \"197\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TO:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TO\", , , , , , , , , , , , , , , , , , [, , \"9(?:11|22|33|99)\", , , , \"911\"], , [, , \"9(?:11|22|33|99)\", , , , \"911\"], [, , , , , , , , , \r\n[-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TR:[, [, , \"[1-9]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , \"1(?:44|58|83)\", , , , \"183\", , , [3]], [, , , , , , , , , [-1]], , , , \"TR\", , , , , , , , , , , , , , , , , , [, , \"1(?:1[02]|55)\", , , , \"112\", , , [3]], , [, , \"1(?:1(?:[0239]|811)|2[16]|3(?:37?|[58]6|65)|4(?:[14]|71)|5(?:[3568]|07|78)|6(?:[02]6|[389]|99)|7[0-79]|8(?:\\\\d|63|95))|2(?:077|268|4(?:17|23)|5(?:7[26]|82)|6[14]4|8\\\\d{2}|9(?:30|89))|3(?:0(?:05|72)|353|4(?:06|30|64)|502|674|747|851|9(?:1[29]|60))|4(?:0(?:25|3[12]|[47]2)|3(?:3[13]|[89]1)|439|5(?:43|55)|717|832)|5(?:145|290|[4-6]\\\\d{2}|772|833|9(?:[06]1|92))|6(?:236|6(?:12|39|8[59])|769)|7890|8(?:688|7(?:28|65)|85[06])|9(?:159|290)\", \r\n, , , \"112\"], [, , \"2850|5420\", , , , \"5420\", , , [4]], [, , , , , , , , , [-1]], , [, , \"1(?:3(?:37|[58]6|65)|4(?:4|71)|5(?:07|78)|6(?:[02]6|99)|8(?:3|63|95))|2(?:077|268|4(?:17|23)|5(?:7[26]|82)|6[14]4|8\\\\d{2}|9(?:30|89))|3(?:0(?:05|72)|353|4(?:06|30|64)|502|674|747|851|9(?:1[29]|60))|4(?:0(?:25|3[12]|[47]2)|3(?:3[13]|[89]1)|439|5(?:43|55)|717|832)|5(?:145|290|[4-6]\\\\d{2}|772|833|9(?:[06]1|92))|6(?:236|6(?:12|39|8[59])|769)|7890|8(?:688|7(?:28|65)|85[06])|9(?:159|290)\", , , , \"5420\", , , [3, 4]]], \r\nTT:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TT\", , , , , , , , , , , , , , , , , , [, , \"99[09]\", , , , \"999\"], , [, , \"99[09]\", , , , \"999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TV:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TV\", , , , , , , , , , , , , , , , , , [, , \"911\", , , , \"911\"], , [, , \"1\\\\d{2}|911\", , , , \"911\"], [, , , , , \r\n, , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TW:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TW\", , , , , , , , , , , , , , , , , , [, , \"11[029]\", , , , \"110\"], , [, , \"11[029]\", , , , \"110\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], TZ:[, [, , \"[149]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"TZ\", , , , , , , , , , , , , , , , \r\n, , [, , \"11[12]|999\", , , , \"111\", , , [3]], , [, , \"11[12]|46400|999\", , , , \"111\"], [, , , , , , , , , [-1]], [, , \"46400\", , , , \"46400\", , , [5]], , [, , \"46400\", , , , \"46400\", , , [5]]], UA:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"UA\", , , , , , , , , , , , , , , , , , [, , \"1(?:0[123]|12)\", , , , \"112\"], , [, , \"1(?:0[123]|12)\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], UG:[, [, \r\n, \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"UG\", , , , , , , , , , , , , , , , , , [, , \"999\", , , , \"999\"], , [, , \"999\", , , , \"999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], US:[, [, , \"[1-9]\\\\d{2,5}\", , , , , , , [3, 4, 5, 6]], , , [, , \"611\", , , , \"611\", , , [3]], [, , \"2(?:4280|5209|7(?:449|663))|3(?:2340|3786|5564|8(?:135|254))|4(?:1(?:366|463)|3355|6(?:157|327)|7553|8(?:221|277))|5(?:2944|4892|5928|9(?:187|342))|69388|7(?:2(?:078|087)|3(?:288|909)|6426)|8(?:6234|9616)|9(?:5297|6(?:040|835)|7(?:294|688)|9(?:689|796))\", \r\n, , , \"24280\", , , [5]], , , , \"US\", , , , , , , , , , , , , , , , , , [, , \"112|911\", , , , \"911\", , , [3]], , [, , \"1(?:1(?:2|5[1-47]|[68]\\\\d|7[0-57]|98))|[2-9](?:11|\\\\d{3,5})\", , , , \"911\"], [, , \"2(?:3333|42242|56447|6688|75622|9002)|3(?:1010|2665|7404)|40404|560560|6(?:0060|22639|5246|7622)|7(?:0701|3822|4666)|8(?:38255|4816|72265)|99099\", , , , \"73822\", , , [5, 6]], [, , \"[2-9]\\\\d{3}|33669|[2356]11\", , , , \"33669\", , , [3, 4, 5]], , [, , \"[2-9]\\\\d{4,5}\", , , , \"20566\", , , [5, 6]]], UY:[, [, \r\n, \"[19]\\\\d{2,3}\", , , , , , , [3, 4]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"UY\", , , , , , , , , , , , , , , , , , [, , \"128|911\", , , , \"911\", , , [3]], , [, , \"1(?:0[4-9]|1[2368]|2[0-3568]|787)|911\", , , , \"104\"], [, , \"1787\", , , , \"1787\", , , [4]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], UZ:[, [, , \"[04]\\\\d{1,4}\", , , , , , , [2, 3, 5]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"UZ\", , , , , , , , , , , , , , , , , , [, , \"0(?:0[123]|[123]|50)\", \r\n, , , \"01\", , , [2, 3]], , [, , \"0(?:0[123]|[123]|50)|45400\", , , , \"01\"], [, , , , , , , , , [-1]], [, , \"45400\", , , , \"45400\", , , [5]], , [, , \"45400\", , , , \"45400\", , , [5]]], VA:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"VA\", , , , , , , , , , , , , , , , , , [, , \"11[2358]\", , , , \"113\"], , [, , \"11[2358]\", , , , \"113\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], VC:[, [, , \"9\\\\d{2}\", , , , , , \r\n, [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"VC\", , , , , , , , , , , , , , , , , , [, , \"9(?:11|99)\", , , , \"911\"], , [, , \"9(?:11|99)\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], VE:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"VE\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|71)|911\", , , , \"171\"], , [, , \"1(?:12|71)|911\", , , , \"171\"], [, , , , , , , , , [-1]], \r\n[, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], VG:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"VG\", , , , , , , , , , , , , , , , , , [, , \"9(?:11|99)\", , , , \"911\"], , [, , \"9(?:11|99)\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], VI:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"VI\", , , , , , , , , , , , , , , , , , [, , \"911\", , \r\n, , \"911\"], , [, , \"911\", , , , \"911\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], VN:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"VN\", , , , , , , , , , , , , , , , , , [, , \"11[345]\", , , , \"113\"], , [, , \"11[345]\", , , , \"113\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], VU:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], \r\n, , , \"VU\", , , , , , , , , , , , , , , , , , [, , \"112\", , , , \"112\"], , [, , \"112\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], WF:[, [, , \"1\\\\d\", , , , , , , [2]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"WF\", , , , , , , , , , , , , , , , , , [, , \"1[578]\", , , , \"15\"], , [, , \"1[578]\", , , , \"15\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], WS:[, [, , \"9\\\\d{2}\", , , , , , , [3]], , \r\n, [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"WS\", , , , , , , , , , , , , , , , , , [, , \"99[4-6]\", , , , \"994\"], , [, , \"99[4-6]\", , , , \"994\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], XK:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"XK\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|9[2-4])\", , , , \"112\"], , [, , \"1(?:12|9[2-4])\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , \r\n, , [-1]], , [, , , , , , , , , [-1]]], YE:[, [, , \"1\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"YE\", , , , , , , , , , , , , , , , , , [, , \"19[1459]\", , , , \"191\"], , [, , \"19[1459]\", , , , \"191\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], YT:[, [, , \"1\\\\d{1,2}\", , , , , , , [2, 3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"YT\", , , , , , , , , , , , , , , , , , [, , \"1(?:12|5)\", , , , \"15\"], \r\n, [, , \"1(?:12|5)\", , , , \"112\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], ZA:[, [, , \"[134]\\\\d{2,4}\", , , , , , , [3, 4, 5]], , , [, , , , , , , , , [-1]], [, , \"41(?:348|851)\", , , , \"41851\", , , [5]], , , , \"ZA\", , , , , , , , , , , , , , , , , , [, , \"1(?:0(?:1(?:11|77)|7)|12)\", , , , \"10111\", , , [3, 5]], , [, , \"1(?:0(?:1(?:11|77)|20|7)|1[12]|77(?:3[237]|[45]7|6[279]|9[26]))|[34]\\\\d{4}\", , , , \"10111\"], [, , \"3(?:078[23]|7(?:064|567)|8126)|4(?:2699|3(?:699|94[16])|7751|8837)\", \r\n, , , \"47751\", , , [5]], [, , \"1(?:07|11)\", , , , \"111\", , , [3]], , [, , \"[34]\\\\d{4}\", , , , \"47751\", , , [5]]], ZM:[, [, , \"[19]\\\\d{2}\", , , , , , , [3]], , , [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , , , \"ZM\", , , , , , , , , , , , , , , , , , [, , \"(?:112|99[139])\", , , , \"999\"], , [, , \"(?:112|99[139])\", , , , \"999\"], [, , , , , , , , , [-1]], [, , , , , , , , , [-1]], , [, , , , , , , , , [-1]]], ZW:[, [, , \"[139]\\\\d{2,4}\", , , , , , , [3, 5]], , , [, , \"9(?:5[023]|61)\", , , , \"961\", \r\n, , [3]], [, , \"3\\\\d{4}\", , , , \"30123\", , , [5]], , , , \"ZW\", , , , , , , , , , , , , , , , , , [, , \"(?:11[24]|99[3-59])\", , , , \"999\", , , [3]], , [, , \"11[2469]|9(?:5[023]|6[0-25]|9[3-59])\", , , , \"999\"], [, , , , , , , , , [-1]], [, , \"(?:114|9(?:5[023]|6[0-25]))\", , , , \"114\", , , [3]], , [, , , , , , , , , [-1]]]};\r\n/*\r\n\r\n Copyright (C) 2018 The Libphonenumber Authors.\r\n\r\n Licensed under the Apache License, Version 2.0 (the \"License\");\r\n you may not use this file except in compliance with the License.\r\n You may obtain a copy of the License at\r\n\r\n http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n Unless required by applicable law or agreed to in writing, software\r\n distributed under the License is distributed on an \"AS IS\" BASIS,\r\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n See the License for the specific language governing permissions and\r\n limitations under the License.\r\n*/\r\ni18n.phonenumbers.ShortNumberInfo = function() {\r\n  this.regionToMetadataMap = {};\r\n};\r\ngoog.addSingletonGetter(i18n.phonenumbers.ShortNumberInfo);\r\ni18n.phonenumbers.ShortNumberInfo.REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT_ = [\"BR\", \"CL\", \"NI\"];\r\ni18n.phonenumbers.ShortNumberInfo.ShortNumberCost = {TOLL_FREE:0, STANDARD_RATE:1, PREMIUM_RATE:2, UNKNOWN_COST:3};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.getRegionCodesForCountryCode_ = function(a) {\r\n  return (a = i18n.phonenumbers.metadata.countryCodeToRegionCodeMap[a]) ? a : [];\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.regionDialingFromMatchesNumber_ = function(a, b) {\r\n  var c = this.getRegionCodesForCountryCode_(a.getCountryCodeOrDefault());\r\n  return goog.array.contains(c, b);\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.isPossibleShortNumberForRegion = function(a, b) {\r\n  if (!this.regionDialingFromMatchesNumber_(a, b)) {\r\n    return !1;\r\n  }\r\n  var c = this.getMetadataForRegion_(b);\r\n  if (!c) {\r\n    return !1;\r\n  }\r\n  var d = this.getNationalSignificantNumber_(a).length;\r\n  return goog.array.contains(c.getGeneralDesc().possibleLengthArray(), d);\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.isPossibleShortNumber = function(a) {\r\n  var b = this.getRegionCodesForCountryCode_(a.getCountryCodeOrDefault());\r\n  a = this.getNationalSignificantNumber_(a).length;\r\n  for (var c = 0; c < b.length; c++) {\r\n    var d = this.getMetadataForRegion_(b[c]);\r\n    if (d && (d = d.getGeneralDesc().possibleLengthArray(), goog.array.contains(d, a))) {\r\n      return !0;\r\n    }\r\n  }\r\n  return !1;\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.isValidShortNumberForRegion = function(a, b) {\r\n  if (!this.regionDialingFromMatchesNumber_(a, b)) {\r\n    return !1;\r\n  }\r\n  var c = this.getMetadataForRegion_(b);\r\n  if (!c) {\r\n    return !1;\r\n  }\r\n  var d = this.getNationalSignificantNumber_(a), e = c.getGeneralDesc();\r\n  if (!this.matchesPossibleNumberAndNationalNumber_(d, e)) {\r\n    return !1;\r\n  }\r\n  c = c.getShortCode();\r\n  return this.matchesPossibleNumberAndNationalNumber_(d, c);\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.isValidShortNumber = function(a) {\r\n  var b = this.getRegionCodesForCountryCode_(a.getCountryCodeOrDefault()), c = this.getRegionCodeForShortNumberFromRegionList_(a, b);\r\n  return 1 < b.length && null != c ? !0 : this.isValidShortNumberForRegion(a, c);\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.getExpectedCostForRegion = function(a, b) {\r\n  var c = i18n.phonenumbers.ShortNumberInfo.ShortNumberCost;\r\n  if (!this.regionDialingFromMatchesNumber_(a, b)) {\r\n    return c.UNKNOWN_COST;\r\n  }\r\n  var d = this.getMetadataForRegion_(b);\r\n  if (!d) {\r\n    return c.UNKNOWN_COST;\r\n  }\r\n  var e = this.getNationalSignificantNumber_(a);\r\n  return goog.array.contains(d.getGeneralDesc().possibleLengthArray(), e.length) ? this.matchesPossibleNumberAndNationalNumber_(e, d.getPremiumRate()) ? c.PREMIUM_RATE : this.matchesPossibleNumberAndNationalNumber_(e, d.getStandardRate()) ? c.STANDARD_RATE : this.matchesPossibleNumberAndNationalNumber_(e, d.getTollFree()) || this.isEmergencyNumber(e, b) ? c.TOLL_FREE : c.UNKNOWN_COST : c.UNKNOWN_COST;\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.getExpectedCost = function(a) {\r\n  var b = i18n.phonenumbers.ShortNumberInfo.ShortNumberCost, c = this.getRegionCodesForCountryCode_(a.getCountryCodeOrDefault());\r\n  if (0 === c.length) {\r\n    return b.UNKNOWN_COST;\r\n  }\r\n  if (1 === c.length) {\r\n    return this.getExpectedCostForRegion(a, c[0]);\r\n  }\r\n  for (var d = b.TOLL_FREE, e = 0; e < c.length; e++) {\r\n    var f = this.getExpectedCostForRegion(a, c[e]);\r\n    switch(f) {\r\n      case b.PREMIUM_RATE:\r\n        return b.PREMIUM_RATE;\r\n      case b.UNKNOWN_COST:\r\n        d = b.UNKNOWN_COST;\r\n        break;\r\n      case b.STANDARD_RATE:\r\n        d !== b.UNKNOWN_COST && (d = b.STANDARD_RATE);\r\n        break;\r\n      case b.TOLL_FREE:\r\n        break;\r\n      default:\r\n        throw Error(\"Unrecognized cost for region: \" + f);\r\n    }\r\n  }\r\n  return d;\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.getRegionCodeForShortNumberFromRegionList_ = function(a, b) {\r\n  if (0 === b.length) {\r\n    return null;\r\n  }\r\n  if (1 === b.length) {\r\n    return b[0];\r\n  }\r\n  for (var c = this.getNationalSignificantNumber_(a), d = 0; d < b.length; d++) {\r\n    var e = b[d], f = this.getMetadataForRegion_(e);\r\n    if (f && this.matchesPossibleNumberAndNationalNumber_(c, f.getShortCode())) {\r\n      return e;\r\n    }\r\n  }\r\n  return null;\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.getSupportedRegions = function() {\r\n  return goog.array.filter(Object.keys(i18n.phonenumbers.shortnumbermetadata.countryToMetadata), function(a) {\r\n    return isNaN(a);\r\n  });\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.getExampleShortNumber = function(a) {\r\n  a = this.getMetadataForRegion_(a);\r\n  if (!a) {\r\n    return \"\";\r\n  }\r\n  a = a.getShortCode();\r\n  return a.hasExampleNumber() ? a.getExampleNumber() || \"\" : \"\";\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.getExampleShortNumberForCost = function(a, b) {\r\n  var c = this.getMetadataForRegion_(a);\r\n  if (!c) {\r\n    return \"\";\r\n  }\r\n  var d = i18n.phonenumbers.ShortNumberInfo.ShortNumberCost, e = null;\r\n  switch(b) {\r\n    case d.TOLL_FREE:\r\n      e = c.getTollFree();\r\n      break;\r\n    case d.STANDARD_RATE:\r\n      e = c.getStandardRate();\r\n      break;\r\n    case d.PREMIUM_RATE:\r\n      e = c.getPremiumRate();\r\n  }\r\n  return e && e.hasExampleNumber() ? e.getExampleNumber() || \"\" : \"\";\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.connectsToEmergencyNumber = function(a, b) {\r\n  return this.matchesEmergencyNumberHelper_(a, b, !0);\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.isEmergencyNumber = function(a, b) {\r\n  return this.matchesEmergencyNumberHelper_(a, b, !1);\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.getMetadataForRegion_ = function(a) {\r\n  if (!a) {\r\n    return null;\r\n  }\r\n  a = a.toUpperCase();\r\n  var b = this.regionToMetadataMap[a];\r\n  if (null == b) {\r\n    b = new goog.proto2.PbLiteSerializer;\r\n    var c = i18n.phonenumbers.shortnumbermetadata.countryToMetadata[a];\r\n    if (null == c) {\r\n      return null;\r\n    }\r\n    b = b.deserialize(i18n.phonenumbers.PhoneMetadata.getDescriptor(), c);\r\n    this.regionToMetadataMap[a] = b;\r\n  }\r\n  return b;\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.matchesEmergencyNumberHelper_ = function(a, b, c) {\r\n  var d = i18n.phonenumbers.PhoneNumberUtil.extractPossibleNumber(a);\r\n  if (i18n.phonenumbers.PhoneNumberUtil.LEADING_PLUS_CHARS_PATTERN.test(d)) {\r\n    return !1;\r\n  }\r\n  a = this.getMetadataForRegion_(b);\r\n  if (null == a || !a.hasEmergency()) {\r\n    return !1;\r\n  }\r\n  d = i18n.phonenumbers.PhoneNumberUtil.normalizeDigitsOnly(d);\r\n  b = c && !goog.array.contains(i18n.phonenumbers.ShortNumberInfo.REGIONS_WHERE_EMERGENCY_NUMBERS_MUST_BE_EXACT_, b);\r\n  c = a.getEmergency().getNationalNumberPatternOrDefault();\r\n  return i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(c, d) || b && i18n.phonenumbers.PhoneNumberUtil.matchesPrefix(c, d);\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.isCarrierSpecific = function(a) {\r\n  var b = this.getRegionCodesForCountryCode_(a.getCountryCodeOrDefault());\r\n  b = this.getRegionCodeForShortNumberFromRegionList_(a, b);\r\n  a = this.getNationalSignificantNumber_(a);\r\n  b = this.getMetadataForRegion_(b);\r\n  return !!b && this.matchesPossibleNumberAndNationalNumber_(a, b.getCarrierSpecific());\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.isCarrierSpecificForRegion = function(a, b) {\r\n  if (!this.regionDialingFromMatchesNumber_(a, b)) {\r\n    return !1;\r\n  }\r\n  var c = this.getNationalSignificantNumber_(a), d = this.getMetadataForRegion_(b);\r\n  return !!d && this.matchesPossibleNumberAndNationalNumber_(c, d.getCarrierSpecific());\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.isSmsServiceForRegion = function(a, b) {\r\n  if (!this.regionDialingFromMatchesNumber_(a, b)) {\r\n    return !1;\r\n  }\r\n  var c = this.getMetadataForRegion_(b), d = this.getNationalSignificantNumber_(a);\r\n  return !!c && this.matchesPossibleNumberAndNationalNumber_(d, c.getSmsServices());\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.getNationalSignificantNumber_ = function(a) {\r\n  if (!a.hasNationalNumber()) {\r\n    return \"\";\r\n  }\r\n  var b = \"\" + a.getNationalNumber();\r\n  return a.hasItalianLeadingZero() && a.getItalianLeadingZero() && 0 < a.getNumberOfLeadingZerosOrDefault() ? Array(a.getNumberOfLeadingZerosOrDefault() + 1).join(\"0\") + b : b;\r\n};\r\ni18n.phonenumbers.ShortNumberInfo.prototype.matchesPossibleNumberAndNationalNumber_ = function(a, b) {\r\n  return 0 < b.possibleLengthArray().length && !goog.array.contains(b.possibleLengthArray(), a.length) ? !1 : i18n.phonenumbers.PhoneNumberUtil.matchesEntirely(b.getNationalNumberPatternOrDefault(), a.toString());\r\n};\r\nObject.defineProperty(exports, \"__esModule\", {value:!0});\r\nexports[\"default\"] = i18n.phonenumbers;\r\nmodule.exports = exports[\"default\"];\r\n\r\n\r\n},{}]},{},[1])(1)\r\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/google-libphonenumber/dist/libphonenumber.js\n// module id = 721\n// module chunks = 0","\"use strict\";\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = require(\"@angular/core\");\r\nvar forms_1 = require(\"@angular/forms\");\r\nvar textMaskCore_1 = require(\"text-mask-core/dist/textMaskCore\");\r\nexports.MASKEDINPUT_VALUE_ACCESSOR = {\r\n    provide: forms_1.NG_VALUE_ACCESSOR,\r\n    useExisting: core_1.forwardRef(function () { return MaskedInputDirective; }),\r\n    multi: true\r\n};\r\nvar MaskedInputDirective = (function () {\r\n    function MaskedInputDirective(renderer, element) {\r\n        this.renderer = renderer;\r\n        this.element = element;\r\n        this.textMaskConfig = {\r\n            mask: [],\r\n            guide: true,\r\n            placeholderChar: '_',\r\n            pipe: undefined,\r\n            keepCharPositions: false,\r\n        };\r\n        this._onTouched = function () { };\r\n        this._onChange = function (_) { };\r\n    }\r\n    MaskedInputDirective.prototype.ngOnChanges = function (changes) {\r\n        this.setupMask(true);\r\n        if (this.textMaskInputElement !== undefined) {\r\n            this.textMaskInputElement.update(this.inputElement.value);\r\n        }\r\n    };\r\n    MaskedInputDirective.prototype.writeValue = function (value) {\r\n        this.setupMask();\r\n        // set the initial value for cases where the mask is disabled\r\n        var normalizedValue = value == null ? '' : value;\r\n        this.renderer.setElementProperty(this.inputElement, 'value', normalizedValue);\r\n        if (this.textMaskInputElement !== undefined) {\r\n            this.textMaskInputElement.update(value);\r\n        }\r\n    };\r\n    MaskedInputDirective.prototype.registerOnChange = function (fn) { this._onChange = fn; };\r\n    MaskedInputDirective.prototype.registerOnTouched = function (fn) { this._onTouched = fn; };\r\n    MaskedInputDirective.prototype.setDisabledState = function (isDisabled) {\r\n        this.renderer.setElementProperty(this.element.nativeElement, 'disabled', isDisabled);\r\n    };\r\n    MaskedInputDirective.prototype.onInput = function (value) {\r\n        this.setupMask();\r\n        if (this.textMaskInputElement !== undefined) {\r\n            this.textMaskInputElement.update(value);\r\n            // get the updated value\r\n            value = this.inputElement.value;\r\n            this._onChange(value);\r\n        }\r\n    };\r\n    MaskedInputDirective.prototype.setupMask = function (create) {\r\n        if (create === void 0) { create = false; }\r\n        if (!this.inputElement) {\r\n            if (this.element.nativeElement.tagName.toUpperCase() === 'INPUT') {\r\n                // `textMask` directive is used directly on an input element\r\n                this.inputElement = this.element.nativeElement;\r\n            }\r\n            else {\r\n                // `textMask` directive is used on an abstracted input element, `md-input-container`, etc\r\n                this.inputElement = this.element.nativeElement.getElementsByTagName('INPUT')[0];\r\n            }\r\n        }\r\n        if (this.inputElement && create) {\r\n            this.textMaskInputElement = textMaskCore_1.createTextMaskInputElement(Object.assign({ inputElement: this.inputElement }, this.textMaskConfig));\r\n        }\r\n    };\r\n    return MaskedInputDirective;\r\n}());\r\n__decorate([\r\n    core_1.Input('textMask'),\r\n    __metadata(\"design:type\", Object)\r\n], MaskedInputDirective.prototype, \"textMaskConfig\", void 0);\r\nMaskedInputDirective = __decorate([\r\n    core_1.Directive({\r\n        host: {\r\n            '(input)': 'onInput($event.target.value)',\r\n            '(blur)': '_onTouched()'\r\n        },\r\n        selector: '[textMask]',\r\n        exportAs: 'textMask',\r\n        providers: [exports.MASKEDINPUT_VALUE_ACCESSOR]\r\n    }),\r\n    __param(0, core_1.Inject(core_1.Renderer)), __param(1, core_1.Inject(core_1.ElementRef)),\r\n    __metadata(\"design:paramtypes\", [core_1.Renderer, core_1.ElementRef])\r\n], MaskedInputDirective);\r\nexports.MaskedInputDirective = MaskedInputDirective;\r\nvar TextMaskModule = (function () {\r\n    function TextMaskModule() {\r\n    }\r\n    return TextMaskModule;\r\n}());\r\nTextMaskModule = __decorate([\r\n    core_1.NgModule({\r\n        declarations: [MaskedInputDirective],\r\n        exports: [MaskedInputDirective]\r\n    })\r\n], TextMaskModule);\r\nexports.TextMaskModule = TextMaskModule;\r\nvar textMaskCore_2 = require(\"text-mask-core/dist/textMaskCore\");\r\nexports.conformToMask = textMaskCore_2.conformToMask;\r\n//# sourceMappingURL=angular2TextMask.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular2-text-mask/dist/angular2TextMask.js\n// module id = 723\n// module chunks = 0","import { Component } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup, FormControl, FormArray } from '@angular/forms';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\n\r\nimport { AgeValidator } from  '../../validators/age';\r\n\r\nimport { PhoneValidator } from './../../validators/phone.validator';\r\nimport { Country } from './application.model';\r\n\r\nimport emailMask from 'text-mask-addons/dist/emailMask';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-application',\r\n  templateUrl: 'application.html',\r\n})\r\nexport class ApplicationPage {\r\n\r\n  validations_form: FormGroup;\r\n  country_phone_group: FormGroup;\r\n\r\n  emailMask = emailMask;\r\n\r\n  countries: Array<Country>;\r\n  genders: Array<string>;\r\n  yesOrNo: Array<string>;\r\n  modelOfMotorcycles: Array<string>;\r\n  maritalStatus: Array<string>;\r\n  annualSalary: Array<string>;\r\n  highestEducation: Array<string>;\r\n  bloodTypes: Array<string>;\r\n  memberTitles: Array<string>;\r\n  typeOfMemberships: Array<string>;\r\n  typeOfChapters: Array<string>;\r\n\r\n  submitAttempt: boolean = false;\r\n\r\n  constructor(\r\n    public navCtrl: NavController, \r\n    public navParams: NavParams, \r\n    public formBuilder: FormBuilder) {\r\n      //   bio: ['']\r\n  }\r\n\r\n  save(){\r\n   }\r\n\r\n  ionViewDidLoad() {\r\n    console.log('ionViewDidLoad ApplicationPage');\r\n  }\r\n\r\n  ionViewWillLoad() {\r\n    this.countries = [\r\n      new Country('US', 'United States'),\r\n      new Country('UY', 'Uruguay'),\r\n      new Country('AR', 'Argentina')\r\n    ];\r\n\r\n    this.genders = [\"Male\", \"Female\"];\r\n    this.yesOrNo = [\"Yes\", \"No\"];\r\n    this.modelOfMotorcycles = [\"Harley\", \"Honda\", \"Suzuki\", \"Kawasaki\", \"BMW\", \"Yamaha\"];\r\n    this.maritalStatus = [\"Married\", \"Single\", \"Divorced\", \"Widowed\" ];\r\n    this.annualSalary = [\"Retired\", \"$20,000 ~ $40,000\", \"$50,000 ~ $70,000\", \"$80,000 +\", \"UnEmployed\"];\r\n    this.highestEducation = [\"Self Taught\", \"Home Schooled\", \"High School\", \"Vocational School\", \"College\"];\r\n    this.bloodTypes = [\"O+\", \"A+\", \"B+\", \"AB+\", \"O-\", \"A-\", \"B-\", \"AB-\"];\r\n    this.memberTitles = [\"No Title\", \"President\", \"Vice President\", \"Treasurer\", \"Secretary\", \"Business Manager\", \"Motor Touring Officer\", \"Sgt of Arms\", \"Road Captain\", \"Retired\"];\r\n    this.typeOfMemberships = [\"Full Color Member\", \"DAMA\", \"Spousal/Pareja\", \"Prospect\", \"Probate\", \"Associate/Asociado\"];\r\n    this.typeOfChapters = [\"Organized Chapter/Capitulo\", \"Establishing Chapter/Capitulo Estableciendo\", \"Brother Chapter/Capítulo hermano\"];\r\n\r\n    let country = new FormControl(this.countries[0], Validators.required);\r\n    let phone = new FormControl('', Validators.compose([Validators.required, PhoneValidator.validCountryPhone(country)]));\r\n\r\n    this.country_phone_group = new FormGroup({\r\n      country: country,\r\n      phone: phone\r\n    });\r\n\r\n    this.validations_form = this.formBuilder.group({\r\n      firstName: ['', Validators.compose([Validators.required, Validators.maxLength(16), Validators.pattern('[a-zA-Z ]*')])],\r\n      lastName: ['', Validators.compose([Validators.required, Validators.maxLength(16), Validators.pattern('[a-zA-Z ]*')])],\r\n      email: new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])),\r\n      address: ['', Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])],\r\n      city: ['', Validators.compose([Validators.maxLength(16), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n      state: ['', Validators.compose([Validators.maxLength(16), Validators.pattern('[a-zA-Z ]*'), Validators.required])],\r\n      zipCode: ['', Validators.compose([Validators.maxLength(10), Validators.pattern('[0-9 ]*'), Validators.required])],\r\n      country_phone: this.country_phone_group,\r\n      gender: [(this.genders[0], Validators.required)],\r\n      age: ['', Validators.required],\r\n      placeOfBirth: ['', Validators.compose([Validators.required, Validators.maxLength(16), Validators.pattern('[a-zA-Z ]*')])],\r\n      yearsRiding: ['', Validators.required],\r\n      haveMotorcycleLicense: new FormControl(this.yesOrNo[0], Validators.required),\r\n      modelOfMotorcycle1: new FormControl(this.modelOfMotorcycles[0], Validators.required),\r\n      modelOfMotorcycle2: new FormControl(this.modelOfMotorcycles[0], Validators.required),\r\n      modelOfMotorcycle3: new FormControl(this.modelOfMotorcycles[0], Validators.required),\r\n      licensePlate1: ['', Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])],\r\n      licensePlate2: ['', Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])],\r\n      licensePlate3: ['', Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])],\r\n      anyOtherClub: new FormControl(this.yesOrNo[0], Validators.required),\r\n      nameOfOtherClub: ['', Validators.compose([Validators.required, Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*')])],\r\n      maritalStatus: new FormControl(this.maritalStatus[0], Validators.required),\r\n      numberOfChildren: ['', Validators.required],\r\n      nameOfEmployer: ['', Validators.compose([Validators.required, Validators.maxLength(16), Validators.pattern('[a-zA-Z ]*')])],\r\n      yearsEmployed: ['', Validators.required],\r\n      occupation: ['', Validators.compose([Validators.required, Validators.maxLength(16), Validators.pattern('[a-zA-Z ]*')])],\r\n      annualSalary: new FormControl(this.annualSalary[0], Validators.required),\r\n      highestEducation: new FormControl(this.highestEducation[0], Validators.required),\r\n      skillsPastimes: ['', Validators.compose([Validators.required, Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*')])],\r\n      bloodType: ['', new FormControl(this.bloodTypes[0], Validators.required)],\r\n      allergies: ['', Validators.compose([Validators.required, Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*')])],\r\n      organDonar: new FormControl(this.yesOrNo[0], Validators.required),\r\n      memberTitle: [(this.memberTitles[0], Validators.required)],\r\n      typeOfMembership: [(this.typeOfMemberships[0], Validators.required)],\r\n      typeOfChapter: [(this.typeOfChapters[0], Validators.required)],\r\n      motorcycles: this.formBuilder.array([\r\n        this.getInitialMotorcycle()\r\n      ])\r\n    });\r\n\r\n  }\r\n\r\n  getInitialMotorcycle() {\r\n    return this.formBuilder.group({\r\n      color: [''],\r\n      year: [''],\r\n      make: [''],\r\n      model: [''],\r\n      licensePlate: [''],\r\n      currentMileage: [''],\r\n    });\r\n  }\r\n\r\n  addMotorcycle() {\r\n    const control = <FormArray>this.validations_form.controls['motorcycles'];\r\n    control.push(this.getInitialMotorcycle());\r\n  }\r\n\r\n  removeMotorcycle(i: number) {\r\n    const control = <FormArray>this.validations_form.controls['motorcycles'];\r\n    control.removeAt(i);\r\n  }\r\n\r\n  validation_messages = {\r\n    'firstName': [{type: 'required', message: 'First Name is required.'}],\r\n    'lastName': [{type: 'required', message: 'Last Name is required.'}],\r\n    'email': [{type: 'required', message: 'Email is required.' }, {type: 'pattern', message: 'Enter a valid email.'}],\r\n    'address': [{type: 'required', message: 'Address is required.'}],\r\n    'city': [{type: 'required', message: 'City is required.'}],\r\n    'state': [{type: 'required', message: 'State is required.'}],\r\n    'zipCode': [{type: 'required', message: 'Zip Code is required.'}, {type: 'pattern', message: 'Enter a valid Zip Code.'}],\r\n    'phone': [{ type: 'required', message: 'Phone is required.' }, { type: 'validCountryPhone', message: 'Phone incorrect for the country selected' }],\r\n    'gender': [{ type: 'required', message: 'Gender is required.' }],\r\n    'age': [{ type: 'required', message: 'Age is required.' }],\r\n    'placeOfBirth': [{type: 'required', message: 'Place of Birth is required.'}],\r\n    'yearsRiding': [{ type: 'required', message: 'Years Riding is required.' }],\r\n    'licensePlate1': [{type: 'required', message: 'License Plate #1 is required.'}],\r\n    'licensePlate2': [{type: 'required', message: 'License Plate #2 is required.'}],\r\n    'licensePlate3': [{type: 'required', message: 'License Plate #3 is required.'}],\r\n    'nameOfOtherClub': [{type: 'required', message: 'If YES enter club.'}],\r\n    'nameOfEmployer': [{type: 'required', message: 'Name of employer is required, if Employed.'}],\r\n    'yearsEmployed': [{ type: 'required', message: 'Years Employed is required, if Employed.' }],\r\n    'occupation': [{type: 'required', message: 'Occupation is required.'}],\r\n    'skillsPastimes': [{type: 'required', message: 'skillsPastimes is required.'}],\r\n    'allergies': [{type: 'required', message: 'allergies is required.'}],\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/application/application.ts","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\nimport libphonenumber from 'google-libphonenumber';\r\n\r\nexport class PhoneValidator {\r\n\r\n  // Inspired on: https://github.com/yuyang041060120/ng2-validation/blob/master/src/equal-to/validator.ts\r\n  static validCountryPhone = (countryControl: AbstractControl): ValidatorFn => {\r\n    let subscribe: boolean = false;\r\n\r\n    return (phoneControl: AbstractControl): {[key: string]: boolean} => {\r\n      if (!subscribe) {\r\n        subscribe = true;\r\n        countryControl.valueChanges.subscribe(() => {\r\n          phoneControl.updateValueAndValidity();\r\n        });\r\n      }\r\n\r\n      if(phoneControl.value !== \"\"){\r\n        try{\r\n          const phoneUtil = libphonenumber.PhoneNumberUtil.getInstance();\r\n          let phoneNumber = \"\" + phoneControl.value + \"\",\r\n              region = countryControl.value.iso,\r\n              number = phoneUtil.parse(phoneNumber, region),\r\n              isValidNumber = phoneUtil.isValidNumber(number);\r\n\r\n          if(isValidNumber){\r\n            return null;\r\n          }\r\n        }catch(e){\r\n          // console.log(e);\r\n          return {\r\n            validCountryPhone: true\r\n          };\r\n        }\r\n\r\n        return {\r\n          validCountryPhone: true\r\n        };\r\n      }\r\n      else{\r\n        return null;\r\n      }\r\n    };\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/phone.validator.ts","import libphonenumber from 'google-libphonenumber';\r\n\r\nexport class Country {\r\n  iso: string;\r\n  name: string;\r\n  code: string;\r\n  sample_phone: string;\r\n  phone_mask: Array<Object>;\r\n\r\n  constructor (iso: string, name: string) {\r\n    this.iso = iso;\r\n    this.name = name;\r\n\r\n    let phoneUtil = libphonenumber.PhoneNumberUtil.getInstance(),\r\n        PNF = libphonenumber.PhoneNumberFormat,\r\n        PNT = libphonenumber.PhoneNumberType,\r\n        country_example_number = phoneUtil.getExampleNumberForType(this.iso, PNT.MOBILE),\r\n        // We need to define what kind of country phone number type we are going to use as a mask.\r\n        // You can choose between many types including:\r\n        //    - FIXED_LINE\r\n        //    - MOBILE\r\n        //    - For more types please refer to google libphonenumber repo (https://github.com/googlei18n/libphonenumber/blob/f9e9424769964ce1970c6ed2bd60b25b976dfe6f/javascript/i18n/phonenumbers/phonenumberutil.js#L913)\r\n        example_number_formatted = phoneUtil.format(country_example_number, PNF.NATIONAL);\r\n        // We need to define how are we going to format the phone number\r\n        // You can choose between many formats including:\r\n        //    - NATIONAL\r\n        //    - INTERNATIONAL\r\n        //    - E164\r\n        //    - RFC3966\r\n\r\n    this.sample_phone = example_number_formatted;\r\n    this.code = \"+\" + country_example_number.getCountryCode();\r\n\r\n    // Now let's transform the formatted example number into a valid text-mask\r\n    // Inspired in text-mask example (https://github.com/text-mask/text-mask/blob/master/componentDocumentation.md#included-conformtomask)\r\n    this.phone_mask = this.getMaskFromString(example_number_formatted);\r\n  }\r\n\r\n  getMaskFromString(string: string): Array<Object> {\r\n    let _string_chars = string.split(''),\r\n        _digit_reg_exp = new RegExp(/\\d/),\r\n        _mask = _string_chars.map((char) => {\r\n          // Replace any digit with a digit RegExp\r\n          return (_digit_reg_exp.test(char)) ? _digit_reg_exp : char;\r\n        });\r\n\r\n    return _mask;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/application/application.model.ts","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof exports?exports.emailMask=t():e.emailMask=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var u=n[r]={exports:{},id:r,loaded:!1};return e[r].call(u.exports,u,u.exports,t),u.loaded=!0,u.exports}var n={};return t.m=e,t.c=n,t.p=\"\",t(0)}([function(e,t,n){e.exports=n(3)},,,function(e,t,n){\"use strict\";function r(e){return e&&e.__esModule?e:{default:e}}function u(e,t){e=e.replace(y,h);var n=t.placeholderChar,r=t.currentCaretPosition,u=e.indexOf(x),s=e.lastIndexOf(d),f=s<u?-1:s,p=o(e,u+1,x),g=o(e,f-1,d),v=c(e,u,n),m=i(e,u,f,n),O=a(e,f,n,r);v=l(v),m=l(m),O=l(O,!0);var b=v.concat(p).concat(m).concat(g).concat(O);return b}function o(e,t,n){var r=[];return e[t]===n?r.push(n):r.push(g,n),r.push(g),r}function c(e,t){return t===-1?e:e.slice(0,t)}function i(e,t,n,r){var u=h;return t!==-1&&(u=n===-1?e.slice(t+1,e.length):e.slice(t+1,n)),u=u.replace(new RegExp(\"[\\\\s\"+r+\"]\",m),h),u===x?p:u.length<1?v:u[u.length-1]===d?u.slice(0,u.length-1):u}function a(e,t,n,r){var u=h;return t!==-1&&(u=e.slice(t+1,e.length)),u=u.replace(new RegExp(\"[\\\\s\"+n+\".]\",m),h),0===u.length?e[t-1]===d&&r!==e.length?p:h:u}function l(e,t){return e.split(h).map(function(e){return e===v?e:t?b:O})}Object.defineProperty(t,\"__esModule\",{value:!0});var s=n(4),f=r(s),p=\"*\",d=\".\",h=\"\",x=\"@\",g=\"[]\",v=\" \",m=\"g\",O=/[^\\s]/,b=/[^.\\s]/,y=/\\s/g;t.default={mask:u,pipe:f.default}},function(e,t){\"use strict\";function n(e,t){var n=t.currentCaretPosition,o=t.rawValue,p=t.previousConformedValue,d=t.placeholderChar,h=e;h=r(h);var x=h.indexOf(i),g=null===o.match(new RegExp(\"[^@\\\\s.\"+d+\"]\"));if(g)return c;if(h.indexOf(l)!==-1||x!==-1&&n!==x+1||o.indexOf(u)===-1&&p!==c&&o.indexOf(a)!==-1)return!1;var v=h.indexOf(u),m=h.slice(v+1,h.length);return(m.match(f)||s).length>1&&h.substr(-1)===a&&n!==o.length&&(h=h.slice(0,h.length-1)),h}function r(e){var t=0;return e.replace(o,function(){return t++,1===t?u:c})}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=n;var u=\"@\",o=/@/g,c=\"\",i=\"@.\",a=\".\",l=\"..\",s=[],f=/\\./g}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/text-mask-addons/dist/emailMask.js\n// module id = 727\n// module chunks = 0"],"sourceRoot":""}